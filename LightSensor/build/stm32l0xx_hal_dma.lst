ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l0xx_hal_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	__aeabi_uidiv
  18              		.section	.text.HAL_DMA_Init,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_DMA_Init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_DMA_Init:
  26              	.LFB47:
  27              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @file    stm32l0xx_hal_dma.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *         This file provides firmware functions to manage the following
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *         functionalities of the Direct Memory Access (DMA) peripheral:
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *           + IO operation functions
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *           + Peripheral State and errors functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   @verbatim
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   ==============================================================================
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****                         ##### How to use this driver #####
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   ==============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   [..]
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Channel
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (except for internal SRAM / FLASH memories: no initialization is
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        necessary).
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****    (#) For a given Channel, program the required configuration through the following parameters:
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        Channel request, Transfer Direction, Source and Destination data formats,
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        Circular or Normal mode, Channel Priority level, Source and Destination Increment mode
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        using HAL_DMA_Init() function.
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****    (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of er
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        detection.
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****    (#) Use HAL_DMA_Abort() function to abort the current transfer
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 2


  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      *** Polling mode IO operation ***
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      =================================
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     [..]
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****               address and destination address and the Length of data to be transferred
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      ===================================
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     [..]
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ()
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred.
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****               In this case the DMA interrupt is configured
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****               add his own function to register callbacks with HAL_DMA_RegisterCallback().
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      =============================================
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       [..]
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        Below the list of macros in DMA HAL driver.
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE: Enable the specified DMA Channel.
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE: Disable the specified DMA Channel.
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_GET_FLAG: Get the DMA Channel pending flags.
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_CLEAR_FLAG: Clear the DMA Channel pending flags.
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_ENABLE_IT: Enable the specified DMA Channel interrupts.
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_DISABLE_IT: Disable the specified DMA Channel interrupts.
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****        (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Channel interrupt has occurred 
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      [..]
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   @endverbatim
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   ******************************************************************************
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @attention
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics.
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * All rights reserved.</center></h2>
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * the "License"; You may not use this file except in compliance with the
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * License. You may obtain a copy of the License at:
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   ******************************************************************************
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** #include "stm32l0xx_hal.h"
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @addtogroup STM32L0xx_HAL_Driver
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 3


  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @defgroup DMA DMA
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief DMA HAL module driver
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /* Private typedef -----------------------------------------------------------*/
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @defgroup DMA_Private_Functions DMA Private Functions
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @}
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions DMA Exported Functions
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group1 Initialization and de-initialization functions
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  *  @brief   Initialization and de-initialization functions
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  *
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** @verbatim
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  ===============================================================================
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  ===============================================================================
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     [..]
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Channel source
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction,
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Channel priority value.
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     [..]
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     reference manual.
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** @endverbatim
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and initialize the associated handle.
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
  28              		.loc 1 140 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 4


  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   uint32_t tmp;
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(hdma == NULL)
  44              		.loc 1 144 5
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     return HAL_ERROR;
  48              		.loc 1 146 12
  49 000e 0123     		movs	r3, #1
  50 0010 61E0     		b	.L3
  51              	.L2:
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the parameters */
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_REQUEST(hdma->Init.Request));
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Compute the channel index */
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Only one DMA: DMA1 */
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
  52              		.loc 1 162 40
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 1B68     		ldr	r3, [r3]
  55              		.loc 1 162 51
  56 0016 324A     		ldr	r2, .L5
  57 0018 9446     		mov	ip, r2
  58 001a 6344     		add	r3, r3, ip
  59              		.loc 1 162 78
  60 001c 1421     		movs	r1, #20
  61 001e 1800     		movs	r0, r3
  62 0020 FFF7FEFF 		bl	__aeabi_uidiv
  63 0024 0300     		movs	r3, r0
  64              		.loc 1 162 133
  65 0026 9A00     		lsls	r2, r3, #2
  66              		.loc 1 162 22
  67 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 5


  68 002a 5A64     		str	r2, [r3, #68]
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
  69              		.loc 1 163 24
  70 002c 7B68     		ldr	r3, [r7, #4]
  71 002e 2D4A     		ldr	r2, .L5+4
  72 0030 1A64     		str	r2, [r3, #64]
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Change DMA peripheral state */
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  73              		.loc 1 166 15
  74 0032 7B68     		ldr	r3, [r7, #4]
  75 0034 2522     		movs	r2, #37
  76 0036 0221     		movs	r1, #2
  77 0038 9954     		strb	r1, [r3, r2]
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Get the CR register value */
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   tmp = hdma->Instance->CCR;
  78              		.loc 1 169 13
  79 003a 7B68     		ldr	r3, [r7, #4]
  80 003c 1B68     		ldr	r3, [r3]
  81              		.loc 1 169 7
  82 003e 1B68     		ldr	r3, [r3]
  83 0040 FB60     		str	r3, [r7, #12]
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Clear PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR and MEM2MEM bits */
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_CCR_PL    | DMA_CCR_MSIZE  | DMA_CCR_PSIZE  |
  84              		.loc 1 172 7
  85 0042 FB68     		ldr	r3, [r7, #12]
  86 0044 284A     		ldr	r2, .L5+8
  87 0046 1340     		ands	r3, r2
  88 0048 FB60     		str	r3, [r7, #12]
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****                       DMA_CCR_MINC  | DMA_CCR_PINC   | DMA_CCR_CIRC   |
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****                       DMA_CCR_DIR   | DMA_CCR_MEM2MEM));
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Prepare the DMA Channel configuration */
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   tmp |=  hdma->Init.Direction        |
  89              		.loc 1 177 21
  90 004a 7B68     		ldr	r3, [r7, #4]
  91 004c 9A68     		ldr	r2, [r3, #8]
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
  92              		.loc 1 178 21
  93 004e 7B68     		ldr	r3, [r7, #4]
  94 0050 DB68     		ldr	r3, [r3, #12]
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
  95              		.loc 1 177 39
  96 0052 1A43     		orrs	r2, r3
  97              		.loc 1 178 54
  98 0054 7B68     		ldr	r3, [r7, #4]
  99 0056 1B69     		ldr	r3, [r3, #16]
 100              		.loc 1 178 42
 101 0058 1A43     		orrs	r2, r3
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 102              		.loc 1 179 21
 103 005a 7B68     		ldr	r3, [r7, #4]
 104 005c 5B69     		ldr	r3, [r3, #20]
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 105              		.loc 1 178 72
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 6


 106 005e 1A43     		orrs	r2, r3
 107              		.loc 1 179 54
 108 0060 7B68     		ldr	r3, [r7, #4]
 109 0062 9B69     		ldr	r3, [r3, #24]
 110              		.loc 1 179 42
 111 0064 1A43     		orrs	r2, r3
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 112              		.loc 1 180 21
 113 0066 7B68     		ldr	r3, [r7, #4]
 114 0068 DB69     		ldr	r3, [r3, #28]
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 115              		.loc 1 179 72
 116 006a 1A43     		orrs	r2, r3
 117              		.loc 1 180 54
 118 006c 7B68     		ldr	r3, [r7, #4]
 119 006e 1B6A     		ldr	r3, [r3, #32]
 120              		.loc 1 180 42
 121 0070 1343     		orrs	r3, r2
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 122              		.loc 1 177 7
 123 0072 FA68     		ldr	r2, [r7, #12]
 124 0074 1343     		orrs	r3, r2
 125 0076 FB60     		str	r3, [r7, #12]
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Write to DMA Channel CR register */
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->Instance->CCR = tmp;
 126              		.loc 1 183 7
 127 0078 7B68     		ldr	r3, [r7, #4]
 128 007a 1B68     		ldr	r3, [r3]
 129              		.loc 1 183 23
 130 007c FA68     		ldr	r2, [r7, #12]
 131 007e 1A60     		str	r2, [r3]
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Set request selection */
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(hdma->Init.Direction != DMA_MEMORY_TO_MEMORY)
 132              		.loc 1 186 16
 133 0080 7B68     		ldr	r3, [r7, #4]
 134 0082 9A68     		ldr	r2, [r3, #8]
 135              		.loc 1 186 5
 136 0084 8023     		movs	r3, #128
 137 0086 DB01     		lsls	r3, r3, #7
 138 0088 9A42     		cmp	r2, r3
 139 008a 18D0     		beq	.L4
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Write to DMA channel selection register */
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Reset request selection for DMA1 Channelx */
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     DMA1_CSELR->CSELR &= ~(DMA_CSELR_C1S << (hdma->ChannelIndex & 0x1cU));
 140              		.loc 1 190 23
 141 008c 174B     		ldr	r3, .L5+12
 142 008e 1A68     		ldr	r2, [r3]
 143              		.loc 1 190 50
 144 0090 7B68     		ldr	r3, [r7, #4]
 145 0092 5B6C     		ldr	r3, [r3, #68]
 146              		.loc 1 190 65
 147 0094 1C21     		movs	r1, #28
 148 0096 0B40     		ands	r3, r1
 149              		.loc 1 190 42
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 7


 150 0098 0F21     		movs	r1, #15
 151 009a 9940     		lsls	r1, r1, r3
 152 009c 0B00     		movs	r3, r1
 153              		.loc 1 190 26
 154 009e D943     		mvns	r1, r3
 155              		.loc 1 190 23
 156 00a0 124B     		ldr	r3, .L5+12
 157 00a2 0A40     		ands	r2, r1
 158 00a4 1A60     		str	r2, [r3]
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure request selection for DMA1 Channelx */
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     DMA1_CSELR->CSELR |= (uint32_t) (hdma->Init.Request << (hdma->ChannelIndex & 0x1cU));
 159              		.loc 1 193 23
 160 00a6 114B     		ldr	r3, .L5+12
 161 00a8 1968     		ldr	r1, [r3]
 162              		.loc 1 193 48
 163 00aa 7B68     		ldr	r3, [r7, #4]
 164 00ac 5A68     		ldr	r2, [r3, #4]
 165              		.loc 1 193 65
 166 00ae 7B68     		ldr	r3, [r7, #4]
 167 00b0 5B6C     		ldr	r3, [r3, #68]
 168              		.loc 1 193 80
 169 00b2 1C20     		movs	r0, #28
 170 00b4 0340     		ands	r3, r0
 171              		.loc 1 193 57
 172 00b6 9A40     		lsls	r2, r2, r3
 173              		.loc 1 193 23
 174 00b8 0C4B     		ldr	r3, .L5+12
 175 00ba 0A43     		orrs	r2, r1
 176 00bc 1A60     		str	r2, [r3]
 177              	.L4:
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Initialise the error code */
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 178              		.loc 1 197 19
 179 00be 7B68     		ldr	r3, [r7, #4]
 180 00c0 0022     		movs	r2, #0
 181 00c2 DA63     		str	r2, [r3, #60]
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Initialize the DMA state*/
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->State  = HAL_DMA_STATE_READY;
 182              		.loc 1 200 16
 183 00c4 7B68     		ldr	r3, [r7, #4]
 184 00c6 2522     		movs	r2, #37
 185 00c8 0121     		movs	r1, #1
 186 00ca 9954     		strb	r1, [r3, r2]
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Allocate lock resource and initialize it */
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->Lock = HAL_UNLOCKED;
 187              		.loc 1 203 14
 188 00cc 7B68     		ldr	r3, [r7, #4]
 189 00ce 2422     		movs	r2, #36
 190 00d0 0021     		movs	r1, #0
 191 00d2 9954     		strb	r1, [r3, r2]
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return HAL_OK;
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 8


 192              		.loc 1 205 10
 193 00d4 0023     		movs	r3, #0
 194              	.L3:
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 195              		.loc 1 206 1
 196 00d6 1800     		movs	r0, r3
 197 00d8 BD46     		mov	sp, r7
 198 00da 04B0     		add	sp, sp, #16
 199              		@ sp needed
 200 00dc 80BD     		pop	{r7, pc}
 201              	.L6:
 202 00de C046     		.align	2
 203              	.L5:
 204 00e0 F8FFFDBF 		.word	-1073872904
 205 00e4 00000240 		.word	1073872896
 206 00e8 0F80FFFF 		.word	-32753
 207 00ec A8000240 		.word	1073873064
 208              		.cfi_endproc
 209              	.LFE47:
 211              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 212              		.align	1
 213              		.global	HAL_DMA_DeInit
 214              		.syntax unified
 215              		.code	16
 216              		.thumb_func
 218              	HAL_DMA_DeInit:
 219              	.LFB48:
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  DeInitialize the DMA peripheral.
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 220              		.loc 1 215 1
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 8
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224 0000 80B5     		push	{r7, lr}
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229 0002 82B0     		sub	sp, sp, #8
 230              	.LCFI4:
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              	.LCFI5:
 234              		.cfi_def_cfa_register 7
 235 0006 7860     		str	r0, [r7, #4]
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the DMA handle allocation */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if (NULL == hdma )
 236              		.loc 1 218 6
 237 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 9


 238 000a 002B     		cmp	r3, #0
 239 000c 01D1     		bne	.L8
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     return HAL_ERROR;
 240              		.loc 1 220 12
 241 000e 0123     		movs	r3, #1
 242 0010 4AE0     		b	.L9
 243              	.L8:
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the parameters */
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_ALL_INSTANCE(hdma->Instance));
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Disable the selected DMA Channelx */
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 244              		.loc 1 227 3
 245 0012 7B68     		ldr	r3, [r7, #4]
 246 0014 1B68     		ldr	r3, [r3]
 247 0016 1A68     		ldr	r2, [r3]
 248 0018 7B68     		ldr	r3, [r7, #4]
 249 001a 1B68     		ldr	r3, [r3]
 250 001c 0121     		movs	r1, #1
 251 001e 8A43     		bics	r2, r1
 252 0020 1A60     		str	r2, [r3]
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Compute the channel index */
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* DMA1 */
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->ChannelIndex = (((uint32_t)hdma->Instance - (uint32_t)DMA1_Channel1) / ((uint32_t)DMA1_Chan
 253              		.loc 1 231 40
 254 0022 7B68     		ldr	r3, [r7, #4]
 255 0024 1B68     		ldr	r3, [r3]
 256              		.loc 1 231 51
 257 0026 224A     		ldr	r2, .L10
 258 0028 9446     		mov	ip, r2
 259 002a 6344     		add	r3, r3, ip
 260              		.loc 1 231 78
 261 002c 1421     		movs	r1, #20
 262 002e 1800     		movs	r0, r3
 263 0030 FFF7FEFF 		bl	__aeabi_uidiv
 264 0034 0300     		movs	r3, r0
 265              		.loc 1 231 133
 266 0036 9A00     		lsls	r2, r3, #2
 267              		.loc 1 231 22
 268 0038 7B68     		ldr	r3, [r7, #4]
 269 003a 5A64     		str	r2, [r3, #68]
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->DmaBaseAddress = DMA1;
 270              		.loc 1 232 24
 271 003c 7B68     		ldr	r3, [r7, #4]
 272 003e 1D4A     		ldr	r2, .L10+4
 273 0040 1A64     		str	r2, [r3, #64]
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Reset DMA Channel control register */
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->Instance->CCR  = 0U;
 274              		.loc 1 235 7
 275 0042 7B68     		ldr	r3, [r7, #4]
 276 0044 1B68     		ldr	r3, [r3]
 277              		.loc 1 235 24
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 10


 278 0046 0022     		movs	r2, #0
 279 0048 1A60     		str	r2, [r3]
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Clear all flags */
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1cU));
 280              		.loc 1 238 54
 281 004a 7B68     		ldr	r3, [r7, #4]
 282 004c 5B6C     		ldr	r3, [r3, #68]
 283              		.loc 1 238 69
 284 004e 1C22     		movs	r2, #28
 285 0050 1A40     		ands	r2, r3
 286              		.loc 1 238 7
 287 0052 7B68     		ldr	r3, [r7, #4]
 288 0054 1B6C     		ldr	r3, [r3, #64]
 289              		.loc 1 238 46
 290 0056 0121     		movs	r1, #1
 291 0058 9140     		lsls	r1, r1, r2
 292 005a 0A00     		movs	r2, r1
 293              		.loc 1 238 30
 294 005c 5A60     		str	r2, [r3, #4]
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Reset DMA channel selection register */
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* DMA1 */
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   DMA1_CSELR->CSELR &= ~(DMA_CSELR_C1S << (hdma->ChannelIndex & 0x1cU));
 295              		.loc 1 242 21
 296 005e 164B     		ldr	r3, .L10+8
 297 0060 1A68     		ldr	r2, [r3]
 298              		.loc 1 242 48
 299 0062 7B68     		ldr	r3, [r7, #4]
 300 0064 5B6C     		ldr	r3, [r3, #68]
 301              		.loc 1 242 63
 302 0066 1C21     		movs	r1, #28
 303 0068 0B40     		ands	r3, r1
 304              		.loc 1 242 40
 305 006a 0F21     		movs	r1, #15
 306 006c 9940     		lsls	r1, r1, r3
 307 006e 0B00     		movs	r3, r1
 308              		.loc 1 242 24
 309 0070 D943     		mvns	r1, r3
 310              		.loc 1 242 21
 311 0072 114B     		ldr	r3, .L10+8
 312 0074 0A40     		ands	r2, r1
 313 0076 1A60     		str	r2, [r3]
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Clean callbacks */
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 314              		.loc 1 245 26
 315 0078 7B68     		ldr	r3, [r7, #4]
 316 007a 0022     		movs	r2, #0
 317 007c DA62     		str	r2, [r3, #44]
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 318              		.loc 1 246 30
 319 007e 7B68     		ldr	r3, [r7, #4]
 320 0080 0022     		movs	r2, #0
 321 0082 1A63     		str	r2, [r3, #48]
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 322              		.loc 1 247 27
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 11


 323 0084 7B68     		ldr	r3, [r7, #4]
 324 0086 0022     		movs	r2, #0
 325 0088 5A63     		str	r2, [r3, #52]
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 326              		.loc 1 248 27
 327 008a 7B68     		ldr	r3, [r7, #4]
 328 008c 0022     		movs	r2, #0
 329 008e 9A63     		str	r2, [r3, #56]
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Initialise the error code */
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 330              		.loc 1 251 19
 331 0090 7B68     		ldr	r3, [r7, #4]
 332 0092 0022     		movs	r2, #0
 333 0094 DA63     		str	r2, [r3, #60]
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Initialize the DMA state */
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 334              		.loc 1 254 15
 335 0096 7B68     		ldr	r3, [r7, #4]
 336 0098 2522     		movs	r2, #37
 337 009a 0021     		movs	r1, #0
 338 009c 9954     		strb	r1, [r3, r2]
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Release Lock */
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 339              		.loc 1 257 3
 340 009e 7B68     		ldr	r3, [r7, #4]
 341 00a0 2422     		movs	r2, #36
 342 00a2 0021     		movs	r1, #0
 343 00a4 9954     		strb	r1, [r3, r2]
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return HAL_OK;
 344              		.loc 1 259 10
 345 00a6 0023     		movs	r3, #0
 346              	.L9:
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 347              		.loc 1 260 1
 348 00a8 1800     		movs	r0, r3
 349 00aa BD46     		mov	sp, r7
 350 00ac 02B0     		add	sp, sp, #8
 351              		@ sp needed
 352 00ae 80BD     		pop	{r7, pc}
 353              	.L11:
 354              		.align	2
 355              	.L10:
 356 00b0 F8FFFDBF 		.word	-1073872904
 357 00b4 00000240 		.word	1073872896
 358 00b8 A8000240 		.word	1073873064
 359              		.cfi_endproc
 360              	.LFE48:
 362              		.section	.text.HAL_DMA_Start,"ax",%progbits
 363              		.align	1
 364              		.global	HAL_DMA_Start
 365              		.syntax unified
 366              		.code	16
 367              		.thumb_func
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 12


 369              	HAL_DMA_Start:
 370              	.LFB49:
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @}
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group2 Input and Output operation functions
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  *  @brief   Input and Output operation functions
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  *
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** @verbatim
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  ===============================================================================
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****                       #####  IO operation functions  #####
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  ===============================================================================
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Configure the source, destination address and data length and
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****           Start DMA transfer with interrupt
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Abort DMA transfer
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Poll for transfer complete
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Handle DMA interrupt request
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** @endverbatim
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Start the DMA Transfer.
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 371              		.loc 1 295 1
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 24
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375 0000 80B5     		push	{r7, lr}
 376              	.LCFI6:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 86B0     		sub	sp, sp, #24
 381              	.LCFI7:
 382              		.cfi_def_cfa_offset 32
 383 0004 00AF     		add	r7, sp, #0
 384              	.LCFI8:
 385              		.cfi_def_cfa_register 7
 386 0006 F860     		str	r0, [r7, #12]
 387 0008 B960     		str	r1, [r7, #8]
 388 000a 7A60     		str	r2, [r7, #4]
 389 000c 3B60     		str	r3, [r7]
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 13


 390              		.loc 1 296 21
 391 000e 1723     		movs	r3, #23
 392 0010 FB18     		adds	r3, r7, r3
 393 0012 0022     		movs	r2, #0
 394 0014 1A70     		strb	r2, [r3]
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the parameters */
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Process locked */
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 395              		.loc 1 302 3
 396 0016 FB68     		ldr	r3, [r7, #12]
 397 0018 2422     		movs	r2, #36
 398 001a 9B5C     		ldrb	r3, [r3, r2]
 399 001c 012B     		cmp	r3, #1
 400 001e 01D1     		bne	.L13
 401              		.loc 1 302 3 is_stmt 0 discriminator 1
 402 0020 0223     		movs	r3, #2
 403 0022 32E0     		b	.L14
 404              	.L13:
 405              		.loc 1 302 3 discriminator 2
 406 0024 FB68     		ldr	r3, [r7, #12]
 407 0026 2422     		movs	r2, #36
 408 0028 0121     		movs	r1, #1
 409 002a 9954     		strb	r1, [r3, r2]
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 410              		.loc 1 304 33 is_stmt 1 discriminator 2
 411 002c FB68     		ldr	r3, [r7, #12]
 412 002e 2522     		movs	r2, #37
 413 0030 9B5C     		ldrb	r3, [r3, r2]
 414 0032 DBB2     		uxtb	r3, r3
 415              		.loc 1 304 5 discriminator 2
 416 0034 012B     		cmp	r3, #1
 417 0036 1DD1     		bne	.L15
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Change DMA peripheral state */
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 418              		.loc 1 307 17
 419 0038 FB68     		ldr	r3, [r7, #12]
 420 003a 2522     		movs	r2, #37
 421 003c 0221     		movs	r1, #2
 422 003e 9954     		strb	r1, [r3, r2]
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 423              		.loc 1 308 21
 424 0040 FB68     		ldr	r3, [r7, #12]
 425 0042 0022     		movs	r2, #0
 426 0044 DA63     		str	r2, [r3, #60]
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable the peripheral */
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 427              		.loc 1 311 5
 428 0046 FB68     		ldr	r3, [r7, #12]
 429 0048 1B68     		ldr	r3, [r3]
 430 004a 1A68     		ldr	r2, [r3]
 431 004c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 14


 432 004e 1B68     		ldr	r3, [r3]
 433 0050 0121     		movs	r1, #1
 434 0052 8A43     		bics	r2, r1
 435 0054 1A60     		str	r2, [r3]
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 436              		.loc 1 314 5
 437 0056 3B68     		ldr	r3, [r7]
 438 0058 7A68     		ldr	r2, [r7, #4]
 439 005a B968     		ldr	r1, [r7, #8]
 440 005c F868     		ldr	r0, [r7, #12]
 441 005e FFF7FEFF 		bl	DMA_SetConfig
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Enable the Peripheral */
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 442              		.loc 1 317 5
 443 0062 FB68     		ldr	r3, [r7, #12]
 444 0064 1B68     		ldr	r3, [r3]
 445 0066 1A68     		ldr	r2, [r3]
 446 0068 FB68     		ldr	r3, [r7, #12]
 447 006a 1B68     		ldr	r3, [r3]
 448 006c 0121     		movs	r1, #1
 449 006e 0A43     		orrs	r2, r1
 450 0070 1A60     		str	r2, [r3]
 451 0072 07E0     		b	.L16
 452              	.L15:
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 453              		.loc 1 322 5
 454 0074 FB68     		ldr	r3, [r7, #12]
 455 0076 2422     		movs	r2, #36
 456 0078 0021     		movs	r1, #0
 457 007a 9954     		strb	r1, [r3, r2]
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     status = HAL_BUSY;
 458              		.loc 1 323 12
 459 007c 1723     		movs	r3, #23
 460 007e FB18     		adds	r3, r7, r3
 461 0080 0222     		movs	r2, #2
 462 0082 1A70     		strb	r2, [r3]
 463              	.L16:
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return status;
 464              		.loc 1 325 10
 465 0084 1723     		movs	r3, #23
 466 0086 FB18     		adds	r3, r7, r3
 467 0088 1B78     		ldrb	r3, [r3]
 468              	.L14:
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 469              		.loc 1 326 1
 470 008a 1800     		movs	r0, r3
 471 008c BD46     		mov	sp, r7
 472 008e 06B0     		add	sp, sp, #24
 473              		@ sp needed
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 15


 474 0090 80BD     		pop	{r7, pc}
 475              		.cfi_endproc
 476              	.LFE49:
 478              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 479              		.align	1
 480              		.global	HAL_DMA_Start_IT
 481              		.syntax unified
 482              		.code	16
 483              		.thumb_func
 485              	HAL_DMA_Start_IT:
 486              	.LFB50:
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 487              		.loc 1 338 1
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 24
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491 0000 80B5     		push	{r7, lr}
 492              	.LCFI9:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 86B0     		sub	sp, sp, #24
 497              	.LCFI10:
 498              		.cfi_def_cfa_offset 32
 499 0004 00AF     		add	r7, sp, #0
 500              	.LCFI11:
 501              		.cfi_def_cfa_register 7
 502 0006 F860     		str	r0, [r7, #12]
 503 0008 B960     		str	r1, [r7, #8]
 504 000a 7A60     		str	r2, [r7, #4]
 505 000c 3B60     		str	r3, [r7]
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 506              		.loc 1 339 21
 507 000e 1723     		movs	r3, #23
 508 0010 FB18     		adds	r3, r7, r3
 509 0012 0022     		movs	r2, #0
 510 0014 1A70     		strb	r2, [r3]
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the parameters */
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Process locked */
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 511              		.loc 1 345 3
 512 0016 FB68     		ldr	r3, [r7, #12]
 513 0018 2422     		movs	r2, #36
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 16


 514 001a 9B5C     		ldrb	r3, [r3, r2]
 515 001c 012B     		cmp	r3, #1
 516 001e 01D1     		bne	.L18
 517              		.loc 1 345 3 is_stmt 0 discriminator 1
 518 0020 0223     		movs	r3, #2
 519 0022 4FE0     		b	.L19
 520              	.L18:
 521              		.loc 1 345 3 discriminator 2
 522 0024 FB68     		ldr	r3, [r7, #12]
 523 0026 2422     		movs	r2, #36
 524 0028 0121     		movs	r1, #1
 525 002a 9954     		strb	r1, [r3, r2]
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 526              		.loc 1 347 33 is_stmt 1 discriminator 2
 527 002c FB68     		ldr	r3, [r7, #12]
 528 002e 2522     		movs	r2, #37
 529 0030 9B5C     		ldrb	r3, [r3, r2]
 530 0032 DBB2     		uxtb	r3, r3
 531              		.loc 1 347 5 discriminator 2
 532 0034 012B     		cmp	r3, #1
 533 0036 3AD1     		bne	.L20
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Change DMA peripheral state */
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 534              		.loc 1 350 17
 535 0038 FB68     		ldr	r3, [r7, #12]
 536 003a 2522     		movs	r2, #37
 537 003c 0221     		movs	r1, #2
 538 003e 9954     		strb	r1, [r3, r2]
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 539              		.loc 1 351 21
 540 0040 FB68     		ldr	r3, [r7, #12]
 541 0042 0022     		movs	r2, #0
 542 0044 DA63     		str	r2, [r3, #60]
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable the peripheral */
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 543              		.loc 1 354 5
 544 0046 FB68     		ldr	r3, [r7, #12]
 545 0048 1B68     		ldr	r3, [r3]
 546 004a 1A68     		ldr	r2, [r3]
 547 004c FB68     		ldr	r3, [r7, #12]
 548 004e 1B68     		ldr	r3, [r3]
 549 0050 0121     		movs	r1, #1
 550 0052 8A43     		bics	r2, r1
 551 0054 1A60     		str	r2, [r3]
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure the source, destination address and the data length & clear flags*/
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 552              		.loc 1 357 5
 553 0056 3B68     		ldr	r3, [r7]
 554 0058 7A68     		ldr	r2, [r7, #4]
 555 005a B968     		ldr	r1, [r7, #8]
 556 005c F868     		ldr	r0, [r7, #12]
 557 005e FFF7FEFF 		bl	DMA_SetConfig
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 17


 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Enable the transfer complete interrupt */
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Enable the transfer Error interrupt */
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if(NULL != hdma->XferHalfCpltCallback )
 558              		.loc 1 361 20
 559 0062 FB68     		ldr	r3, [r7, #12]
 560 0064 1B6B     		ldr	r3, [r3, #48]
 561              		.loc 1 361 7
 562 0066 002B     		cmp	r3, #0
 563 0068 08D0     		beq	.L21
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Enable the Half transfer complete interrupt as well */
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 564              		.loc 1 364 7
 565 006a FB68     		ldr	r3, [r7, #12]
 566 006c 1B68     		ldr	r3, [r3]
 567 006e 1A68     		ldr	r2, [r3]
 568 0070 FB68     		ldr	r3, [r7, #12]
 569 0072 1B68     		ldr	r3, [r3]
 570 0074 0E21     		movs	r1, #14
 571 0076 0A43     		orrs	r2, r1
 572 0078 1A60     		str	r2, [r3]
 573 007a 0FE0     		b	.L22
 574              	.L21:
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     else
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 575              		.loc 1 368 7
 576 007c FB68     		ldr	r3, [r7, #12]
 577 007e 1B68     		ldr	r3, [r3]
 578 0080 1A68     		ldr	r2, [r3]
 579 0082 FB68     		ldr	r3, [r7, #12]
 580 0084 1B68     		ldr	r3, [r3]
 581 0086 0421     		movs	r1, #4
 582 0088 8A43     		bics	r2, r1
 583 008a 1A60     		str	r2, [r3]
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       __HAL_DMA_ENABLE_IT(hdma, (DMA_IT_TC | DMA_IT_TE));
 584              		.loc 1 369 7
 585 008c FB68     		ldr	r3, [r7, #12]
 586 008e 1B68     		ldr	r3, [r3]
 587 0090 1A68     		ldr	r2, [r3]
 588 0092 FB68     		ldr	r3, [r7, #12]
 589 0094 1B68     		ldr	r3, [r3]
 590 0096 0A21     		movs	r1, #10
 591 0098 0A43     		orrs	r2, r1
 592 009a 1A60     		str	r2, [r3]
 593              	.L22:
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Enable the Peripheral */
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 594              		.loc 1 373 5
 595 009c FB68     		ldr	r3, [r7, #12]
 596 009e 1B68     		ldr	r3, [r3]
 597 00a0 1A68     		ldr	r2, [r3]
 598 00a2 FB68     		ldr	r3, [r7, #12]
 599 00a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 18


 600 00a6 0121     		movs	r1, #1
 601 00a8 0A43     		orrs	r2, r1
 602 00aa 1A60     		str	r2, [r3]
 603 00ac 07E0     		b	.L23
 604              	.L20:
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 605              		.loc 1 378 5
 606 00ae FB68     		ldr	r3, [r7, #12]
 607 00b0 2422     		movs	r2, #36
 608 00b2 0021     		movs	r1, #0
 609 00b4 9954     		strb	r1, [r3, r2]
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Remain BUSY */
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     status = HAL_BUSY;
 610              		.loc 1 381 12
 611 00b6 1723     		movs	r3, #23
 612 00b8 FB18     		adds	r3, r7, r3
 613 00ba 0222     		movs	r2, #2
 614 00bc 1A70     		strb	r2, [r3]
 615              	.L23:
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return status;
 616              		.loc 1 383 10
 617 00be 1723     		movs	r3, #23
 618 00c0 FB18     		adds	r3, r7, r3
 619 00c2 1B78     		ldrb	r3, [r3]
 620              	.L19:
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 621              		.loc 1 384 1
 622 00c4 1800     		movs	r0, r3
 623 00c6 BD46     		mov	sp, r7
 624 00c8 06B0     		add	sp, sp, #24
 625              		@ sp needed
 626 00ca 80BD     		pop	{r7, pc}
 627              		.cfi_endproc
 628              	.LFE50:
 630              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 631              		.align	1
 632              		.global	HAL_DMA_Abort
 633              		.syntax unified
 634              		.code	16
 635              		.thumb_func
 637              	HAL_DMA_Abort:
 638              	.LFB51:
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Abort the DMA Transfer.
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     * @retval HAL status
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 19


 639              		.loc 1 393 1
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 16
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643 0000 80B5     		push	{r7, lr}
 644              	.LCFI12:
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 84B0     		sub	sp, sp, #16
 649              	.LCFI13:
 650              		.cfi_def_cfa_offset 24
 651 0004 00AF     		add	r7, sp, #0
 652              	.LCFI14:
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 655              		.loc 1 394 21
 656 0008 0F23     		movs	r3, #15
 657 000a FB18     		adds	r3, r7, r3
 658 000c 0022     		movs	r2, #0
 659 000e 1A70     		strb	r2, [r3]
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Check the DMA peripheral state */
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 660              		.loc 1 397 10
 661 0010 7B68     		ldr	r3, [r7, #4]
 662 0012 2522     		movs	r2, #37
 663 0014 9B5C     		ldrb	r3, [r3, r2]
 664 0016 DBB2     		uxtb	r3, r3
 665              		.loc 1 397 5
 666 0018 022B     		cmp	r3, #2
 667 001a 08D0     		beq	.L25
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 668              		.loc 1 399 21
 669 001c 7B68     		ldr	r3, [r7, #4]
 670 001e 0422     		movs	r2, #4
 671 0020 DA63     		str	r2, [r3, #60]
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 672              		.loc 1 402 5
 673 0022 7B68     		ldr	r3, [r7, #4]
 674 0024 2422     		movs	r2, #36
 675 0026 0021     		movs	r1, #0
 676 0028 9954     		strb	r1, [r3, r2]
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     return HAL_ERROR;
 677              		.loc 1 404 12
 678 002a 0123     		movs	r3, #1
 679 002c 24E0     		b	.L26
 680              	.L25:
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable DMA IT */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 20


 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 681              		.loc 1 409 5
 682 002e 7B68     		ldr	r3, [r7, #4]
 683 0030 1B68     		ldr	r3, [r3]
 684 0032 1A68     		ldr	r2, [r3]
 685 0034 7B68     		ldr	r3, [r7, #4]
 686 0036 1B68     		ldr	r3, [r3]
 687 0038 0E21     		movs	r1, #14
 688 003a 8A43     		bics	r2, r1
 689 003c 1A60     		str	r2, [r3]
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable the channel */
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 690              		.loc 1 412 5
 691 003e 7B68     		ldr	r3, [r7, #4]
 692 0040 1B68     		ldr	r3, [r3]
 693 0042 1A68     		ldr	r2, [r3]
 694 0044 7B68     		ldr	r3, [r7, #4]
 695 0046 1B68     		ldr	r3, [r3]
 696 0048 0121     		movs	r1, #1
 697 004a 8A43     		bics	r2, r1
 698 004c 1A60     		str	r2, [r3]
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Clear all flags */
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1cU));
 699              		.loc 1 415 56
 700 004e 7B68     		ldr	r3, [r7, #4]
 701 0050 5B6C     		ldr	r3, [r3, #68]
 702              		.loc 1 415 71
 703 0052 1C22     		movs	r2, #28
 704 0054 1A40     		ands	r2, r3
 705              		.loc 1 415 9
 706 0056 7B68     		ldr	r3, [r7, #4]
 707 0058 1B6C     		ldr	r3, [r3, #64]
 708              		.loc 1 415 48
 709 005a 0121     		movs	r1, #1
 710 005c 9140     		lsls	r1, r1, r2
 711 005e 0A00     		movs	r2, r1
 712              		.loc 1 415 32
 713 0060 5A60     		str	r2, [r3, #4]
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Change the DMA state */
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 714              		.loc 1 418 17
 715 0062 7B68     		ldr	r3, [r7, #4]
 716 0064 2522     		movs	r2, #37
 717 0066 0121     		movs	r1, #1
 718 0068 9954     		strb	r1, [r3, r2]
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 719              		.loc 1 421 5
 720 006a 7B68     		ldr	r3, [r7, #4]
 721 006c 2422     		movs	r2, #36
 722 006e 0021     		movs	r1, #0
 723 0070 9954     		strb	r1, [r3, r2]
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 21


 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     return status;
 724              		.loc 1 423 12
 725 0072 0F23     		movs	r3, #15
 726 0074 FB18     		adds	r3, r7, r3
 727 0076 1B78     		ldrb	r3, [r3]
 728              	.L26:
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 729              		.loc 1 425 1
 730 0078 1800     		movs	r0, r3
 731 007a BD46     		mov	sp, r7
 732 007c 04B0     		add	sp, sp, #16
 733              		@ sp needed
 734 007e 80BD     		pop	{r7, pc}
 735              		.cfi_endproc
 736              	.LFE51:
 738              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 739              		.align	1
 740              		.global	HAL_DMA_Abort_IT
 741              		.syntax unified
 742              		.code	16
 743              		.thumb_func
 745              	HAL_DMA_Abort_IT:
 746              	.LFB52:
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                 the configuration information for the specified DMA Channel.
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 747              		.loc 1 434 1
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 16
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              	.LCFI15:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 84B0     		sub	sp, sp, #16
 757              	.LCFI16:
 758              		.cfi_def_cfa_offset 24
 759 0004 00AF     		add	r7, sp, #0
 760              	.LCFI17:
 761              		.cfi_def_cfa_register 7
 762 0006 7860     		str	r0, [r7, #4]
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 763              		.loc 1 435 21
 764 0008 0F21     		movs	r1, #15
 765 000a 7B18     		adds	r3, r7, r1
 766 000c 0022     		movs	r2, #0
 767 000e 1A70     		strb	r2, [r3]
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 22


 768              		.loc 1 437 32
 769 0010 7B68     		ldr	r3, [r7, #4]
 770 0012 2522     		movs	r2, #37
 771 0014 9B5C     		ldrb	r3, [r3, r2]
 772 0016 DBB2     		uxtb	r3, r3
 773              		.loc 1 437 5
 774 0018 022B     		cmp	r3, #2
 775 001a 06D0     		beq	.L28
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* no transfer ongoing */
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 776              		.loc 1 440 21
 777 001c 7B68     		ldr	r3, [r7, #4]
 778 001e 0422     		movs	r2, #4
 779 0020 DA63     		str	r2, [r3, #60]
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     status = HAL_ERROR;
 780              		.loc 1 442 12
 781 0022 7B18     		adds	r3, r7, r1
 782 0024 0122     		movs	r2, #1
 783 0026 1A70     		strb	r2, [r3]
 784 0028 2AE0     		b	.L29
 785              	.L28:
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable DMA IT */
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 786              		.loc 1 447 5
 787 002a 7B68     		ldr	r3, [r7, #4]
 788 002c 1B68     		ldr	r3, [r3]
 789 002e 1A68     		ldr	r2, [r3]
 790 0030 7B68     		ldr	r3, [r7, #4]
 791 0032 1B68     		ldr	r3, [r3]
 792 0034 0E21     		movs	r1, #14
 793 0036 8A43     		bics	r2, r1
 794 0038 1A60     		str	r2, [r3]
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable the channel */
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 795              		.loc 1 450 5
 796 003a 7B68     		ldr	r3, [r7, #4]
 797 003c 1B68     		ldr	r3, [r3]
 798 003e 1A68     		ldr	r2, [r3]
 799 0040 7B68     		ldr	r3, [r7, #4]
 800 0042 1B68     		ldr	r3, [r3]
 801 0044 0121     		movs	r1, #1
 802 0046 8A43     		bics	r2, r1
 803 0048 1A60     		str	r2, [r3]
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Clear all flags */
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1cU));
 804              		.loc 1 453 56
 805 004a 7B68     		ldr	r3, [r7, #4]
 806 004c 5B6C     		ldr	r3, [r3, #68]
 807              		.loc 1 453 71
 808 004e 1C22     		movs	r2, #28
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 23


 809 0050 1A40     		ands	r2, r3
 810              		.loc 1 453 9
 811 0052 7B68     		ldr	r3, [r7, #4]
 812 0054 1B6C     		ldr	r3, [r3, #64]
 813              		.loc 1 453 48
 814 0056 0121     		movs	r1, #1
 815 0058 9140     		lsls	r1, r1, r2
 816 005a 0A00     		movs	r2, r1
 817              		.loc 1 453 32
 818 005c 5A60     		str	r2, [r3, #4]
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Change the DMA state */
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 819              		.loc 1 456 17
 820 005e 7B68     		ldr	r3, [r7, #4]
 821 0060 2522     		movs	r2, #37
 822 0062 0121     		movs	r1, #1
 823 0064 9954     		strb	r1, [r3, r2]
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 824              		.loc 1 459 5
 825 0066 7B68     		ldr	r3, [r7, #4]
 826 0068 2422     		movs	r2, #36
 827 006a 0021     		movs	r1, #0
 828 006c 9954     		strb	r1, [r3, r2]
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Call User Abort callback */
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if(hdma->XferAbortCallback != NULL)
 829              		.loc 1 462 12
 830 006e 7B68     		ldr	r3, [r7, #4]
 831 0070 9B6B     		ldr	r3, [r3, #56]
 832              		.loc 1 462 7
 833 0072 002B     		cmp	r3, #0
 834 0074 04D0     		beq	.L29
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->XferAbortCallback(hdma);
 835              		.loc 1 464 11
 836 0076 7B68     		ldr	r3, [r7, #4]
 837 0078 9B6B     		ldr	r3, [r3, #56]
 838              		.loc 1 464 7
 839 007a 7A68     		ldr	r2, [r7, #4]
 840 007c 1000     		movs	r0, r2
 841 007e 9847     		blx	r3
 842              	.LVL0:
 843              	.L29:
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return status;
 844              		.loc 1 467 10
 845 0080 0F23     		movs	r3, #15
 846 0082 FB18     		adds	r3, r7, r3
 847 0084 1B78     		ldrb	r3, [r3]
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 848              		.loc 1 468 1
 849 0086 1800     		movs	r0, r3
 850 0088 BD46     		mov	sp, r7
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 24


 851 008a 04B0     		add	sp, sp, #16
 852              		@ sp needed
 853 008c 80BD     		pop	{r7, pc}
 854              		.cfi_endproc
 855              	.LFE52:
 857              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 858              		.align	1
 859              		.global	HAL_DMA_PollForTransfer
 860              		.syntax unified
 861              		.code	16
 862              		.thumb_func
 864              	HAL_DMA_PollForTransfer:
 865              	.LFB53:
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                  the configuration information for the specified DMA Channel.
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 866              		.loc 1 479 1
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 24
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 80B5     		push	{r7, lr}
 871              	.LCFI18:
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 86B0     		sub	sp, sp, #24
 876              	.LCFI19:
 877              		.cfi_def_cfa_offset 32
 878 0004 00AF     		add	r7, sp, #0
 879              	.LCFI20:
 880              		.cfi_def_cfa_register 7
 881 0006 F860     		str	r0, [r7, #12]
 882 0008 7A60     		str	r2, [r7, #4]
 883 000a 0B23     		movs	r3, #11
 884 000c FB18     		adds	r3, r7, r3
 885 000e 0A1C     		adds	r2, r1, #0
 886 0010 1A70     		strb	r2, [r3]
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   uint32_t temp;
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   uint32_t tickstart;
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 887              		.loc 1 483 32
 888 0012 FB68     		ldr	r3, [r7, #12]
 889 0014 2522     		movs	r2, #37
 890 0016 9B5C     		ldrb	r3, [r3, r2]
 891 0018 DBB2     		uxtb	r3, r3
 892              		.loc 1 483 5
 893 001a 022B     		cmp	r3, #2
 894 001c 08D0     		beq	.L32
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 25


 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* no transfer ongoing */
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 895              		.loc 1 486 21
 896 001e FB68     		ldr	r3, [r7, #12]
 897 0020 0422     		movs	r2, #4
 898 0022 DA63     		str	r2, [r3, #60]
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 899              		.loc 1 487 5
 900 0024 FB68     		ldr	r3, [r7, #12]
 901 0026 2422     		movs	r2, #36
 902 0028 0021     		movs	r1, #0
 903 002a 9954     		strb	r1, [r3, r2]
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     return HAL_ERROR;
 904              		.loc 1 488 12
 905 002c 0123     		movs	r3, #1
 906 002e 8DE0     		b	.L33
 907              	.L32:
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Polling mode not supported in circular mode */
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if (0U != (hdma->Instance->CCR & DMA_CCR_CIRC))
 908              		.loc 1 492 18
 909 0030 FB68     		ldr	r3, [r7, #12]
 910 0032 1B68     		ldr	r3, [r3]
 911              		.loc 1 492 28
 912 0034 1B68     		ldr	r3, [r3]
 913              		.loc 1 492 34
 914 0036 2022     		movs	r2, #32
 915 0038 1340     		ands	r3, r2
 916              		.loc 1 492 6
 917 003a 05D0     		beq	.L34
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 918              		.loc 1 494 21
 919 003c FB68     		ldr	r3, [r7, #12]
 920 003e 8022     		movs	r2, #128
 921 0040 5200     		lsls	r2, r2, #1
 922 0042 DA63     		str	r2, [r3, #60]
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     return HAL_ERROR;
 923              		.loc 1 495 12
 924 0044 0123     		movs	r3, #1
 925 0046 81E0     		b	.L33
 926              	.L34:
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Get the level transfer complete flag */
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if (HAL_DMA_FULL_TRANSFER == CompleteLevel)
 927              		.loc 1 499 6
 928 0048 0B23     		movs	r3, #11
 929 004a FB18     		adds	r3, r7, r3
 930 004c 1B78     		ldrb	r3, [r3]
 931 004e 002B     		cmp	r3, #0
 932 0050 08D1     		bne	.L35
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Transfer Complete flag */
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     temp = DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1cU);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 26


 933              		.loc 1 502 33
 934 0052 FB68     		ldr	r3, [r7, #12]
 935 0054 5B6C     		ldr	r3, [r3, #68]
 936              		.loc 1 502 48
 937 0056 1C22     		movs	r2, #28
 938 0058 1340     		ands	r3, r2
 939              		.loc 1 502 10
 940 005a 0222     		movs	r2, #2
 941 005c 9A40     		lsls	r2, r2, r3
 942 005e 1300     		movs	r3, r2
 943 0060 7B61     		str	r3, [r7, #20]
 944 0062 07E0     		b	.L36
 945              	.L35:
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Half Transfer Complete flag */
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     temp = DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1cU);
 946              		.loc 1 507 33
 947 0064 FB68     		ldr	r3, [r7, #12]
 948 0066 5B6C     		ldr	r3, [r3, #68]
 949              		.loc 1 507 48
 950 0068 1C22     		movs	r2, #28
 951 006a 1340     		ands	r3, r2
 952              		.loc 1 507 10
 953 006c 0422     		movs	r2, #4
 954 006e 9A40     		lsls	r2, r2, r3
 955 0070 1300     		movs	r3, r2
 956 0072 7B61     		str	r3, [r7, #20]
 957              	.L36:
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Get tick */
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   tickstart = HAL_GetTick();
 958              		.loc 1 511 15
 959 0074 FFF7FEFF 		bl	HAL_GetTick
 960 0078 0300     		movs	r3, r0
 961 007a 3B61     		str	r3, [r7, #16]
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   while(0U == (hdma->DmaBaseAddress->ISR & temp))
 962              		.loc 1 513 8
 963 007c 3DE0     		b	.L37
 964              	.L40:
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if((0U != (hdma->DmaBaseAddress->ISR & (DMA_FLAG_TE1 << (hdma->ChannelIndex& 0x1cU)))))
 965              		.loc 1 515 20
 966 007e FB68     		ldr	r3, [r7, #12]
 967 0080 1B6C     		ldr	r3, [r3, #64]
 968              		.loc 1 515 36
 969 0082 1A68     		ldr	r2, [r3]
 970              		.loc 1 515 66
 971 0084 FB68     		ldr	r3, [r7, #12]
 972 0086 5B6C     		ldr	r3, [r3, #68]
 973              		.loc 1 515 80
 974 0088 1C21     		movs	r1, #28
 975 008a 0B40     		ands	r3, r1
 976              		.loc 1 515 58
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 27


 977 008c 0821     		movs	r1, #8
 978 008e 9940     		lsls	r1, r1, r3
 979 0090 0B00     		movs	r3, r1
 980              		.loc 1 515 42
 981 0092 1340     		ands	r3, r2
 982              		.loc 1 515 7
 983 0094 16D0     		beq	.L38
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* When a DMA transfer error occurs */
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* A hardware clear of its EN bits is performed */
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Clear all flags */
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1cU));
 984              		.loc 1 520 58
 985 0096 FB68     		ldr	r3, [r7, #12]
 986 0098 5B6C     		ldr	r3, [r3, #68]
 987              		.loc 1 520 73
 988 009a 1C22     		movs	r2, #28
 989 009c 1A40     		ands	r2, r3
 990              		.loc 1 520 11
 991 009e FB68     		ldr	r3, [r7, #12]
 992 00a0 1B6C     		ldr	r3, [r3, #64]
 993              		.loc 1 520 50
 994 00a2 0121     		movs	r1, #1
 995 00a4 9140     		lsls	r1, r1, r2
 996 00a6 0A00     		movs	r2, r1
 997              		.loc 1 520 34
 998 00a8 5A60     		str	r2, [r3, #4]
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Update error code */
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TE;
 999              		.loc 1 523 23
 1000 00aa FB68     		ldr	r3, [r7, #12]
 1001 00ac 0122     		movs	r2, #1
 1002 00ae DA63     		str	r2, [r3, #60]
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Change the DMA state */
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1003              		.loc 1 526 18
 1004 00b0 FB68     		ldr	r3, [r7, #12]
 1005 00b2 2522     		movs	r2, #37
 1006 00b4 0121     		movs	r1, #1
 1007 00b6 9954     		strb	r1, [r3, r2]
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Process Unlocked */
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1008              		.loc 1 529 7
 1009 00b8 FB68     		ldr	r3, [r7, #12]
 1010 00ba 2422     		movs	r2, #36
 1011 00bc 0021     		movs	r1, #0
 1012 00be 9954     		strb	r1, [r3, r2]
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       return HAL_ERROR;
 1013              		.loc 1 531 14
 1014 00c0 0123     		movs	r3, #1
 1015 00c2 43E0     		b	.L33
 1016              	.L38:
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 28


 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Check for the Timeout */
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 1017              		.loc 1 534 7
 1018 00c4 7B68     		ldr	r3, [r7, #4]
 1019 00c6 0133     		adds	r3, r3, #1
 1020 00c8 17D0     		beq	.L37
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       if(((HAL_GetTick() - tickstart) > Timeout) ||  (Timeout == 0U))
 1021              		.loc 1 536 12
 1022 00ca FFF7FEFF 		bl	HAL_GetTick
 1023 00ce 0200     		movs	r2, r0
 1024              		.loc 1 536 26
 1025 00d0 3B69     		ldr	r3, [r7, #16]
 1026 00d2 D31A     		subs	r3, r2, r3
 1027              		.loc 1 536 9
 1028 00d4 7A68     		ldr	r2, [r7, #4]
 1029 00d6 9A42     		cmp	r2, r3
 1030 00d8 02D3     		bcc	.L39
 1031              		.loc 1 536 50 discriminator 1
 1032 00da 7B68     		ldr	r3, [r7, #4]
 1033 00dc 002B     		cmp	r3, #0
 1034 00de 0CD1     		bne	.L37
 1035              	.L39:
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       {
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         /* Update error code */
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 1036              		.loc 1 539 25
 1037 00e0 FB68     		ldr	r3, [r7, #12]
 1038 00e2 2022     		movs	r2, #32
 1039 00e4 DA63     		str	r2, [r3, #60]
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         /* Change the DMA state */
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1040              		.loc 1 542 21
 1041 00e6 FB68     		ldr	r3, [r7, #12]
 1042 00e8 2522     		movs	r2, #37
 1043 00ea 0121     		movs	r1, #1
 1044 00ec 9954     		strb	r1, [r3, r2]
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         /* Process Unlocked */
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1045              		.loc 1 545 9
 1046 00ee FB68     		ldr	r3, [r7, #12]
 1047 00f0 2422     		movs	r2, #36
 1048 00f2 0021     		movs	r1, #0
 1049 00f4 9954     		strb	r1, [r3, r2]
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         return HAL_ERROR;
 1050              		.loc 1 547 16
 1051 00f6 0123     		movs	r3, #1
 1052 00f8 28E0     		b	.L33
 1053              	.L37:
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 1054              		.loc 1 513 20
 1055 00fa FB68     		ldr	r3, [r7, #12]
 1056 00fc 1B6C     		ldr	r3, [r3, #64]
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 29


 1057              		.loc 1 513 36
 1058 00fe 1B68     		ldr	r3, [r3]
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 1059              		.loc 1 513 42
 1060 0100 7A69     		ldr	r2, [r7, #20]
 1061 0102 1340     		ands	r3, r2
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 1062              		.loc 1 513 8
 1063 0104 BBD0     		beq	.L40
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       }
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_FULL_TRANSFER == CompleteLevel)
 1064              		.loc 1 552 5
 1065 0106 0B23     		movs	r3, #11
 1066 0108 FB18     		adds	r3, r7, r3
 1067 010a 1B78     		ldrb	r3, [r3]
 1068 010c 002B     		cmp	r3, #0
 1069 010e 0ED1     		bne	.L41
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Clear the transfer complete flag */
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_FLAG_TC1 << (hdma->ChannelIndex& 0x1cU));
 1070              		.loc 1 555 56
 1071 0110 FB68     		ldr	r3, [r7, #12]
 1072 0112 5B6C     		ldr	r3, [r3, #68]
 1073              		.loc 1 555 70
 1074 0114 1C22     		movs	r2, #28
 1075 0116 1A40     		ands	r2, r3
 1076              		.loc 1 555 9
 1077 0118 FB68     		ldr	r3, [r7, #12]
 1078 011a 1B6C     		ldr	r3, [r3, #64]
 1079              		.loc 1 555 48
 1080 011c 0221     		movs	r1, #2
 1081 011e 9140     		lsls	r1, r1, r2
 1082 0120 0A00     		movs	r2, r1
 1083              		.loc 1 555 32
 1084 0122 5A60     		str	r2, [r3, #4]
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* The selected Channelx EN bit is cleared (DMA is disabled and
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     all transfers are complete) */
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1085              		.loc 1 559 17
 1086 0124 FB68     		ldr	r3, [r7, #12]
 1087 0126 2522     		movs	r2, #37
 1088 0128 0121     		movs	r1, #1
 1089 012a 9954     		strb	r1, [r3, r2]
 1090 012c 09E0     		b	.L42
 1091              	.L41:
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Clear the half transfer complete flag */
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1cU));
 1092              		.loc 1 564 56
 1093 012e FB68     		ldr	r3, [r7, #12]
 1094 0130 5B6C     		ldr	r3, [r3, #68]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 30


 1095              		.loc 1 564 71
 1096 0132 1C22     		movs	r2, #28
 1097 0134 1A40     		ands	r2, r3
 1098              		.loc 1 564 9
 1099 0136 FB68     		ldr	r3, [r7, #12]
 1100 0138 1B6C     		ldr	r3, [r3, #64]
 1101              		.loc 1 564 48
 1102 013a 0421     		movs	r1, #4
 1103 013c 9140     		lsls	r1, r1, r2
 1104 013e 0A00     		movs	r2, r1
 1105              		.loc 1 564 32
 1106 0140 5A60     		str	r2, [r3, #4]
 1107              	.L42:
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Process unlocked */
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1108              		.loc 1 568 3
 1109 0142 FB68     		ldr	r3, [r7, #12]
 1110 0144 2422     		movs	r2, #36
 1111 0146 0021     		movs	r1, #0
 1112 0148 9954     		strb	r1, [r3, r2]
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return HAL_OK;
 1113              		.loc 1 570 10
 1114 014a 0023     		movs	r3, #0
 1115              	.L33:
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 1116              		.loc 1 571 1
 1117 014c 1800     		movs	r0, r3
 1118 014e BD46     		mov	sp, r7
 1119 0150 06B0     		add	sp, sp, #24
 1120              		@ sp needed
 1121 0152 80BD     		pop	{r7, pc}
 1122              		.cfi_endproc
 1123              	.LFE53:
 1125              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1126              		.align	1
 1127              		.global	HAL_DMA_IRQHandler
 1128              		.syntax unified
 1129              		.code	16
 1130              		.thumb_func
 1132              	HAL_DMA_IRQHandler:
 1133              	.LFB54:
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Handle DMA interrupt request.
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval None
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 1134              		.loc 1 580 1
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 16
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 31


 1138 0000 80B5     		push	{r7, lr}
 1139              	.LCFI21:
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 84B0     		sub	sp, sp, #16
 1144              	.LCFI22:
 1145              		.cfi_def_cfa_offset 24
 1146 0004 00AF     		add	r7, sp, #0
 1147              	.LCFI23:
 1148              		.cfi_def_cfa_register 7
 1149 0006 7860     		str	r0, [r7, #4]
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   uint32_t flag_it = hdma->DmaBaseAddress->ISR;
 1150              		.loc 1 581 26
 1151 0008 7B68     		ldr	r3, [r7, #4]
 1152 000a 1B6C     		ldr	r3, [r3, #64]
 1153              		.loc 1 581 12
 1154 000c 1B68     		ldr	r3, [r3]
 1155 000e FB60     		str	r3, [r7, #12]
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   uint32_t source_it = hdma->Instance->CCR;
 1156              		.loc 1 582 28
 1157 0010 7B68     		ldr	r3, [r7, #4]
 1158 0012 1B68     		ldr	r3, [r3]
 1159              		.loc 1 582 12
 1160 0014 1B68     		ldr	r3, [r3]
 1161 0016 BB60     		str	r3, [r7, #8]
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if ((0U != (flag_it & (DMA_FLAG_HT1 << (hdma->ChannelIndex & 0x1cU)))) && (0U != (source_it & DMA
 1162              		.loc 1 585 47
 1163 0018 7B68     		ldr	r3, [r7, #4]
 1164 001a 5B6C     		ldr	r3, [r3, #68]
 1165              		.loc 1 585 62
 1166 001c 1C22     		movs	r2, #28
 1167 001e 1340     		ands	r3, r2
 1168              		.loc 1 585 39
 1169 0020 0422     		movs	r2, #4
 1170 0022 9A40     		lsls	r2, r2, r3
 1171 0024 1300     		movs	r3, r2
 1172              		.loc 1 585 23
 1173 0026 FA68     		ldr	r2, [r7, #12]
 1174 0028 1340     		ands	r3, r2
 1175              		.loc 1 585 6
 1176 002a 26D0     		beq	.L44
 1177              		.loc 1 585 95 discriminator 1
 1178 002c BB68     		ldr	r3, [r7, #8]
 1179 002e 0422     		movs	r2, #4
 1180 0030 1340     		ands	r3, r2
 1181              		.loc 1 585 74 discriminator 1
 1182 0032 22D0     		beq	.L44
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 1183              		.loc 1 588 15
 1184 0034 7B68     		ldr	r3, [r7, #4]
 1185 0036 1B68     		ldr	r3, [r3]
 1186              		.loc 1 588 25
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 32


 1187 0038 1B68     		ldr	r3, [r3]
 1188              		.loc 1 588 31
 1189 003a 2022     		movs	r2, #32
 1190 003c 1340     		ands	r3, r2
 1191              		.loc 1 588 9
 1192 003e 07D1     		bne	.L45
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       {
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         /* Disable the half transfer interrupt */
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         __HAL_DMA_DISABLE_IT(hdma, DMA_IT_HT);
 1193              		.loc 1 591 9
 1194 0040 7B68     		ldr	r3, [r7, #4]
 1195 0042 1B68     		ldr	r3, [r3]
 1196 0044 1A68     		ldr	r2, [r3]
 1197 0046 7B68     		ldr	r3, [r7, #4]
 1198 0048 1B68     		ldr	r3, [r3]
 1199 004a 0421     		movs	r1, #4
 1200 004c 8A43     		bics	r2, r1
 1201 004e 1A60     		str	r2, [r3]
 1202              	.L45:
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       }
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->DmaBaseAddress->IFCR = DMA_ISR_HTIF1 << (hdma->ChannelIndex & 0x1cU);
 1203              		.loc 1 594 58
 1204 0050 7B68     		ldr	r3, [r7, #4]
 1205 0052 5B6C     		ldr	r3, [r3, #68]
 1206              		.loc 1 594 73
 1207 0054 1C22     		movs	r2, #28
 1208 0056 1A40     		ands	r2, r3
 1209              		.loc 1 594 11
 1210 0058 7B68     		ldr	r3, [r7, #4]
 1211 005a 1B6C     		ldr	r3, [r3, #64]
 1212              		.loc 1 594 50
 1213 005c 0421     		movs	r1, #4
 1214 005e 9140     		lsls	r1, r1, r2
 1215 0060 0A00     		movs	r2, r1
 1216              		.loc 1 594 34
 1217 0062 5A60     		str	r2, [r3, #4]
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* DMA peripheral state is not updated in Half Transfer */
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* but in Transfer Complete case */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      if(hdma->XferHalfCpltCallback != NULL)
 1218              		.loc 1 599 13
 1219 0064 7B68     		ldr	r3, [r7, #4]
 1220 0066 1B6B     		ldr	r3, [r3, #48]
 1221              		.loc 1 599 8
 1222 0068 002B     		cmp	r3, #0
 1223 006a 00D1     		bne	.LCB973
 1224 006c 71E0     		b	.L47	@long jump
 1225              	.LCB973:
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       {
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         /* Half transfer callback */
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****         hdma->XferHalfCpltCallback(hdma);
 1226              		.loc 1 602 13
 1227 006e 7B68     		ldr	r3, [r7, #4]
 1228 0070 1B6B     		ldr	r3, [r3, #48]
 1229              		.loc 1 602 9
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 33


 1230 0072 7A68     		ldr	r2, [r7, #4]
 1231 0074 1000     		movs	r0, r2
 1232 0076 9847     		blx	r3
 1233              	.LVL1:
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       {
 1234              		.loc 1 599 8
 1235 0078 6BE0     		b	.L47
 1236              	.L44:
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       }
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else if ((0U != (flag_it & (DMA_FLAG_TC1 << (hdma->ChannelIndex & 0x1cU)))) && (0U != (source_it 
 1237              		.loc 1 607 52
 1238 007a 7B68     		ldr	r3, [r7, #4]
 1239 007c 5B6C     		ldr	r3, [r3, #68]
 1240              		.loc 1 607 67
 1241 007e 1C22     		movs	r2, #28
 1242 0080 1340     		ands	r3, r2
 1243              		.loc 1 607 44
 1244 0082 0222     		movs	r2, #2
 1245 0084 9A40     		lsls	r2, r2, r3
 1246 0086 1300     		movs	r3, r2
 1247              		.loc 1 607 28
 1248 0088 FA68     		ldr	r2, [r7, #12]
 1249 008a 1340     		ands	r3, r2
 1250              		.loc 1 607 11
 1251 008c 2DD0     		beq	.L48
 1252              		.loc 1 607 100 discriminator 1
 1253 008e BB68     		ldr	r3, [r7, #8]
 1254 0090 0222     		movs	r2, #2
 1255 0092 1340     		ands	r3, r2
 1256              		.loc 1 607 79 discriminator 1
 1257 0094 29D0     		beq	.L48
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 1258              		.loc 1 609 13
 1259 0096 7B68     		ldr	r3, [r7, #4]
 1260 0098 1B68     		ldr	r3, [r3]
 1261              		.loc 1 609 23
 1262 009a 1B68     		ldr	r3, [r3]
 1263              		.loc 1 609 29
 1264 009c 2022     		movs	r2, #32
 1265 009e 1340     		ands	r3, r2
 1266              		.loc 1 609 7
 1267 00a0 0BD1     		bne	.L49
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Disable the transfer complete and error interrupt */
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       __HAL_DMA_DISABLE_IT(hdma, DMA_IT_TE | DMA_IT_TC);
 1268              		.loc 1 612 7
 1269 00a2 7B68     		ldr	r3, [r7, #4]
 1270 00a4 1B68     		ldr	r3, [r3]
 1271 00a6 1A68     		ldr	r2, [r3]
 1272 00a8 7B68     		ldr	r3, [r7, #4]
 1273 00aa 1B68     		ldr	r3, [r3]
 1274 00ac 0A21     		movs	r1, #10
 1275 00ae 8A43     		bics	r2, r1
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 34


 1276 00b0 1A60     		str	r2, [r3]
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Change the DMA state */
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1277              		.loc 1 615 19
 1278 00b2 7B68     		ldr	r3, [r7, #4]
 1279 00b4 2522     		movs	r2, #37
 1280 00b6 0121     		movs	r1, #1
 1281 00b8 9954     		strb	r1, [r3, r2]
 1282              	.L49:
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Clear the transfer complete flag */
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_TCIF1 << (hdma->ChannelIndex & 0x1cU));
 1283              		.loc 1 618 57
 1284 00ba 7B68     		ldr	r3, [r7, #4]
 1285 00bc 5B6C     		ldr	r3, [r3, #68]
 1286              		.loc 1 618 72
 1287 00be 1C22     		movs	r2, #28
 1288 00c0 1A40     		ands	r2, r3
 1289              		.loc 1 618 9
 1290 00c2 7B68     		ldr	r3, [r7, #4]
 1291 00c4 1B6C     		ldr	r3, [r3, #64]
 1292              		.loc 1 618 49
 1293 00c6 0221     		movs	r1, #2
 1294 00c8 9140     		lsls	r1, r1, r2
 1295 00ca 0A00     		movs	r2, r1
 1296              		.loc 1 618 32
 1297 00cc 5A60     		str	r2, [r3, #4]
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1298              		.loc 1 621 5
 1299 00ce 7B68     		ldr	r3, [r7, #4]
 1300 00d0 2422     		movs	r2, #36
 1301 00d2 0021     		movs	r1, #0
 1302 00d4 9954     		strb	r1, [r3, r2]
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if(hdma->XferCpltCallback != NULL)
 1303              		.loc 1 623 12
 1304 00d6 7B68     		ldr	r3, [r7, #4]
 1305 00d8 DB6A     		ldr	r3, [r3, #44]
 1306              		.loc 1 623 7
 1307 00da 002B     		cmp	r3, #0
 1308 00dc 39D0     		beq	.L47
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Transfer complete callback */
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->XferCpltCallback(hdma);
 1309              		.loc 1 626 11
 1310 00de 7B68     		ldr	r3, [r7, #4]
 1311 00e0 DB6A     		ldr	r3, [r3, #44]
 1312              		.loc 1 626 7
 1313 00e2 7A68     		ldr	r2, [r7, #4]
 1314 00e4 1000     		movs	r0, r2
 1315 00e6 9847     		blx	r3
 1316              	.LVL2:
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 1317              		.loc 1 623 7
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 35


 1318 00e8 33E0     		b	.L47
 1319              	.L48:
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Transfer Error Interrupt management **************************************/
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else if ((0U != (flag_it & (DMA_FLAG_TE1 << (hdma->ChannelIndex & 0x1cU)))) && (0U != (source_it 
 1320              		.loc 1 631 52
 1321 00ea 7B68     		ldr	r3, [r7, #4]
 1322 00ec 5B6C     		ldr	r3, [r3, #68]
 1323              		.loc 1 631 67
 1324 00ee 1C22     		movs	r2, #28
 1325 00f0 1340     		ands	r3, r2
 1326              		.loc 1 631 44
 1327 00f2 0822     		movs	r2, #8
 1328 00f4 9A40     		lsls	r2, r2, r3
 1329 00f6 1300     		movs	r3, r2
 1330              		.loc 1 631 28
 1331 00f8 FA68     		ldr	r2, [r7, #12]
 1332 00fa 1340     		ands	r3, r2
 1333              		.loc 1 631 11
 1334 00fc 2AD0     		beq	.L52
 1335              		.loc 1 631 100 discriminator 1
 1336 00fe BB68     		ldr	r3, [r7, #8]
 1337 0100 0822     		movs	r2, #8
 1338 0102 1340     		ands	r3, r2
 1339              		.loc 1 631 79 discriminator 1
 1340 0104 26D0     		beq	.L52
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* When a DMA transfer error occurs */
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* A hardware clear of its EN bits is performed */
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Disable ALL DMA IT */
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_DMA_DISABLE_IT(hdma, (DMA_IT_TC | DMA_IT_HT | DMA_IT_TE));
 1341              		.loc 1 636 5
 1342 0106 7B68     		ldr	r3, [r7, #4]
 1343 0108 1B68     		ldr	r3, [r3]
 1344 010a 1A68     		ldr	r2, [r3]
 1345 010c 7B68     		ldr	r3, [r7, #4]
 1346 010e 1B68     		ldr	r3, [r3]
 1347 0110 0E21     		movs	r1, #14
 1348 0112 8A43     		bics	r2, r1
 1349 0114 1A60     		str	r2, [r3]
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Clear all flags */
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1cU));
 1350              		.loc 1 639 56
 1351 0116 7B68     		ldr	r3, [r7, #4]
 1352 0118 5B6C     		ldr	r3, [r3, #68]
 1353              		.loc 1 639 71
 1354 011a 1C22     		movs	r2, #28
 1355 011c 1A40     		ands	r2, r3
 1356              		.loc 1 639 9
 1357 011e 7B68     		ldr	r3, [r7, #4]
 1358 0120 1B6C     		ldr	r3, [r3, #64]
 1359              		.loc 1 639 48
 1360 0122 0121     		movs	r1, #1
 1361 0124 9140     		lsls	r1, r1, r2
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 36


 1362 0126 0A00     		movs	r2, r1
 1363              		.loc 1 639 32
 1364 0128 5A60     		str	r2, [r3, #4]
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Update error code */
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_TE;
 1365              		.loc 1 642 21
 1366 012a 7B68     		ldr	r3, [r7, #4]
 1367 012c 0122     		movs	r2, #1
 1368 012e DA63     		str	r2, [r3, #60]
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Change the DMA state */
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1369              		.loc 1 645 17
 1370 0130 7B68     		ldr	r3, [r7, #4]
 1371 0132 2522     		movs	r2, #37
 1372 0134 0121     		movs	r1, #1
 1373 0136 9954     		strb	r1, [r3, r2]
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process Unlocked */
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1374              		.loc 1 648 5
 1375 0138 7B68     		ldr	r3, [r7, #4]
 1376 013a 2422     		movs	r2, #36
 1377 013c 0021     		movs	r1, #0
 1378 013e 9954     		strb	r1, [r3, r2]
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     if (hdma->XferErrorCallback != NULL)
 1379              		.loc 1 650 13
 1380 0140 7B68     		ldr	r3, [r7, #4]
 1381 0142 5B6B     		ldr	r3, [r3, #52]
 1382              		.loc 1 650 8
 1383 0144 002B     		cmp	r3, #0
 1384 0146 05D0     		beq	.L52
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       /* Transfer error callback */
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1385              		.loc 1 653 11
 1386 0148 7B68     		ldr	r3, [r7, #4]
 1387 014a 5B6B     		ldr	r3, [r3, #52]
 1388              		.loc 1 653 7
 1389 014c 7A68     		ldr	r2, [r7, #4]
 1390 014e 1000     		movs	r0, r2
 1391 0150 9847     		blx	r3
 1392              	.LVL3:
 1393              	.L47:
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Nothing To Do */
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return;
 1394              		.loc 1 660 3 discriminator 1
 1395 0152 C046     		nop
 1396              	.L52:
 1397              		.loc 1 660 3 is_stmt 0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 37


 1398 0154 C046     		nop
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 1399              		.loc 1 661 1 is_stmt 1
 1400 0156 BD46     		mov	sp, r7
 1401 0158 04B0     		add	sp, sp, #16
 1402              		@ sp needed
 1403 015a 80BD     		pop	{r7, pc}
 1404              		.cfi_endproc
 1405              	.LFE54:
 1407              		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1408              		.align	1
 1409              		.global	HAL_DMA_RegisterCallback
 1410              		.syntax unified
 1411              		.code	16
 1412              		.thumb_func
 1414              	HAL_DMA_RegisterCallback:
 1415              	.LFB55:
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Register callbacks
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                               the configuration information for the specified DMA Channel.
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 1416              		.loc 1 674 1
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 24
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420 0000 80B5     		push	{r7, lr}
 1421              	.LCFI24:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
 1425 0002 86B0     		sub	sp, sp, #24
 1426              	.LCFI25:
 1427              		.cfi_def_cfa_offset 32
 1428 0004 00AF     		add	r7, sp, #0
 1429              	.LCFI26:
 1430              		.cfi_def_cfa_register 7
 1431 0006 F860     		str	r0, [r7, #12]
 1432 0008 7A60     		str	r2, [r7, #4]
 1433 000a 0B23     		movs	r3, #11
 1434 000c FB18     		adds	r3, r7, r3
 1435 000e 0A1C     		adds	r2, r1, #0
 1436 0010 1A70     		strb	r2, [r3]
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1437              		.loc 1 675 21
 1438 0012 1723     		movs	r3, #23
 1439 0014 FB18     		adds	r3, r7, r3
 1440 0016 0022     		movs	r2, #0
 1441 0018 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 38


 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Process locked */
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1442              		.loc 1 678 3
 1443 001a FB68     		ldr	r3, [r7, #12]
 1444 001c 2422     		movs	r2, #36
 1445 001e 9B5C     		ldrb	r3, [r3, r2]
 1446 0020 012B     		cmp	r3, #1
 1447 0022 01D1     		bne	.L54
 1448              		.loc 1 678 3 is_stmt 0 discriminator 1
 1449 0024 0223     		movs	r3, #2
 1450 0026 37E0     		b	.L55
 1451              	.L54:
 1452              		.loc 1 678 3 discriminator 2
 1453 0028 FB68     		ldr	r3, [r7, #12]
 1454 002a 2422     		movs	r2, #36
 1455 002c 0121     		movs	r1, #1
 1456 002e 9954     		strb	r1, [r3, r2]
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1457              		.loc 1 680 33 is_stmt 1 discriminator 2
 1458 0030 FB68     		ldr	r3, [r7, #12]
 1459 0032 2522     		movs	r2, #37
 1460 0034 9B5C     		ldrb	r3, [r3, r2]
 1461 0036 DBB2     		uxtb	r3, r3
 1462              		.loc 1 680 5 discriminator 2
 1463 0038 012B     		cmp	r3, #1
 1464 003a 22D1     		bne	.L56
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     switch (CallbackID)
 1465              		.loc 1 682 5
 1466 003c 0B23     		movs	r3, #11
 1467 003e FB18     		adds	r3, r7, r3
 1468 0040 1B78     		ldrb	r3, [r3]
 1469 0042 032B     		cmp	r3, #3
 1470 0044 14D0     		beq	.L57
 1471 0046 17DC     		bgt	.L58
 1472 0048 022B     		cmp	r3, #2
 1473 004a 0DD0     		beq	.L59
 1474 004c 14DC     		bgt	.L58
 1475 004e 002B     		cmp	r3, #0
 1476 0050 02D0     		beq	.L60
 1477 0052 012B     		cmp	r3, #1
 1478 0054 04D0     		beq	.L61
 1479 0056 0FE0     		b	.L58
 1480              	.L60:
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_CPLT_CB_ID:
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferCpltCallback = pCallback;
 1481              		.loc 1 685 35
 1482 0058 FB68     		ldr	r3, [r7, #12]
 1483 005a 7A68     		ldr	r2, [r7, #4]
 1484 005c DA62     		str	r2, [r3, #44]
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1485              		.loc 1 686 12
 1486 005e 14E0     		b	.L63
 1487              	.L61:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 39


 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = pCallback;
 1488              		.loc 1 689 39
 1489 0060 FB68     		ldr	r3, [r7, #12]
 1490 0062 7A68     		ldr	r2, [r7, #4]
 1491 0064 1A63     		str	r2, [r3, #48]
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1492              		.loc 1 690 12
 1493 0066 10E0     		b	.L63
 1494              	.L59:
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_ERROR_CB_ID:
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferErrorCallback = pCallback;
 1495              		.loc 1 693 36
 1496 0068 FB68     		ldr	r3, [r7, #12]
 1497 006a 7A68     		ldr	r2, [r7, #4]
 1498 006c 5A63     		str	r2, [r3, #52]
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1499              		.loc 1 694 12
 1500 006e 0CE0     		b	.L63
 1501              	.L57:
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_ABORT_CB_ID:
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferAbortCallback = pCallback;
 1502              		.loc 1 697 36
 1503 0070 FB68     		ldr	r3, [r7, #12]
 1504 0072 7A68     		ldr	r2, [r7, #4]
 1505 0074 9A63     		str	r2, [r3, #56]
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1506              		.loc 1 698 12
 1507 0076 08E0     		b	.L63
 1508              	.L58:
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      default:
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            status = HAL_ERROR;
 1509              		.loc 1 701 19
 1510 0078 1723     		movs	r3, #23
 1511 007a FB18     		adds	r3, r7, r3
 1512 007c 0122     		movs	r2, #1
 1513 007e 1A70     		strb	r2, [r3]
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1514              		.loc 1 702 12
 1515 0080 03E0     		b	.L63
 1516              	.L56:
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     status = HAL_ERROR;
 1517              		.loc 1 707 12
 1518 0082 1723     		movs	r3, #23
 1519 0084 FB18     		adds	r3, r7, r3
 1520 0086 0122     		movs	r2, #1
 1521 0088 1A70     		strb	r2, [r3]
 1522              	.L63:
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 40


 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Release Lock */
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1523              		.loc 1 711 3
 1524 008a FB68     		ldr	r3, [r7, #12]
 1525 008c 2422     		movs	r2, #36
 1526 008e 0021     		movs	r1, #0
 1527 0090 9954     		strb	r1, [r3, r2]
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return status;
 1528              		.loc 1 713 10
 1529 0092 1723     		movs	r3, #23
 1530 0094 FB18     		adds	r3, r7, r3
 1531 0096 1B78     		ldrb	r3, [r3]
 1532              	.L55:
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 1533              		.loc 1 714 1
 1534 0098 1800     		movs	r0, r3
 1535 009a BD46     		mov	sp, r7
 1536 009c 06B0     		add	sp, sp, #24
 1537              		@ sp needed
 1538 009e 80BD     		pop	{r7, pc}
 1539              		.cfi_endproc
 1540              	.LFE55:
 1542              		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1543              		.align	1
 1544              		.global	HAL_DMA_UnRegisterCallback
 1545              		.syntax unified
 1546              		.code	16
 1547              		.thumb_func
 1549              	HAL_DMA_UnRegisterCallback:
 1550              	.LFB56:
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  UnRegister callbacks
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                               the configuration information for the specified DMA Channel.
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 1551              		.loc 1 725 1
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 16
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 80B5     		push	{r7, lr}
 1556              	.LCFI27:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 84B0     		sub	sp, sp, #16
 1561              	.LCFI28:
 1562              		.cfi_def_cfa_offset 24
 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI29:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 41


 1565              		.cfi_def_cfa_register 7
 1566 0006 7860     		str	r0, [r7, #4]
 1567 0008 0A00     		movs	r2, r1
 1568 000a FB1C     		adds	r3, r7, #3
 1569 000c 1A70     		strb	r2, [r3]
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1570              		.loc 1 726 21
 1571 000e 0F23     		movs	r3, #15
 1572 0010 FB18     		adds	r3, r7, r3
 1573 0012 0022     		movs	r2, #0
 1574 0014 1A70     		strb	r2, [r3]
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Process locked */
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1575              		.loc 1 729 3
 1576 0016 7B68     		ldr	r3, [r7, #4]
 1577 0018 2422     		movs	r2, #36
 1578 001a 9B5C     		ldrb	r3, [r3, r2]
 1579 001c 012B     		cmp	r3, #1
 1580 001e 01D1     		bne	.L65
 1581              		.loc 1 729 3 is_stmt 0 discriminator 1
 1582 0020 0223     		movs	r3, #2
 1583 0022 3FE0     		b	.L66
 1584              	.L65:
 1585              		.loc 1 729 3 discriminator 2
 1586 0024 7B68     		ldr	r3, [r7, #4]
 1587 0026 2422     		movs	r2, #36
 1588 0028 0121     		movs	r1, #1
 1589 002a 9954     		strb	r1, [r3, r2]
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1590              		.loc 1 731 33 is_stmt 1 discriminator 2
 1591 002c 7B68     		ldr	r3, [r7, #4]
 1592 002e 2522     		movs	r2, #37
 1593 0030 9B5C     		ldrb	r3, [r3, r2]
 1594 0032 DBB2     		uxtb	r3, r3
 1595              		.loc 1 731 5 discriminator 2
 1596 0034 012B     		cmp	r3, #1
 1597 0036 2AD1     		bne	.L67
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     switch (CallbackID)
 1598              		.loc 1 733 5
 1599 0038 FB1C     		adds	r3, r7, #3
 1600 003a 1B78     		ldrb	r3, [r3]
 1601 003c 042B     		cmp	r3, #4
 1602 003e 21D8     		bhi	.L68
 1603 0040 9A00     		lsls	r2, r3, #2
 1604 0042 1A4B     		ldr	r3, .L77
 1605 0044 D318     		adds	r3, r2, r3
 1606 0046 1B68     		ldr	r3, [r3]
 1607 0048 9F46     		mov	pc, r3
 1608              		.section	.rodata.HAL_DMA_UnRegisterCallback,"a",%progbits
 1609              		.align	2
 1610              	.L70:
 1611 0000 4A000000 		.word	.L74
 1612 0004 52000000 		.word	.L73
 1613 0008 5A000000 		.word	.L72
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 42


 1614 000c 62000000 		.word	.L71
 1615 0010 6A000000 		.word	.L69
 1616              		.section	.text.HAL_DMA_UnRegisterCallback
 1617              	.L74:
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     {
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_CPLT_CB_ID:
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferCpltCallback = NULL;
 1618              		.loc 1 736 35
 1619 004a 7B68     		ldr	r3, [r7, #4]
 1620 004c 0022     		movs	r2, #0
 1621 004e DA62     		str	r2, [r3, #44]
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1622              		.loc 1 737 12
 1623 0050 21E0     		b	.L76
 1624              	.L73:
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = NULL;
 1625              		.loc 1 740 39
 1626 0052 7B68     		ldr	r3, [r7, #4]
 1627 0054 0022     		movs	r2, #0
 1628 0056 1A63     		str	r2, [r3, #48]
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1629              		.loc 1 741 12
 1630 0058 1DE0     		b	.L76
 1631              	.L72:
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_ERROR_CB_ID:
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferErrorCallback = NULL;
 1632              		.loc 1 744 36
 1633 005a 7B68     		ldr	r3, [r7, #4]
 1634 005c 0022     		movs	r2, #0
 1635 005e 5A63     		str	r2, [r3, #52]
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1636              		.loc 1 745 12
 1637 0060 19E0     		b	.L76
 1638              	.L71:
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****      case  HAL_DMA_XFER_ABORT_CB_ID:
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferAbortCallback = NULL;
 1639              		.loc 1 748 36
 1640 0062 7B68     		ldr	r3, [r7, #4]
 1641 0064 0022     		movs	r2, #0
 1642 0066 9A63     		str	r2, [r3, #56]
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1643              		.loc 1 749 12
 1644 0068 15E0     		b	.L76
 1645              	.L69:
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferCpltCallback = NULL;
 1646              		.loc 1 752 35
 1647 006a 7B68     		ldr	r3, [r7, #4]
 1648 006c 0022     		movs	r2, #0
 1649 006e DA62     		str	r2, [r3, #44]
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferHalfCpltCallback = NULL;
 1650              		.loc 1 753 39
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 43


 1651 0070 7B68     		ldr	r3, [r7, #4]
 1652 0072 0022     		movs	r2, #0
 1653 0074 1A63     		str	r2, [r3, #48]
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferErrorCallback = NULL;
 1654              		.loc 1 754 36
 1655 0076 7B68     		ldr	r3, [r7, #4]
 1656 0078 0022     		movs	r2, #0
 1657 007a 5A63     		str	r2, [r3, #52]
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            hdma->XferAbortCallback = NULL;
 1658              		.loc 1 755 36
 1659 007c 7B68     		ldr	r3, [r7, #4]
 1660 007e 0022     		movs	r2, #0
 1661 0080 9A63     		str	r2, [r3, #56]
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1662              		.loc 1 756 12
 1663 0082 08E0     		b	.L76
 1664              	.L68:
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     default:
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            status = HAL_ERROR;
 1665              		.loc 1 759 19
 1666 0084 0F23     		movs	r3, #15
 1667 0086 FB18     		adds	r3, r7, r3
 1668 0088 0122     		movs	r2, #1
 1669 008a 1A70     		strb	r2, [r3]
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****            break;
 1670              		.loc 1 760 12
 1671 008c 03E0     		b	.L76
 1672              	.L67:
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     }
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     status = HAL_ERROR;
 1673              		.loc 1 765 12
 1674 008e 0F23     		movs	r3, #15
 1675 0090 FB18     		adds	r3, r7, r3
 1676 0092 0122     		movs	r2, #1
 1677 0094 1A70     		strb	r2, [r3]
 1678              	.L76:
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Release Lock */
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1679              		.loc 1 769 3
 1680 0096 7B68     		ldr	r3, [r7, #4]
 1681 0098 2422     		movs	r2, #36
 1682 009a 0021     		movs	r1, #0
 1683 009c 9954     		strb	r1, [r3, r2]
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return status;
 1684              		.loc 1 771 10
 1685 009e 0F23     		movs	r3, #15
 1686 00a0 FB18     		adds	r3, r7, r3
 1687 00a2 1B78     		ldrb	r3, [r3]
 1688              	.L66:
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 44


 1689              		.loc 1 772 1
 1690 00a4 1800     		movs	r0, r3
 1691 00a6 BD46     		mov	sp, r7
 1692 00a8 04B0     		add	sp, sp, #16
 1693              		@ sp needed
 1694 00aa 80BD     		pop	{r7, pc}
 1695              	.L78:
 1696              		.align	2
 1697              	.L77:
 1698 00ac 00000000 		.word	.L70
 1699              		.cfi_endproc
 1700              	.LFE56:
 1702              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1703              		.align	1
 1704              		.global	HAL_DMA_GetState
 1705              		.syntax unified
 1706              		.code	16
 1707              		.thumb_func
 1709              	HAL_DMA_GetState:
 1710              	.LFB57:
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @}
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @defgroup DMA_Exported_Functions_Group3 Peripheral State and Errors functions
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  *  @brief    Peripheral State and Errors functions
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  *
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** @verbatim
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  ===============================================================================
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****             ##### Peripheral State and Errors functions #####
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****  ===============================================================================
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     [..]
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     This subsection provides functions allowing to
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Check the DMA state
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****       (+) Get error code
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** @endverbatim
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Return the DMA handle state.
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *               the configuration information for the specified DMA Channel.
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL state
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 1711              		.loc 1 803 1
 1712              		.cfi_startproc
 1713              		@ args = 0, pretend = 0, frame = 8
 1714              		@ frame_needed = 1, uses_anonymous_args = 0
 1715 0000 80B5     		push	{r7, lr}
 1716              	.LCFI30:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 45


 1717              		.cfi_def_cfa_offset 8
 1718              		.cfi_offset 7, -8
 1719              		.cfi_offset 14, -4
 1720 0002 82B0     		sub	sp, sp, #8
 1721              	.LCFI31:
 1722              		.cfi_def_cfa_offset 16
 1723 0004 00AF     		add	r7, sp, #0
 1724              	.LCFI32:
 1725              		.cfi_def_cfa_register 7
 1726 0006 7860     		str	r0, [r7, #4]
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Return DMA handle state */
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return hdma->State;
 1727              		.loc 1 805 14
 1728 0008 7B68     		ldr	r3, [r7, #4]
 1729 000a 2522     		movs	r2, #37
 1730 000c 9B5C     		ldrb	r3, [r3, r2]
 1731 000e DBB2     		uxtb	r3, r3
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 1732              		.loc 1 806 1
 1733 0010 1800     		movs	r0, r3
 1734 0012 BD46     		mov	sp, r7
 1735 0014 02B0     		add	sp, sp, #8
 1736              		@ sp needed
 1737 0016 80BD     		pop	{r7, pc}
 1738              		.cfi_endproc
 1739              	.LFE57:
 1741              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1742              		.align	1
 1743              		.global	HAL_DMA_GetError
 1744              		.syntax unified
 1745              		.code	16
 1746              		.thumb_func
 1748              	HAL_DMA_GetError:
 1749              	.LFB58:
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Return the DMA error code.
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *              the configuration information for the specified DMA Channel.
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval DMA Error Code
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 1750              		.loc 1 815 1
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 8
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754 0000 80B5     		push	{r7, lr}
 1755              	.LCFI33:
 1756              		.cfi_def_cfa_offset 8
 1757              		.cfi_offset 7, -8
 1758              		.cfi_offset 14, -4
 1759 0002 82B0     		sub	sp, sp, #8
 1760              	.LCFI34:
 1761              		.cfi_def_cfa_offset 16
 1762 0004 00AF     		add	r7, sp, #0
 1763              	.LCFI35:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 46


 1764              		.cfi_def_cfa_register 7
 1765 0006 7860     		str	r0, [r7, #4]
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   return hdma->ErrorCode;
 1766              		.loc 1 816 14
 1767 0008 7B68     		ldr	r3, [r7, #4]
 1768 000a DB6B     		ldr	r3, [r3, #60]
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 1769              		.loc 1 817 1
 1770 000c 1800     		movs	r0, r3
 1771 000e BD46     		mov	sp, r7
 1772 0010 02B0     		add	sp, sp, #8
 1773              		@ sp needed
 1774 0012 80BD     		pop	{r7, pc}
 1775              		.cfi_endproc
 1776              	.LFE58:
 1778              		.section	.text.DMA_SetConfig,"ax",%progbits
 1779              		.align	1
 1780              		.syntax unified
 1781              		.code	16
 1782              		.thumb_func
 1784              	DMA_SetConfig:
 1785              	.LFB59:
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @}
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @}
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @{
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** /**
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   *                     the configuration information for the specified DMA Channel.
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   * @retval HAL status
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   */
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** {
 1786              		.loc 1 841 1
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 16
 1789              		@ frame_needed = 1, uses_anonymous_args = 0
 1790 0000 80B5     		push	{r7, lr}
 1791              	.LCFI36:
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 84B0     		sub	sp, sp, #16
 1796              	.LCFI37:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 47


 1797              		.cfi_def_cfa_offset 24
 1798 0004 00AF     		add	r7, sp, #0
 1799              	.LCFI38:
 1800              		.cfi_def_cfa_register 7
 1801 0006 F860     		str	r0, [r7, #12]
 1802 0008 B960     		str	r1, [r7, #8]
 1803 000a 7A60     		str	r2, [r7, #4]
 1804 000c 3B60     		str	r3, [r7]
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Clear all flags */
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->DmaBaseAddress->IFCR = (DMA_ISR_GIF1 << (hdma->ChannelIndex & 0x1cU));
 1805              		.loc 1 843 54
 1806 000e FB68     		ldr	r3, [r7, #12]
 1807 0010 5B6C     		ldr	r3, [r3, #68]
 1808              		.loc 1 843 69
 1809 0012 1C22     		movs	r2, #28
 1810 0014 1A40     		ands	r2, r3
 1811              		.loc 1 843 7
 1812 0016 FB68     		ldr	r3, [r7, #12]
 1813 0018 1B6C     		ldr	r3, [r3, #64]
 1814              		.loc 1 843 46
 1815 001a 0121     		movs	r1, #1
 1816 001c 9140     		lsls	r1, r1, r2
 1817 001e 0A00     		movs	r2, r1
 1818              		.loc 1 843 30
 1819 0020 5A60     		str	r2, [r3, #4]
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Configure DMA Channel data length */
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   hdma->Instance->CNDTR = DataLength;
 1820              		.loc 1 846 7
 1821 0022 FB68     		ldr	r3, [r7, #12]
 1822 0024 1B68     		ldr	r3, [r3]
 1823              		.loc 1 846 25
 1824 0026 3A68     		ldr	r2, [r7]
 1825 0028 5A60     		str	r2, [r3, #4]
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Memory to Peripheral */
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 1826              		.loc 1 849 17
 1827 002a FB68     		ldr	r3, [r7, #12]
 1828 002c 9B68     		ldr	r3, [r3, #8]
 1829              		.loc 1 849 5
 1830 002e 102B     		cmp	r3, #16
 1831 0030 08D1     		bne	.L84
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->Instance->CPAR = DstAddress;
 1832              		.loc 1 852 9
 1833 0032 FB68     		ldr	r3, [r7, #12]
 1834 0034 1B68     		ldr	r3, [r3]
 1835              		.loc 1 852 26
 1836 0036 7A68     		ldr	r2, [r7, #4]
 1837 0038 9A60     		str	r2, [r3, #8]
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure DMA Channel source address */
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->Instance->CMAR = SrcAddress;
 1838              		.loc 1 855 9
 1839 003a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 48


 1840 003c 1B68     		ldr	r3, [r3]
 1841              		.loc 1 855 26
 1842 003e BA68     		ldr	r2, [r7, #8]
 1843 0040 DA60     		str	r2, [r3, #12]
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   /* Peripheral to Memory */
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   else
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   {
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure DMA Channel source address */
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->Instance->CPAR = SrcAddress;
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     /* Configure DMA Channel destination address */
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****     hdma->Instance->CMAR = DstAddress;
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** }
 1844              		.loc 1 866 1
 1845 0042 07E0     		b	.L86
 1846              	.L84:
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 1847              		.loc 1 861 9
 1848 0044 FB68     		ldr	r3, [r7, #12]
 1849 0046 1B68     		ldr	r3, [r3]
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c **** 
 1850              		.loc 1 861 26
 1851 0048 BA68     		ldr	r2, [r7, #8]
 1852 004a 9A60     		str	r2, [r3, #8]
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 1853              		.loc 1 864 9
 1854 004c FB68     		ldr	r3, [r7, #12]
 1855 004e 1B68     		ldr	r3, [r3]
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_dma.c ****   }
 1856              		.loc 1 864 26
 1857 0050 7A68     		ldr	r2, [r7, #4]
 1858 0052 DA60     		str	r2, [r3, #12]
 1859              	.L86:
 1860              		.loc 1 866 1
 1861 0054 C046     		nop
 1862 0056 BD46     		mov	sp, r7
 1863 0058 04B0     		add	sp, sp, #16
 1864              		@ sp needed
 1865 005a 80BD     		pop	{r7, pc}
 1866              		.cfi_endproc
 1867              	.LFE59:
 1869              		.text
 1870              	.Letext0:
 1871              		.file 2 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1872              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1873              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 1874              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 1875              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal_dma.c
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:19     .text.HAL_DMA_Init:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:25     .text.HAL_DMA_Init:00000000 HAL_DMA_Init
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:204    .text.HAL_DMA_Init:000000e0 $d
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:212    .text.HAL_DMA_DeInit:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:218    .text.HAL_DMA_DeInit:00000000 HAL_DMA_DeInit
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:356    .text.HAL_DMA_DeInit:000000b0 $d
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:363    .text.HAL_DMA_Start:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:369    .text.HAL_DMA_Start:00000000 HAL_DMA_Start
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1784   .text.DMA_SetConfig:00000000 DMA_SetConfig
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:479    .text.HAL_DMA_Start_IT:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:485    .text.HAL_DMA_Start_IT:00000000 HAL_DMA_Start_IT
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:631    .text.HAL_DMA_Abort:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:637    .text.HAL_DMA_Abort:00000000 HAL_DMA_Abort
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:739    .text.HAL_DMA_Abort_IT:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:745    .text.HAL_DMA_Abort_IT:00000000 HAL_DMA_Abort_IT
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:858    .text.HAL_DMA_PollForTransfer:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:864    .text.HAL_DMA_PollForTransfer:00000000 HAL_DMA_PollForTransfer
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1126   .text.HAL_DMA_IRQHandler:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1132   .text.HAL_DMA_IRQHandler:00000000 HAL_DMA_IRQHandler
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1408   .text.HAL_DMA_RegisterCallback:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1414   .text.HAL_DMA_RegisterCallback:00000000 HAL_DMA_RegisterCallback
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1543   .text.HAL_DMA_UnRegisterCallback:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1549   .text.HAL_DMA_UnRegisterCallback:00000000 HAL_DMA_UnRegisterCallback
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1609   .rodata.HAL_DMA_UnRegisterCallback:00000000 $d
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1698   .text.HAL_DMA_UnRegisterCallback:000000ac $d
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1703   .text.HAL_DMA_GetState:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1709   .text.HAL_DMA_GetState:00000000 HAL_DMA_GetState
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1742   .text.HAL_DMA_GetError:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1748   .text.HAL_DMA_GetError:00000000 HAL_DMA_GetError
C:\Users\lidka\AppData\Local\Temp\ccR5mIFk.s:1779   .text.DMA_SetConfig:00000000 $t

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_GetTick

ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"ring_buffer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 72696E67 		.ascii	"ringBuffer\000"
  20      42756666 
  20      657200
  21 000b 00       		.align	2
  22              	.LC3:
  23 000c 436F7265 		.ascii	"Core/Src/ring_buffer.c\000"
  23      2F537263 
  23      2F72696E 
  23      675F6275 
  23      66666572 
  24 0023 00       		.align	2
  25              	.LC5:
  26 0024 64617461 		.ascii	"dataBuffer\000"
  26      42756666 
  26      657200
  27 002f 00       		.align	2
  28              	.LC7:
  29 0030 64617461 		.ascii	"dataBufferSize > 0\000"
  29      42756666 
  29      65725369 
  29      7A65203E 
  29      203000
  30              		.section	.text.RingBuffer_Init,"ax",%progbits
  31              		.align	1
  32              		.global	RingBuffer_Init
  33              		.syntax unified
  34              		.code	16
  35              		.thumb_func
  37              	RingBuffer_Init:
  38              	.LFB0:
  39              		.file 1 "Core/Src/ring_buffer.c"
   1:Core/Src/ring_buffer.c **** /* Includes ------------------------------------------------------------------*/
   2:Core/Src/ring_buffer.c **** #include <assert.h>
   3:Core/Src/ring_buffer.c **** #include "ring_buffer.h"
   4:Core/Src/ring_buffer.c **** 
   5:Core/Src/ring_buffer.c **** 
   6:Core/Src/ring_buffer.c **** bool RingBuffer_Init(RingBuffer *ringBuffer, char *dataBuffer, size_t dataBufferSize) 
   7:Core/Src/ring_buffer.c **** {
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 2


  40              		.loc 1 7 1
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 16
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 84B0     		sub	sp, sp, #16
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 24
  52 0004 00AF     		add	r7, sp, #0
  53              	.LCFI2:
  54              		.cfi_def_cfa_register 7
  55 0006 F860     		str	r0, [r7, #12]
  56 0008 B960     		str	r1, [r7, #8]
  57 000a 7A60     		str	r2, [r7, #4]
   8:Core/Src/ring_buffer.c **** 	assert(ringBuffer);
  58              		.loc 1 8 2
  59 000c FB68     		ldr	r3, [r7, #12]
  60 000e 002B     		cmp	r3, #0
  61 0010 05D1     		bne	.L2
  62              		.loc 1 8 2 is_stmt 0 discriminator 1
  63 0012 1B4B     		ldr	r3, .L7
  64 0014 1B4A     		ldr	r2, .L7+4
  65 0016 1C48     		ldr	r0, .L7+8
  66 0018 0821     		movs	r1, #8
  67 001a FFF7FEFF 		bl	__assert_func
  68              	.L2:
   9:Core/Src/ring_buffer.c **** 	assert(dataBuffer);
  69              		.loc 1 9 2 is_stmt 1
  70 001e BB68     		ldr	r3, [r7, #8]
  71 0020 002B     		cmp	r3, #0
  72 0022 05D1     		bne	.L3
  73              		.loc 1 9 2 is_stmt 0 discriminator 1
  74 0024 194B     		ldr	r3, .L7+12
  75 0026 174A     		ldr	r2, .L7+4
  76 0028 1748     		ldr	r0, .L7+8
  77 002a 0921     		movs	r1, #9
  78 002c FFF7FEFF 		bl	__assert_func
  79              	.L3:
  10:Core/Src/ring_buffer.c **** 	assert(dataBufferSize > 0);
  80              		.loc 1 10 2 is_stmt 1
  81 0030 7B68     		ldr	r3, [r7, #4]
  82 0032 002B     		cmp	r3, #0
  83 0034 05D1     		bne	.L4
  84              		.loc 1 10 2 is_stmt 0 discriminator 1
  85 0036 164B     		ldr	r3, .L7+16
  86 0038 124A     		ldr	r2, .L7+4
  87 003a 1348     		ldr	r0, .L7+8
  88 003c 0A21     		movs	r1, #10
  89 003e FFF7FEFF 		bl	__assert_func
  90              	.L4:
  11:Core/Src/ring_buffer.c **** 	
  12:Core/Src/ring_buffer.c **** 	if ((ringBuffer) && (dataBuffer) && (dataBufferSize > 0)) {
  91              		.loc 1 12 5 is_stmt 1
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 3


  92 0042 FB68     		ldr	r3, [r7, #12]
  93 0044 002B     		cmp	r3, #0
  94 0046 16D0     		beq	.L5
  95              		.loc 1 12 19 discriminator 1
  96 0048 BB68     		ldr	r3, [r7, #8]
  97 004a 002B     		cmp	r3, #0
  98 004c 13D0     		beq	.L5
  99              		.loc 1 12 35 discriminator 2
 100 004e 7B68     		ldr	r3, [r7, #4]
 101 0050 002B     		cmp	r3, #0
 102 0052 10D0     		beq	.L5
  13:Core/Src/ring_buffer.c **** 	  //TODO
  14:Core/Src/ring_buffer.c **** 	  ringBuffer->buffer = dataBuffer;
 103              		.loc 1 14 23
 104 0054 FB68     		ldr	r3, [r7, #12]
 105 0056 BA68     		ldr	r2, [r7, #8]
 106 0058 1A60     		str	r2, [r3]
  15:Core/Src/ring_buffer.c **** 	  ringBuffer->tail = 0;
 107              		.loc 1 15 21
 108 005a FB68     		ldr	r3, [r7, #12]
 109 005c 0022     		movs	r2, #0
 110 005e 1A61     		str	r2, [r3, #16]
  16:Core/Src/ring_buffer.c **** 	  ringBuffer->head = 0;
 111              		.loc 1 16 21
 112 0060 FB68     		ldr	r3, [r7, #12]
 113 0062 0022     		movs	r2, #0
 114 0064 DA60     		str	r2, [r3, #12]
  17:Core/Src/ring_buffer.c **** 	  ringBuffer->max = dataBufferSize;
 115              		.loc 1 17 20
 116 0066 FB68     		ldr	r3, [r7, #12]
 117 0068 7A68     		ldr	r2, [r7, #4]
 118 006a 9A60     		str	r2, [r3, #8]
  18:Core/Src/ring_buffer.c **** 	  ringBuffer->length = 0;
 119              		.loc 1 18 23
 120 006c FB68     		ldr	r3, [r7, #12]
 121 006e 0022     		movs	r2, #0
 122 0070 5A60     		str	r2, [r3, #4]
  19:Core/Src/ring_buffer.c **** 	  
  20:Core/Src/ring_buffer.c **** 	  return true;
 123              		.loc 1 20 11
 124 0072 0123     		movs	r3, #1
 125 0074 00E0     		b	.L6
 126              	.L5:
  21:Core/Src/ring_buffer.c **** 	}
  22:Core/Src/ring_buffer.c **** 	
  23:Core/Src/ring_buffer.c **** 
  24:Core/Src/ring_buffer.c **** 	return false;
 127              		.loc 1 24 9
 128 0076 0023     		movs	r3, #0
 129              	.L6:
  25:Core/Src/ring_buffer.c **** }
 130              		.loc 1 25 1
 131 0078 1800     		movs	r0, r3
 132 007a BD46     		mov	sp, r7
 133 007c 04B0     		add	sp, sp, #16
 134              		@ sp needed
 135 007e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 4


 136              	.L8:
 137              		.align	2
 138              	.L7:
 139 0080 00000000 		.word	.LC0
 140 0084 00000000 		.word	__func__.6
 141 0088 0C000000 		.word	.LC3
 142 008c 24000000 		.word	.LC5
 143 0090 30000000 		.word	.LC7
 144              		.cfi_endproc
 145              	.LFE0:
 147              		.section	.text.RingBuffer_Clear,"ax",%progbits
 148              		.align	1
 149              		.global	RingBuffer_Clear
 150              		.syntax unified
 151              		.code	16
 152              		.thumb_func
 154              	RingBuffer_Clear:
 155              	.LFB1:
  26:Core/Src/ring_buffer.c **** 
  27:Core/Src/ring_buffer.c **** bool RingBuffer_Clear(RingBuffer *ringBuffer)
  28:Core/Src/ring_buffer.c **** {
 156              		.loc 1 28 1
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              	.LCFI3:
 162              		.cfi_def_cfa_offset 8
 163              		.cfi_offset 7, -8
 164              		.cfi_offset 14, -4
 165 0002 82B0     		sub	sp, sp, #8
 166              	.LCFI4:
 167              		.cfi_def_cfa_offset 16
 168 0004 00AF     		add	r7, sp, #0
 169              	.LCFI5:
 170              		.cfi_def_cfa_register 7
 171 0006 7860     		str	r0, [r7, #4]
  29:Core/Src/ring_buffer.c **** 	assert(ringBuffer);
 172              		.loc 1 29 2
 173 0008 7B68     		ldr	r3, [r7, #4]
 174 000a 002B     		cmp	r3, #0
 175 000c 05D1     		bne	.L10
 176              		.loc 1 29 2 is_stmt 0 discriminator 1
 177 000e 0C4B     		ldr	r3, .L13
 178 0010 0C4A     		ldr	r2, .L13+4
 179 0012 0D48     		ldr	r0, .L13+8
 180 0014 1D21     		movs	r1, #29
 181 0016 FFF7FEFF 		bl	__assert_func
 182              	.L10:
  30:Core/Src/ring_buffer.c **** 	
  31:Core/Src/ring_buffer.c **** 	if (ringBuffer) {
 183              		.loc 1 31 5 is_stmt 1
 184 001a 7B68     		ldr	r3, [r7, #4]
 185 001c 002B     		cmp	r3, #0
 186 001e 0AD0     		beq	.L11
  32:Core/Src/ring_buffer.c **** 	    ringBuffer->tail = 0;
 187              		.loc 1 32 23
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 5


 188 0020 7B68     		ldr	r3, [r7, #4]
 189 0022 0022     		movs	r2, #0
 190 0024 1A61     		str	r2, [r3, #16]
  33:Core/Src/ring_buffer.c **** 	    ringBuffer->head = 0;
 191              		.loc 1 33 23
 192 0026 7B68     		ldr	r3, [r7, #4]
 193 0028 0022     		movs	r2, #0
 194 002a DA60     		str	r2, [r3, #12]
  34:Core/Src/ring_buffer.c **** 	    ringBuffer->length = 0;
 195              		.loc 1 34 25
 196 002c 7B68     		ldr	r3, [r7, #4]
 197 002e 0022     		movs	r2, #0
 198 0030 5A60     		str	r2, [r3, #4]
  35:Core/Src/ring_buffer.c ****         
  36:Core/Src/ring_buffer.c ****         
  37:Core/Src/ring_buffer.c ****         return true;
 199              		.loc 1 37 16
 200 0032 0123     		movs	r3, #1
 201 0034 00E0     		b	.L12
 202              	.L11:
  38:Core/Src/ring_buffer.c **** 	}
  39:Core/Src/ring_buffer.c **** 	return false;
 203              		.loc 1 39 9
 204 0036 0023     		movs	r3, #0
 205              	.L12:
  40:Core/Src/ring_buffer.c **** }
 206              		.loc 1 40 1
 207 0038 1800     		movs	r0, r3
 208 003a BD46     		mov	sp, r7
 209 003c 02B0     		add	sp, sp, #8
 210              		@ sp needed
 211 003e 80BD     		pop	{r7, pc}
 212              	.L14:
 213              		.align	2
 214              	.L13:
 215 0040 00000000 		.word	.LC0
 216 0044 00000000 		.word	__func__.5
 217 0048 0C000000 		.word	.LC3
 218              		.cfi_endproc
 219              	.LFE1:
 221              		.section	.text.RingBuffer_IsEmpty,"ax",%progbits
 222              		.align	1
 223              		.global	RingBuffer_IsEmpty
 224              		.syntax unified
 225              		.code	16
 226              		.thumb_func
 228              	RingBuffer_IsEmpty:
 229              	.LFB2:
  41:Core/Src/ring_buffer.c **** 
  42:Core/Src/ring_buffer.c **** bool RingBuffer_IsEmpty(const RingBuffer *ringBuffer)
  43:Core/Src/ring_buffer.c **** {
 230              		.loc 1 43 1
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 8
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 80B5     		push	{r7, lr}
 235              	.LCFI6:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 6


 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 82B0     		sub	sp, sp, #8
 240              	.LCFI7:
 241              		.cfi_def_cfa_offset 16
 242 0004 00AF     		add	r7, sp, #0
 243              	.LCFI8:
 244              		.cfi_def_cfa_register 7
 245 0006 7860     		str	r0, [r7, #4]
  44:Core/Src/ring_buffer.c ****   assert(ringBuffer);	
 246              		.loc 1 44 3
 247 0008 7B68     		ldr	r3, [r7, #4]
 248 000a 002B     		cmp	r3, #0
 249 000c 05D1     		bne	.L16
 250              		.loc 1 44 3 is_stmt 0 discriminator 1
 251 000e 074B     		ldr	r3, .L18
 252 0010 074A     		ldr	r2, .L18+4
 253 0012 0848     		ldr	r0, .L18+8
 254 0014 2C21     		movs	r1, #44
 255 0016 FFF7FEFF 		bl	__assert_func
 256              	.L16:
  45:Core/Src/ring_buffer.c **** 	return !ringBuffer->length;
 257              		.loc 1 45 20 is_stmt 1
 258 001a 7B68     		ldr	r3, [r7, #4]
 259 001c 5B68     		ldr	r3, [r3, #4]
 260              		.loc 1 45 9
 261 001e 5A42     		rsbs	r2, r3, #0
 262 0020 5341     		adcs	r3, r3, r2
 263 0022 DBB2     		uxtb	r3, r3
  46:Core/Src/ring_buffer.c **** }
 264              		.loc 1 46 1
 265 0024 1800     		movs	r0, r3
 266 0026 BD46     		mov	sp, r7
 267 0028 02B0     		add	sp, sp, #8
 268              		@ sp needed
 269 002a 80BD     		pop	{r7, pc}
 270              	.L19:
 271              		.align	2
 272              	.L18:
 273 002c 00000000 		.word	.LC0
 274 0030 00000000 		.word	__func__.4
 275 0034 0C000000 		.word	.LC3
 276              		.cfi_endproc
 277              	.LFE2:
 279              		.section	.text.RingBuffer_GetLen,"ax",%progbits
 280              		.align	1
 281              		.global	RingBuffer_GetLen
 282              		.syntax unified
 283              		.code	16
 284              		.thumb_func
 286              	RingBuffer_GetLen:
 287              	.LFB3:
  47:Core/Src/ring_buffer.c **** 
  48:Core/Src/ring_buffer.c **** size_t RingBuffer_GetLen(const RingBuffer *ringBuffer)
  49:Core/Src/ring_buffer.c **** {
 288              		.loc 1 49 1
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 7


 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 8
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              	.LCFI9:
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 82B0     		sub	sp, sp, #8
 298              	.LCFI10:
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              	.LCFI11:
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
  50:Core/Src/ring_buffer.c **** 	assert(ringBuffer);
 304              		.loc 1 50 2
 305 0008 7B68     		ldr	r3, [r7, #4]
 306 000a 002B     		cmp	r3, #0
 307 000c 05D1     		bne	.L21
 308              		.loc 1 50 2 is_stmt 0 discriminator 1
 309 000e 084B     		ldr	r3, .L24
 310 0010 084A     		ldr	r2, .L24+4
 311 0012 0948     		ldr	r0, .L24+8
 312 0014 3221     		movs	r1, #50
 313 0016 FFF7FEFF 		bl	__assert_func
 314              	.L21:
  51:Core/Src/ring_buffer.c **** 	
  52:Core/Src/ring_buffer.c **** 	if (ringBuffer) {
 315              		.loc 1 52 5 is_stmt 1
 316 001a 7B68     		ldr	r3, [r7, #4]
 317 001c 002B     		cmp	r3, #0
 318 001e 02D0     		beq	.L22
  53:Core/Src/ring_buffer.c **** 		return ringBuffer->length;
 319              		.loc 1 53 20
 320 0020 7B68     		ldr	r3, [r7, #4]
 321 0022 5B68     		ldr	r3, [r3, #4]
 322 0024 00E0     		b	.L23
 323              	.L22:
  54:Core/Src/ring_buffer.c **** 	}
  55:Core/Src/ring_buffer.c **** 	return 0;
 324              		.loc 1 55 9
 325 0026 0023     		movs	r3, #0
 326              	.L23:
  56:Core/Src/ring_buffer.c **** 	
  57:Core/Src/ring_buffer.c **** }
 327              		.loc 1 57 1
 328 0028 1800     		movs	r0, r3
 329 002a BD46     		mov	sp, r7
 330 002c 02B0     		add	sp, sp, #8
 331              		@ sp needed
 332 002e 80BD     		pop	{r7, pc}
 333              	.L25:
 334              		.align	2
 335              	.L24:
 336 0030 00000000 		.word	.LC0
 337 0034 00000000 		.word	__func__.3
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 8


 338 0038 0C000000 		.word	.LC3
 339              		.cfi_endproc
 340              	.LFE3:
 342              		.section	.text.RingBuffer_GetCapacity,"ax",%progbits
 343              		.align	1
 344              		.global	RingBuffer_GetCapacity
 345              		.syntax unified
 346              		.code	16
 347              		.thumb_func
 349              	RingBuffer_GetCapacity:
 350              	.LFB4:
  58:Core/Src/ring_buffer.c **** 
  59:Core/Src/ring_buffer.c **** size_t RingBuffer_GetCapacity(const RingBuffer *ringBuffer)
  60:Core/Src/ring_buffer.c **** {
 351              		.loc 1 60 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355 0000 80B5     		push	{r7, lr}
 356              	.LCFI12:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 82B0     		sub	sp, sp, #8
 361              	.LCFI13:
 362              		.cfi_def_cfa_offset 16
 363 0004 00AF     		add	r7, sp, #0
 364              	.LCFI14:
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
  61:Core/Src/ring_buffer.c **** 	assert(ringBuffer);
 367              		.loc 1 61 2
 368 0008 7B68     		ldr	r3, [r7, #4]
 369 000a 002B     		cmp	r3, #0
 370 000c 05D1     		bne	.L27
 371              		.loc 1 61 2 is_stmt 0 discriminator 1
 372 000e 084B     		ldr	r3, .L30
 373 0010 084A     		ldr	r2, .L30+4
 374 0012 0948     		ldr	r0, .L30+8
 375 0014 3D21     		movs	r1, #61
 376 0016 FFF7FEFF 		bl	__assert_func
 377              	.L27:
  62:Core/Src/ring_buffer.c **** 	
  63:Core/Src/ring_buffer.c **** 	if (ringBuffer) {
 378              		.loc 1 63 5 is_stmt 1
 379 001a 7B68     		ldr	r3, [r7, #4]
 380 001c 002B     		cmp	r3, #0
 381 001e 02D0     		beq	.L28
  64:Core/Src/ring_buffer.c **** 		return ringBuffer->max;
 382              		.loc 1 64 20
 383 0020 7B68     		ldr	r3, [r7, #4]
 384 0022 9B68     		ldr	r3, [r3, #8]
 385 0024 00E0     		b	.L29
 386              	.L28:
  65:Core/Src/ring_buffer.c **** 	}
  66:Core/Src/ring_buffer.c **** 	return 0;	
 387              		.loc 1 66 9
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 9


 388 0026 0023     		movs	r3, #0
 389              	.L29:
  67:Core/Src/ring_buffer.c **** }
 390              		.loc 1 67 1
 391 0028 1800     		movs	r0, r3
 392 002a BD46     		mov	sp, r7
 393 002c 02B0     		add	sp, sp, #8
 394              		@ sp needed
 395 002e 80BD     		pop	{r7, pc}
 396              	.L31:
 397              		.align	2
 398              	.L30:
 399 0030 00000000 		.word	.LC0
 400 0034 00000000 		.word	__func__.2
 401 0038 0C000000 		.word	.LC3
 402              		.cfi_endproc
 403              	.LFE4:
 405              		.section	.text.RingBuffer_PutChar,"ax",%progbits
 406              		.align	1
 407              		.global	RingBuffer_PutChar
 408              		.syntax unified
 409              		.code	16
 410              		.thumb_func
 412              	RingBuffer_PutChar:
 413              	.LFB5:
  68:Core/Src/ring_buffer.c **** 
  69:Core/Src/ring_buffer.c **** 
  70:Core/Src/ring_buffer.c **** bool RingBuffer_PutChar(RingBuffer *ringBuffer, char c)
  71:Core/Src/ring_buffer.c **** {
 414              		.loc 1 71 1
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 8
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418 0000 80B5     		push	{r7, lr}
 419              	.LCFI15:
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 82B0     		sub	sp, sp, #8
 424              	.LCFI16:
 425              		.cfi_def_cfa_offset 16
 426 0004 00AF     		add	r7, sp, #0
 427              	.LCFI17:
 428              		.cfi_def_cfa_register 7
 429 0006 7860     		str	r0, [r7, #4]
 430 0008 0A00     		movs	r2, r1
 431 000a FB1C     		adds	r3, r7, #3
 432 000c 1A70     		strb	r2, [r3]
  72:Core/Src/ring_buffer.c **** 	assert(ringBuffer);
 433              		.loc 1 72 2
 434 000e 7B68     		ldr	r3, [r7, #4]
 435 0010 002B     		cmp	r3, #0
 436 0012 05D1     		bne	.L33
 437              		.loc 1 72 2 is_stmt 0 discriminator 1
 438 0014 184B     		ldr	r3, .L37
 439 0016 194A     		ldr	r2, .L37+4
 440 0018 1948     		ldr	r0, .L37+8
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 10


 441 001a 4821     		movs	r1, #72
 442 001c FFF7FEFF 		bl	__assert_func
 443              	.L33:
  73:Core/Src/ring_buffer.c **** 	
  74:Core/Src/ring_buffer.c **** 	if (ringBuffer) {
 444              		.loc 1 74 5 is_stmt 1
 445 0020 7B68     		ldr	r3, [r7, #4]
 446 0022 002B     		cmp	r3, #0
 447 0024 22D0     		beq	.L34
  75:Core/Src/ring_buffer.c **** 		
  76:Core/Src/ring_buffer.c **** 		if(ringBuffer->max - ringBuffer->length){ //jest miejsce
 448              		.loc 1 76 16
 449 0026 7B68     		ldr	r3, [r7, #4]
 450 0028 9A68     		ldr	r2, [r3, #8]
 451              		.loc 1 76 34
 452 002a 7B68     		ldr	r3, [r7, #4]
 453 002c 5B68     		ldr	r3, [r3, #4]
 454              		.loc 1 76 5
 455 002e 9A42     		cmp	r2, r3
 456 0030 1CD0     		beq	.L34
  77:Core/Src/ring_buffer.c **** 		    ringBuffer->buffer[ringBuffer->head] = c;
 457              		.loc 1 77 17
 458 0032 7B68     		ldr	r3, [r7, #4]
 459 0034 1A68     		ldr	r2, [r3]
 460              		.loc 1 77 36
 461 0036 7B68     		ldr	r3, [r7, #4]
 462 0038 DB68     		ldr	r3, [r3, #12]
 463              		.loc 1 77 25
 464 003a D318     		adds	r3, r2, r3
 465              		.loc 1 77 44
 466 003c FA1C     		adds	r2, r7, #3
 467 003e 1278     		ldrb	r2, [r2]
 468 0040 1A70     		strb	r2, [r3]
  78:Core/Src/ring_buffer.c **** 		    ringBuffer->length++;
 469              		.loc 1 78 17
 470 0042 7B68     		ldr	r3, [r7, #4]
 471 0044 5B68     		ldr	r3, [r3, #4]
 472              		.loc 1 78 25
 473 0046 5A1C     		adds	r2, r3, #1
 474 0048 7B68     		ldr	r3, [r7, #4]
 475 004a 5A60     		str	r2, [r3, #4]
  79:Core/Src/ring_buffer.c **** 		    
  80:Core/Src/ring_buffer.c **** 		   
  81:Core/Src/ring_buffer.c **** 		   ringBuffer->head = (ringBuffer->head + 1);
 476              		.loc 1 81 36
 477 004c 7B68     		ldr	r3, [r7, #4]
 478 004e DB68     		ldr	r3, [r3, #12]
 479              		.loc 1 81 43
 480 0050 5A1C     		adds	r2, r3, #1
 481              		.loc 1 81 23
 482 0052 7B68     		ldr	r3, [r7, #4]
 483 0054 DA60     		str	r2, [r3, #12]
  82:Core/Src/ring_buffer.c **** 		   if(ringBuffer->head == (ringBuffer->max)){
 484              		.loc 1 82 19
 485 0056 7B68     		ldr	r3, [r7, #4]
 486 0058 DA68     		ldr	r2, [r3, #12]
 487              		.loc 1 82 40
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 11


 488 005a 7B68     		ldr	r3, [r7, #4]
 489 005c 9B68     		ldr	r3, [r3, #8]
 490              		.loc 1 82 8
 491 005e 9A42     		cmp	r2, r3
 492 0060 02D1     		bne	.L35
  83:Core/Src/ring_buffer.c **** 		       ringBuffer->head = 0;
 493              		.loc 1 83 27
 494 0062 7B68     		ldr	r3, [r7, #4]
 495 0064 0022     		movs	r2, #0
 496 0066 DA60     		str	r2, [r3, #12]
 497              	.L35:
  84:Core/Src/ring_buffer.c **** 		   }
  85:Core/Src/ring_buffer.c **** 		   
  86:Core/Src/ring_buffer.c **** 		
  87:Core/Src/ring_buffer.c **** 		   return true; 
 498              		.loc 1 87 13
 499 0068 0123     		movs	r3, #1
 500 006a 00E0     		b	.L36
 501              	.L34:
  88:Core/Src/ring_buffer.c **** 		}
  89:Core/Src/ring_buffer.c **** 		
  90:Core/Src/ring_buffer.c **** 		
  91:Core/Src/ring_buffer.c **** 	}
  92:Core/Src/ring_buffer.c **** 	return false;
 502              		.loc 1 92 9
 503 006c 0023     		movs	r3, #0
 504              	.L36:
  93:Core/Src/ring_buffer.c **** }
 505              		.loc 1 93 1
 506 006e 1800     		movs	r0, r3
 507 0070 BD46     		mov	sp, r7
 508 0072 02B0     		add	sp, sp, #8
 509              		@ sp needed
 510 0074 80BD     		pop	{r7, pc}
 511              	.L38:
 512 0076 C046     		.align	2
 513              	.L37:
 514 0078 00000000 		.word	.LC0
 515 007c 00000000 		.word	__func__.1
 516 0080 0C000000 		.word	.LC3
 517              		.cfi_endproc
 518              	.LFE5:
 520              		.section	.rodata
 521 0043 00       		.align	2
 522              	.LC27:
 523 0044 6300     		.ascii	"c\000"
 524              		.section	.text.RingBuffer_GetChar,"ax",%progbits
 525              		.align	1
 526              		.global	RingBuffer_GetChar
 527              		.syntax unified
 528              		.code	16
 529              		.thumb_func
 531              	RingBuffer_GetChar:
 532              	.LFB6:
  94:Core/Src/ring_buffer.c **** 
  95:Core/Src/ring_buffer.c **** bool RingBuffer_GetChar(RingBuffer *ringBuffer, char *c)
  96:Core/Src/ring_buffer.c **** {
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 12


 533              		.loc 1 96 1
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 8
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537 0000 80B5     		push	{r7, lr}
 538              	.LCFI18:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 82B0     		sub	sp, sp, #8
 543              	.LCFI19:
 544              		.cfi_def_cfa_offset 16
 545 0004 00AF     		add	r7, sp, #0
 546              	.LCFI20:
 547              		.cfi_def_cfa_register 7
 548 0006 7860     		str	r0, [r7, #4]
 549 0008 3960     		str	r1, [r7]
  97:Core/Src/ring_buffer.c **** 	assert(ringBuffer);
 550              		.loc 1 97 2
 551 000a 7B68     		ldr	r3, [r7, #4]
 552 000c 002B     		cmp	r3, #0
 553 000e 05D1     		bne	.L40
 554              		.loc 1 97 2 is_stmt 0 discriminator 1
 555 0010 1F4B     		ldr	r3, .L46
 556 0012 204A     		ldr	r2, .L46+4
 557 0014 2048     		ldr	r0, .L46+8
 558 0016 6121     		movs	r1, #97
 559 0018 FFF7FEFF 		bl	__assert_func
 560              	.L40:
  98:Core/Src/ring_buffer.c **** 	assert(c);
 561              		.loc 1 98 2 is_stmt 1
 562 001c 3B68     		ldr	r3, [r7]
 563 001e 002B     		cmp	r3, #0
 564 0020 05D1     		bne	.L41
 565              		.loc 1 98 2 is_stmt 0 discriminator 1
 566 0022 1E4B     		ldr	r3, .L46+12
 567 0024 1B4A     		ldr	r2, .L46+4
 568 0026 1C48     		ldr	r0, .L46+8
 569 0028 6221     		movs	r1, #98
 570 002a FFF7FEFF 		bl	__assert_func
 571              	.L41:
  99:Core/Src/ring_buffer.c **** 	
 100:Core/Src/ring_buffer.c ****   if ((ringBuffer) && (c)) {
 572              		.loc 1 100 6 is_stmt 1
 573 002e 7B68     		ldr	r3, [r7, #4]
 574 0030 002B     		cmp	r3, #0
 575 0032 27D0     		beq	.L42
 576              		.loc 1 100 20 discriminator 1
 577 0034 3B68     		ldr	r3, [r7]
 578 0036 002B     		cmp	r3, #0
 579 0038 24D0     		beq	.L42
 101:Core/Src/ring_buffer.c **** 		
 102:Core/Src/ring_buffer.c **** 		if(RingBuffer_IsEmpty(ringBuffer)){
 580              		.loc 1 102 6
 581 003a 7B68     		ldr	r3, [r7, #4]
 582 003c 1800     		movs	r0, r3
 583 003e FFF7FEFF 		bl	RingBuffer_IsEmpty
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 13


 584 0042 031E     		subs	r3, r0, #0
 585              		.loc 1 102 5
 586 0044 01D0     		beq	.L43
 103:Core/Src/ring_buffer.c **** 		    return false;
 587              		.loc 1 103 14
 588 0046 0023     		movs	r3, #0
 589 0048 1DE0     		b	.L44
 590              	.L43:
 104:Core/Src/ring_buffer.c **** 		}
 105:Core/Src/ring_buffer.c **** 		
 106:Core/Src/ring_buffer.c **** 		*c = ringBuffer->buffer[ringBuffer->tail];
 591              		.loc 1 106 18
 592 004a 7B68     		ldr	r3, [r7, #4]
 593 004c 1A68     		ldr	r2, [r3]
 594              		.loc 1 106 37
 595 004e 7B68     		ldr	r3, [r7, #4]
 596 0050 1B69     		ldr	r3, [r3, #16]
 597              		.loc 1 106 26
 598 0052 D318     		adds	r3, r2, r3
 599 0054 1A78     		ldrb	r2, [r3]
 600              		.loc 1 106 6
 601 0056 3B68     		ldr	r3, [r7]
 602 0058 1A70     		strb	r2, [r3]
 107:Core/Src/ring_buffer.c **** 		
 108:Core/Src/ring_buffer.c **** 		ringBuffer-> tail = (ringBuffer->tail + 1);
 603              		.loc 1 108 34
 604 005a 7B68     		ldr	r3, [r7, #4]
 605 005c 1B69     		ldr	r3, [r3, #16]
 606              		.loc 1 108 41
 607 005e 5A1C     		adds	r2, r3, #1
 608              		.loc 1 108 21
 609 0060 7B68     		ldr	r3, [r7, #4]
 610 0062 1A61     		str	r2, [r3, #16]
 109:Core/Src/ring_buffer.c **** 		   if(ringBuffer-> tail == ringBuffer->max){
 611              		.loc 1 109 19
 612 0064 7B68     		ldr	r3, [r7, #4]
 613 0066 1A69     		ldr	r2, [r3, #16]
 614              		.loc 1 109 40
 615 0068 7B68     		ldr	r3, [r7, #4]
 616 006a 9B68     		ldr	r3, [r3, #8]
 617              		.loc 1 109 8
 618 006c 9A42     		cmp	r2, r3
 619 006e 02D1     		bne	.L45
 110:Core/Src/ring_buffer.c **** 		       ringBuffer->tail = 0;
 620              		.loc 1 110 27
 621 0070 7B68     		ldr	r3, [r7, #4]
 622 0072 0022     		movs	r2, #0
 623 0074 1A61     		str	r2, [r3, #16]
 624              	.L45:
 111:Core/Src/ring_buffer.c **** 		   }
 112:Core/Src/ring_buffer.c **** 		ringBuffer->length--;
 625              		.loc 1 112 13
 626 0076 7B68     		ldr	r3, [r7, #4]
 627 0078 5B68     		ldr	r3, [r3, #4]
 628              		.loc 1 112 21
 629 007a 5A1E     		subs	r2, r3, #1
 630 007c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 14


 631 007e 5A60     		str	r2, [r3, #4]
 113:Core/Src/ring_buffer.c **** 		return true;
 632              		.loc 1 113 10
 633 0080 0123     		movs	r3, #1
 634 0082 00E0     		b	.L44
 635              	.L42:
 114:Core/Src/ring_buffer.c **** 	}
 115:Core/Src/ring_buffer.c **** 	return false;
 636              		.loc 1 115 9
 637 0084 0023     		movs	r3, #0
 638              	.L44:
 116:Core/Src/ring_buffer.c **** }
 639              		.loc 1 116 1
 640 0086 1800     		movs	r0, r3
 641 0088 BD46     		mov	sp, r7
 642 008a 02B0     		add	sp, sp, #8
 643              		@ sp needed
 644 008c 80BD     		pop	{r7, pc}
 645              	.L47:
 646 008e C046     		.align	2
 647              	.L46:
 648 0090 00000000 		.word	.LC0
 649 0094 00000000 		.word	__func__.0
 650 0098 0C000000 		.word	.LC3
 651 009c 44000000 		.word	.LC27
 652              		.cfi_endproc
 653              	.LFE6:
 655              		.section	.rodata.__func__.6,"a"
 656              		.align	2
 659              	__func__.6:
 660 0000 52696E67 		.ascii	"RingBuffer_Init\000"
 660      42756666 
 660      65725F49 
 660      6E697400 
 661              		.section	.rodata.__func__.5,"a"
 662              		.align	2
 665              	__func__.5:
 666 0000 52696E67 		.ascii	"RingBuffer_Clear\000"
 666      42756666 
 666      65725F43 
 666      6C656172 
 666      00
 667              		.section	.rodata.__func__.4,"a"
 668              		.align	2
 671              	__func__.4:
 672 0000 52696E67 		.ascii	"RingBuffer_IsEmpty\000"
 672      42756666 
 672      65725F49 
 672      73456D70 
 672      747900
 673              		.section	.rodata.__func__.3,"a"
 674              		.align	2
 677              	__func__.3:
 678 0000 52696E67 		.ascii	"RingBuffer_GetLen\000"
 678      42756666 
 678      65725F47 
 678      65744C65 
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 15


 678      6E00
 679              		.section	.rodata.__func__.2,"a"
 680              		.align	2
 683              	__func__.2:
 684 0000 52696E67 		.ascii	"RingBuffer_GetCapacity\000"
 684      42756666 
 684      65725F47 
 684      65744361 
 684      70616369 
 685              		.section	.rodata.__func__.1,"a"
 686              		.align	2
 689              	__func__.1:
 690 0000 52696E67 		.ascii	"RingBuffer_PutChar\000"
 690      42756666 
 690      65725F50 
 690      75744368 
 690      617200
 691              		.section	.rodata.__func__.0,"a"
 692              		.align	2
 695              	__func__.0:
 696 0000 52696E67 		.ascii	"RingBuffer_GetChar\000"
 696      42756666 
 696      65725F47 
 696      65744368 
 696      617200
 697              		.text
 698              	.Letext0:
 699              		.file 2 "Core/Inc/ring_buffer.h"
 700              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi\
ARM GAS  C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 ring_buffer.c
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:18     .rodata:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:31     .text.RingBuffer_Init:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:37     .text.RingBuffer_Init:00000000 RingBuffer_Init
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:139    .text.RingBuffer_Init:00000080 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:659    .rodata.__func__.6:00000000 __func__.6
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:148    .text.RingBuffer_Clear:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:154    .text.RingBuffer_Clear:00000000 RingBuffer_Clear
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:215    .text.RingBuffer_Clear:00000040 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:665    .rodata.__func__.5:00000000 __func__.5
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:222    .text.RingBuffer_IsEmpty:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:228    .text.RingBuffer_IsEmpty:00000000 RingBuffer_IsEmpty
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:273    .text.RingBuffer_IsEmpty:0000002c $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:671    .rodata.__func__.4:00000000 __func__.4
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:280    .text.RingBuffer_GetLen:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:286    .text.RingBuffer_GetLen:00000000 RingBuffer_GetLen
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:336    .text.RingBuffer_GetLen:00000030 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:677    .rodata.__func__.3:00000000 __func__.3
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:343    .text.RingBuffer_GetCapacity:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:349    .text.RingBuffer_GetCapacity:00000000 RingBuffer_GetCapacity
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:399    .text.RingBuffer_GetCapacity:00000030 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:683    .rodata.__func__.2:00000000 __func__.2
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:406    .text.RingBuffer_PutChar:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:412    .text.RingBuffer_PutChar:00000000 RingBuffer_PutChar
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:514    .text.RingBuffer_PutChar:00000078 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:689    .rodata.__func__.1:00000000 __func__.1
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:525    .text.RingBuffer_GetChar:00000000 $t
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:531    .text.RingBuffer_GetChar:00000000 RingBuffer_GetChar
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:648    .text.RingBuffer_GetChar:00000090 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:695    .rodata.__func__.0:00000000 __func__.0
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:656    .rodata.__func__.6:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:662    .rodata.__func__.5:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:668    .rodata.__func__.4:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:674    .rodata.__func__.3:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:680    .rodata.__func__.2:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:686    .rodata.__func__.1:00000000 $d
C:\Users\lidka\AppData\Local\Temp\cc0qSCVP.s:692    .rodata.__func__.0:00000000 $d

UNDEFINED SYMBOLS
__assert_func

ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l0xx_hal_flash_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_FLASHEx_Erase
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	HAL_FLASHEx_Erase:
  25              	.LFB47:
  26              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @file    stm32l0xx_hal_flash_ex.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *    
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *          functionalities of the internal FLASH memory:
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            + FLASH Interface configuration
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            + FLASH Memory Erasing
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            + DATA EEPROM Programming/Erasing
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            + Option Bytes Programming
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            + Interrupts management
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *    
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   @verbatim
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                ##### Flash peripheral Extended features  #####
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****            
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   [..] Comparing to other products, the FLASH interface for STM32L0xx
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        devices contains the following additional features        
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) Erase functions
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) DATA_EEPROM memory management
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) BOOT option bit configuration       
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) PCROP protection for all sectors
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****    
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        of all STM32L0xx. It includes:
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) Full DATA_EEPROM erase and program management
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) Boot activation
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 2


  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (+) PCROP protection configuration and control for all pages
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   @endverbatim
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ******************************************************************************
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @attention
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics. 
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * All rights reserved.</center></h2>
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * the "License"; You may not use this file except in compliance with the 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * License. You may obtain a copy of the License at:
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ******************************************************************************  
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */ 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #include "stm32l0xx_hal.h"
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @addtogroup STM32L0xx_HAL_Driver
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @addtogroup FLASH
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Variables
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  * @{
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  */
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Variables used for Erase pages under interruption*/
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Constants FLASHEx Private Constants
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  * @{
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  */
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Macros FLASHEx Private Macros
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 3


  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */ 
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  * @{
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  */
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** void                      FLASH_PageErase(uint32_t PageAddress);
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_BFB2)
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BootConfig(uint8_t OB_BOOT);
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_BFB2 */
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_RDPConfig(uint8_t OB_RDP);
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY);
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BORConfig(uint8_t OB_BOR);
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetRDP(void);
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetUser(void);
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOR(void);
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOOTBit1(void);
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BOOTBit1Config(uint8_t OB_BootBit1);
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_ProtectedSectorsConfig(uint32_t Sector, uint32_t Sector2, uint32
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #else
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_ProtectedSectorsConfig(uint32_t Sector, uint32_t NewState);
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint32_t           FLASH_OB_GetWRP(void);
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint32_t           FLASH_OB_GetWRP2(void);
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /* Exported functions ---------------------------------------------------------*/
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 FLASHEx Memory Erasing functions
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  *  @brief   FLASH Memory Erasing functions
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  *
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** @verbatim   
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                 ##### FLASH Erasing Programming functions ##### 
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     [..] The FLASH Memory Erasing functions, includes the following functions:
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (+) HAL_FLASHEx_Erase: return only when erase has been done
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (+) HAL_FLASHEx_Erase_IT: end of erase is done when HAL_FLASH_EndOfOperationCallback 
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         is called with parameter 0xFFFFFFFF
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     [..] Any operation of erase should follow these steps:
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the HAL_FLASH_Unlock() function to enable the flash control register and 
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 4


 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         program memory access.
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the desired function to erase page.
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the HAL_FLASH_Lock() to disable the flash program memory access 
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****        (recommended to protect the FLASH memory against possible unwanted operation).
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** @endverbatim
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory Pages 
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         must be called before.
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param[out]  PageError pointer to variable  that
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information on faulty page in case of error
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the pages have been correctly erased)
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
  27              		.loc 1 172 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 B0B5     		push	{r4, r5, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 3960     		str	r1, [r7]
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  46              		.loc 1 173 21
  47 000a 0F23     		movs	r3, #15
  48 000c FB18     		adds	r3, r7, r3
  49 000e 0122     		movs	r2, #1
  50 0010 1A70     		strb	r2, [r3]
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t address = 0U;
  51              		.loc 1 174 12
  52 0012 0023     		movs	r3, #0
  53 0014 BB60     		str	r3, [r7, #8]
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Locked */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 5


 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
  54              		.loc 1 177 3
  55 0016 294B     		ldr	r3, .L8
  56 0018 1B7C     		ldrb	r3, [r3, #16]
  57 001a 012B     		cmp	r3, #1
  58 001c 01D1     		bne	.L2
  59              		.loc 1 177 3 is_stmt 0 discriminator 1
  60 001e 0223     		movs	r3, #2
  61 0020 48E0     		b	.L3
  62              	.L2:
  63              		.loc 1 177 3 discriminator 2
  64 0022 264B     		ldr	r3, .L8
  65 0024 0122     		movs	r2, #1
  66 0026 1A74     		strb	r2, [r3, #16]
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
  67              		.loc 1 180 12 is_stmt 1 discriminator 2
  68 0028 0F25     		movs	r5, #15
  69 002a 7C19     		adds	r4, r7, r5
  70 002c 244B     		ldr	r3, .L8+4
  71 002e 1800     		movs	r0, r3
  72 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  73 0034 0300     		movs	r3, r0
  74 0036 2370     		strb	r3, [r4]
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if (status == HAL_OK)
  75              		.loc 1 182 6 discriminator 2
  76 0038 7B19     		adds	r3, r7, r5
  77 003a 1B78     		ldrb	r3, [r3]
  78 003c 002B     		cmp	r3, #0
  79 003e 33D1     		bne	.L4
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /*Initialization of PageError variable*/
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     *PageError = 0xFFFFFFFFU;
  80              		.loc 1 185 16
  81 0040 3B68     		ldr	r3, [r7]
  82 0042 0122     		movs	r2, #1
  83 0044 5242     		rsbs	r2, r2, #0
  84 0046 1A60     		str	r2, [r3]
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Check the parameters */
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     assert_param(IS_NBPAGES(pEraseInit->NbPages));
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEr
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Erase page by page to be done*/
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     for(address = pEraseInit->PageAddress; 
  85              		.loc 1 194 17
  86 0048 7B68     		ldr	r3, [r7, #4]
  87 004a 5B68     		ldr	r3, [r3, #4]
  88 004c BB60     		str	r3, [r7, #8]
  89              		.loc 1 194 5
  90 004e 22E0     		b	.L5
  91              	.L7:
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 6


 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       FLASH_PageErase(address);
  92              		.loc 1 198 7
  93 0050 BB68     		ldr	r3, [r7, #8]
  94 0052 1800     		movs	r0, r3
  95 0054 FFF7FEFF 		bl	FLASH_PageErase
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
  96              		.loc 1 201 16
  97 0058 0F25     		movs	r5, #15
  98 005a 7C19     		adds	r4, r7, r5
  99 005c 184B     		ldr	r3, .L8+4
 100 005e 1800     		movs	r0, r3
 101 0060 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 102 0064 0300     		movs	r3, r0
 103 0066 2370     		strb	r3, [r4]
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* If the erase operation is completed, disable the ERASE Bit */
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->PECR, FLASH_PECR_PROG);
 104              		.loc 1 204 7
 105 0068 164B     		ldr	r3, .L8+8
 106 006a 5A68     		ldr	r2, [r3, #4]
 107 006c 154B     		ldr	r3, .L8+8
 108 006e 0821     		movs	r1, #8
 109 0070 8A43     		bics	r2, r1
 110 0072 5A60     		str	r2, [r3, #4]
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->PECR, FLASH_PECR_ERASE);
 111              		.loc 1 205 7
 112 0074 134B     		ldr	r3, .L8+8
 113 0076 5A68     		ldr	r2, [r3, #4]
 114 0078 124B     		ldr	r3, .L8+8
 115 007a 1349     		ldr	r1, .L8+12
 116 007c 0A40     		ands	r2, r1
 117 007e 5A60     		str	r2, [r3, #4]
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       if (status != HAL_OK) 
 118              		.loc 1 207 10
 119 0080 7B19     		adds	r3, r7, r5
 120 0082 1B78     		ldrb	r3, [r3]
 121 0084 002B     		cmp	r3, #0
 122 0086 03D0     		beq	.L6
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       {
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         /* In case of error, stop erase procedure and return the faulty address */
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         *PageError = address;
 123              		.loc 1 210 20
 124 0088 3B68     		ldr	r3, [r7]
 125 008a BA68     		ldr	r2, [r7, #8]
 126 008c 1A60     		str	r2, [r3]
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         break;
 127              		.loc 1 211 9
 128 008e 0BE0     		b	.L4
 129              	.L6:
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 130              		.loc 1 196 17
 131 0090 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 7


 132 0092 8033     		adds	r3, r3, #128
 133 0094 BB60     		str	r3, [r7, #8]
 134              	.L5:
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 135              		.loc 1 195 31 discriminator 1
 136 0096 7B68     		ldr	r3, [r7, #4]
 137 0098 9B68     		ldr	r3, [r3, #8]
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 138              		.loc 1 195 41 discriminator 1
 139 009a DA01     		lsls	r2, r3, #7
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 140              		.loc 1 195 72 discriminator 1
 141 009c 7B68     		ldr	r3, [r7, #4]
 142 009e 5B68     		ldr	r3, [r3, #4]
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 143              		.loc 1 195 60 discriminator 1
 144 00a0 D318     		adds	r3, r2, r3
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 145              		.loc 1 194 5 discriminator 1
 146 00a2 BA68     		ldr	r2, [r7, #8]
 147 00a4 9A42     		cmp	r2, r3
 148 00a6 D3D3     		bcc	.L7
 149              	.L4:
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       }
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Unlocked */
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 150              		.loc 1 217 3
 151 00a8 044B     		ldr	r3, .L8
 152 00aa 0022     		movs	r2, #0
 153 00ac 1A74     		strb	r2, [r3, #16]
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 154              		.loc 1 219 10
 155 00ae 0F23     		movs	r3, #15
 156 00b0 FB18     		adds	r3, r7, r3
 157 00b2 1B78     		ldrb	r3, [r3]
 158              	.L3:
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 159              		.loc 1 220 1
 160 00b4 1800     		movs	r0, r3
 161 00b6 BD46     		mov	sp, r7
 162 00b8 04B0     		add	sp, sp, #16
 163              		@ sp needed
 164 00ba B0BD     		pop	{r4, r5, r7, pc}
 165              	.L9:
 166              		.align	2
 167              	.L8:
 168 00bc 00000000 		.word	pFlash
 169 00c0 50C30000 		.word	50000
 170 00c4 00200240 		.word	1073881088
 171 00c8 FFFDFFFF 		.word	-513
 172              		.cfi_endproc
 173              	.LFE47:
 175              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 8


 176              		.align	1
 177              		.global	HAL_FLASHEx_Erase_IT
 178              		.syntax unified
 179              		.code	16
 180              		.thumb_func
 182              	HAL_FLASHEx_Erase_IT:
 183              	.LFB48:
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Perform a page erase of the specified FLASH memory pages  with interrupt enabled
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         must be called before.
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *          End of erase is done when @ref HAL_FLASH_EndOfOperationCallback is called with paramet
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *          0xFFFFFFFF
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 184              		.loc 1 236 1
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 16
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 B0B5     		push	{r4, r5, r7, lr}
 189              	.LCFI3:
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 4, -16
 192              		.cfi_offset 5, -12
 193              		.cfi_offset 7, -8
 194              		.cfi_offset 14, -4
 195 0002 84B0     		sub	sp, sp, #16
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 32
 198 0004 00AF     		add	r7, sp, #0
 199              	.LCFI5:
 200              		.cfi_def_cfa_register 7
 201 0006 7860     		str	r0, [r7, #4]
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 202              		.loc 1 237 21
 203 0008 0F23     		movs	r3, #15
 204 000a FB18     		adds	r3, r7, r3
 205 000c 0122     		movs	r2, #1
 206 000e 1A70     		strb	r2, [r3]
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* If procedure already ongoing, reject the next one */
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if (pFlash.ProcedureOnGoing != FLASH_PROC_NONE)
 207              		.loc 1 240 13
 208 0010 1E4B     		ldr	r3, .L16
 209 0012 1B78     		ldrb	r3, [r3]
 210 0014 DBB2     		uxtb	r3, r3
 211              		.loc 1 240 6
 212 0016 002B     		cmp	r3, #0
 213 0018 01D0     		beq	.L11
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 9


 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     return HAL_ERROR;
 214              		.loc 1 242 12
 215 001a 0123     		movs	r3, #1
 216 001c 32E0     		b	.L12
 217              	.L11:
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_NBPAGES(pEraseInit->NbPages));
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1)) + pErase
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Locked */
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 218              		.loc 1 252 3
 219 001e 1B4B     		ldr	r3, .L16
 220 0020 1B7C     		ldrb	r3, [r3, #16]
 221 0022 012B     		cmp	r3, #1
 222 0024 01D1     		bne	.L13
 223              		.loc 1 252 3 is_stmt 0 discriminator 1
 224 0026 0223     		movs	r3, #2
 225 0028 2CE0     		b	.L12
 226              	.L13:
 227              		.loc 1 252 3 discriminator 2
 228 002a 184B     		ldr	r3, .L16
 229 002c 0122     		movs	r2, #1
 230 002e 1A74     		strb	r2, [r3, #16]
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 231              		.loc 1 255 12 is_stmt 1 discriminator 2
 232 0030 0F25     		movs	r5, #15
 233 0032 7C19     		adds	r4, r7, r5
 234 0034 164B     		ldr	r3, .L16+4
 235 0036 1800     		movs	r0, r3
 236 0038 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 237 003c 0300     		movs	r3, r0
 238 003e 2370     		strb	r3, [r4]
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if (status == HAL_OK)
 239              		.loc 1 257 6 discriminator 2
 240 0040 7B19     		adds	r3, r7, r5
 241 0042 1B78     		ldrb	r3, [r3]
 242 0044 002B     		cmp	r3, #0
 243 0046 17D1     		bne	.L14
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Enable End of FLASH Operation and Error source interrupts */
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_ERR);
 244              		.loc 1 260 5
 245 0048 124B     		ldr	r3, .L16+8
 246 004a 5A68     		ldr	r2, [r3, #4]
 247 004c 114B     		ldr	r3, .L16+8
 248 004e C021     		movs	r1, #192
 249 0050 8902     		lsls	r1, r1, #10
 250 0052 0A43     		orrs	r2, r1
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 10


 251 0054 5A60     		str	r2, [r3, #4]
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PAGEERASE;
 252              		.loc 1 262 29
 253 0056 0D4B     		ldr	r3, .L16
 254 0058 0122     		movs	r2, #1
 255 005a 1A70     		strb	r2, [r3]
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.NbPagesToErase = pEraseInit->NbPages;
 256              		.loc 1 263 39
 257 005c 7B68     		ldr	r3, [r7, #4]
 258 005e 9A68     		ldr	r2, [r3, #8]
 259              		.loc 1 263 27
 260 0060 0A4B     		ldr	r3, .L16
 261 0062 5A60     		str	r2, [r3, #4]
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.Page = pEraseInit->PageAddress;
 262              		.loc 1 264 29
 263 0064 7B68     		ldr	r3, [r7, #4]
 264 0066 5A68     		ldr	r2, [r3, #4]
 265              		.loc 1 264 17
 266 0068 084B     		ldr	r3, .L16
 267 006a DA60     		str	r2, [r3, #12]
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /*Erase 1st page and wait for IT*/
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     FLASH_PageErase(pEraseInit->PageAddress);
 268              		.loc 1 267 5
 269 006c 7B68     		ldr	r3, [r7, #4]
 270 006e 5B68     		ldr	r3, [r3, #4]
 271 0070 1800     		movs	r0, r3
 272 0072 FFF7FEFF 		bl	FLASH_PageErase
 273 0076 02E0     		b	.L15
 274              	.L14:
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   else
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Process Unlocked */
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     __HAL_UNLOCK(&pFlash);
 275              		.loc 1 272 5
 276 0078 044B     		ldr	r3, .L16
 277 007a 0022     		movs	r2, #0
 278 007c 1A74     		strb	r2, [r3, #16]
 279              	.L15:
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 280              		.loc 1 275 10
 281 007e 0F23     		movs	r3, #15
 282 0080 FB18     		adds	r3, r7, r3
 283 0082 1B78     		ldrb	r3, [r3]
 284              	.L12:
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 285              		.loc 1 276 1
 286 0084 1800     		movs	r0, r3
 287 0086 BD46     		mov	sp, r7
 288 0088 04B0     		add	sp, sp, #16
 289              		@ sp needed
 290 008a B0BD     		pop	{r4, r5, r7, pc}
 291              	.L17:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 11


 292              		.align	2
 293              	.L16:
 294 008c 00000000 		.word	pFlash
 295 0090 50C30000 		.word	50000
 296 0094 00200240 		.word	1073881088
 297              		.cfi_endproc
 298              	.LFE48:
 300              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_FLASHEx_OBProgram
 303              		.syntax unified
 304              		.code	16
 305              		.thumb_func
 307              	HAL_FLASHEx_OBProgram:
 308              	.LFB49:
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group2 Option Bytes Programming functions
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  *  @brief   Option Bytes Programming functions
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  *
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** @verbatim   
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                 ##### Option Bytes Programming functions ##### 
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   ==============================================================================  
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     [..] Any operation of erase or program should follow these steps:
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the HAL_FLASH_OB_Unlock() function to enable the Flash option control 
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         register access.
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call following function to program the desired option bytes.
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         (++) HAL_FLASHEx_OBProgram:
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****          - To Enable/Disable the desired sector write protection.
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****          - To set the desired read Protection Level.
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****          - To configure the user option Bytes: IWDG, STOP and the Standby.
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****          - To Set the BOR level.
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Once all needed option bytes to be programmed are correctly written, call the
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         HAL_FLASH_OB_Launch(void) function to launch the Option Bytes programming process.
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the HAL_FLASH_OB_Lock() to disable the Flash option control register access (recommend
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         to protect the option Bytes against possible unwanted operations).
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     [..] Proprietary code Read Out Protection (PcROP):
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) The PcROP sector is selected by using the same option bytes as the Write
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         protection (nWRPi bits). As a result, these 2 options are exclusive each other.
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) In order to activate the PcROP (change the function of the nWRPi option bits), 
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         the WPRMOD option bit must be activated.
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) The active value of nWRPi bits is inverted when PCROP mode is active, this
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         means: if WPRMOD = 1 and nWRPi = 1 (default value), then the user sector "i"
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         is read/write protected.
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) To activate PCROP mode for Flash sector(s), you need to call the following function:
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         (++) HAL_FLASHEx_AdvOBProgram in selecting sectors to be read/write protected
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         (++) HAL_FLASHEx_OB_SelectPCROP to enable the read/write protection
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** @endverbatim
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 12


 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Program option bytes
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 309              		.loc 1 328 1
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 16
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 B0B5     		push	{r4, r5, r7, lr}
 314              	.LCFI6:
 315              		.cfi_def_cfa_offset 16
 316              		.cfi_offset 4, -16
 317              		.cfi_offset 5, -12
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 84B0     		sub	sp, sp, #16
 321              	.LCFI7:
 322              		.cfi_def_cfa_offset 32
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI8:
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 327              		.loc 1 329 21
 328 0008 0F23     		movs	r3, #15
 329 000a FB18     		adds	r3, r7, r3
 330 000c 0122     		movs	r2, #1
 331 000e 1A70     		strb	r2, [r3]
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Locked */
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 332              		.loc 1 332 3
 333 0010 4A4B     		ldr	r3, .L26
 334 0012 1B7C     		ldrb	r3, [r3, #16]
 335 0014 012B     		cmp	r3, #1
 336 0016 01D1     		bne	.L19
 337              		.loc 1 332 3 is_stmt 0 discriminator 1
 338 0018 0223     		movs	r3, #2
 339 001a 8AE0     		b	.L20
 340              	.L19:
 341              		.loc 1 332 3 discriminator 2
 342 001c 474B     		ldr	r3, .L26
 343 001e 0122     		movs	r2, #1
 344 0020 1A74     		strb	r2, [r3, #16]
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /*Write protection configuration*/
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 345              		.loc 1 338 14 is_stmt 1 discriminator 2
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 13


 346 0022 7B68     		ldr	r3, [r7, #4]
 347 0024 1B68     		ldr	r3, [r3]
 348              		.loc 1 338 27 discriminator 2
 349 0026 0122     		movs	r2, #1
 350 0028 1340     		ands	r3, r2
 351              		.loc 1 338 5 discriminator 2
 352 002a 16D0     		beq	.L21
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_ProtectedSectorsConfig(pOBInit->WRPSector, pOBInit->WRPSector2, pOBInit->WRPS
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #else
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_ProtectedSectorsConfig(pOBInit->WRPSector, pOBInit->WRPState);
 353              		.loc 1 344 14
 354 002c 7B68     		ldr	r3, [r7, #4]
 355 002e 9A68     		ldr	r2, [r3, #8]
 356 0030 7B68     		ldr	r3, [r7, #4]
 357 0032 5B68     		ldr	r3, [r3, #4]
 358 0034 0F25     		movs	r5, #15
 359 0036 7C19     		adds	r4, r7, r5
 360 0038 1900     		movs	r1, r3
 361 003a 1000     		movs	r0, r2
 362 003c FFF7FEFF 		bl	FLASH_OB_ProtectedSectorsConfig
 363 0040 0300     		movs	r3, r0
 364 0042 2370     		strb	r3, [r4]
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 365              		.loc 1 346 8
 366 0044 2900     		movs	r1, r5
 367 0046 7B18     		adds	r3, r7, r1
 368 0048 1B78     		ldrb	r3, [r3]
 369 004a 002B     		cmp	r3, #0
 370 004c 05D0     		beq	.L21
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Process Unlocked */
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 371              		.loc 1 349 7
 372 004e 3B4B     		ldr	r3, .L26
 373 0050 0022     		movs	r2, #0
 374 0052 1A74     		strb	r2, [r3, #16]
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       return status;
 375              		.loc 1 350 14
 376 0054 7B18     		adds	r3, r7, r1
 377 0056 1B78     		ldrb	r3, [r3]
 378 0058 6BE0     		b	.L20
 379              	.L21:
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Read protection configuration*/
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 380              		.loc 1 355 14
 381 005a 7B68     		ldr	r3, [r7, #4]
 382 005c 1B68     		ldr	r3, [r3]
 383              		.loc 1 355 27
 384 005e 0222     		movs	r2, #2
 385 0060 1340     		ands	r3, r2
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 14


 386              		.loc 1 355 5
 387 0062 13D0     		beq	.L22
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_RDPConfig(pOBInit->RDPLevel);
 388              		.loc 1 357 14
 389 0064 7B68     		ldr	r3, [r7, #4]
 390 0066 1B7B     		ldrb	r3, [r3, #12]
 391 0068 0F25     		movs	r5, #15
 392 006a 7C19     		adds	r4, r7, r5
 393 006c 1800     		movs	r0, r3
 394 006e FFF7FEFF 		bl	FLASH_OB_RDPConfig
 395 0072 0300     		movs	r3, r0
 396 0074 2370     		strb	r3, [r4]
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 397              		.loc 1 358 8
 398 0076 2900     		movs	r1, r5
 399 0078 7B18     		adds	r3, r7, r1
 400 007a 1B78     		ldrb	r3, [r3]
 401 007c 002B     		cmp	r3, #0
 402 007e 05D0     		beq	.L22
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Process Unlocked */
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 403              		.loc 1 361 7
 404 0080 2E4B     		ldr	r3, .L26
 405 0082 0022     		movs	r2, #0
 406 0084 1A74     		strb	r2, [r3, #16]
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       return status;
 407              		.loc 1 362 14
 408 0086 7B18     		adds	r3, r7, r1
 409 0088 1B78     		ldrb	r3, [r3]
 410 008a 52E0     		b	.L20
 411              	.L22:
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* USER  configuration*/
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 412              		.loc 1 367 14
 413 008c 7B68     		ldr	r3, [r7, #4]
 414 008e 1B68     		ldr	r3, [r3]
 415              		.loc 1 367 27
 416 0090 0422     		movs	r2, #4
 417 0092 1340     		ands	r3, r2
 418              		.loc 1 367 5
 419 0094 20D0     		beq	.L23
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig & OB_IWDG_SW, 
 420              		.loc 1 369 41
 421 0096 7B68     		ldr	r3, [r7, #4]
 422 0098 9B7B     		ldrb	r3, [r3, #14]
 423              		.loc 1 369 14
 424 009a 1022     		movs	r2, #16
 425 009c 1340     		ands	r3, r2
 426 009e D8B2     		uxtb	r0, r3
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NORST,
 427              		.loc 1 370 41
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 15


 428 00a0 7B68     		ldr	r3, [r7, #4]
 429 00a2 9B7B     		ldrb	r3, [r3, #14]
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NORST,
 430              		.loc 1 369 14
 431 00a4 2022     		movs	r2, #32
 432 00a6 1340     		ands	r3, r2
 433 00a8 D9B2     		uxtb	r1, r3
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STDBY_NORST);
 434              		.loc 1 371 41
 435 00aa 7B68     		ldr	r3, [r7, #4]
 436 00ac 9B7B     		ldrb	r3, [r3, #14]
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NORST,
 437              		.loc 1 369 14
 438 00ae 4022     		movs	r2, #64
 439 00b0 1340     		ands	r3, r2
 440 00b2 DBB2     		uxtb	r3, r3
 441 00b4 0F25     		movs	r5, #15
 442 00b6 7C19     		adds	r4, r7, r5
 443 00b8 1A00     		movs	r2, r3
 444 00ba FFF7FEFF 		bl	FLASH_OB_UserConfig
 445 00be 0300     		movs	r3, r0
 446 00c0 2370     		strb	r3, [r4]
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 447              		.loc 1 372 8
 448 00c2 2900     		movs	r1, r5
 449 00c4 7B18     		adds	r3, r7, r1
 450 00c6 1B78     		ldrb	r3, [r3]
 451 00c8 002B     		cmp	r3, #0
 452 00ca 05D0     		beq	.L23
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Process Unlocked */
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 453              		.loc 1 375 7
 454 00cc 1B4B     		ldr	r3, .L26
 455 00ce 0022     		movs	r2, #0
 456 00d0 1A74     		strb	r2, [r3, #16]
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       return status;
 457              		.loc 1 376 14
 458 00d2 7B18     		adds	r3, r7, r1
 459 00d4 1B78     		ldrb	r3, [r3]
 460 00d6 2CE0     		b	.L20
 461              	.L23:
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* BOR Level  configuration*/
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 462              		.loc 1 381 14
 463 00d8 7B68     		ldr	r3, [r7, #4]
 464 00da 1B68     		ldr	r3, [r3]
 465              		.loc 1 381 27
 466 00dc 0822     		movs	r2, #8
 467 00de 1340     		ands	r3, r2
 468              		.loc 1 381 5
 469 00e0 13D0     		beq	.L24
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_BORConfig(pOBInit->BORLevel);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 16


 470              		.loc 1 383 14
 471 00e2 7B68     		ldr	r3, [r7, #4]
 472 00e4 5B7B     		ldrb	r3, [r3, #13]
 473 00e6 0F25     		movs	r5, #15
 474 00e8 7C19     		adds	r4, r7, r5
 475 00ea 1800     		movs	r0, r3
 476 00ec FFF7FEFF 		bl	FLASH_OB_BORConfig
 477 00f0 0300     		movs	r3, r0
 478 00f2 2370     		strb	r3, [r4]
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 479              		.loc 1 384 8
 480 00f4 2900     		movs	r1, r5
 481 00f6 7B18     		adds	r3, r7, r1
 482 00f8 1B78     		ldrb	r3, [r3]
 483 00fa 002B     		cmp	r3, #0
 484 00fc 05D0     		beq	.L24
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Process Unlocked */
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 485              		.loc 1 387 7
 486 00fe 0F4B     		ldr	r3, .L26
 487 0100 0022     		movs	r2, #0
 488 0102 1A74     		strb	r2, [r3, #16]
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       return status;
 489              		.loc 1 388 14
 490 0104 7B18     		adds	r3, r7, r1
 491 0106 1B78     		ldrb	r3, [r3]
 492 0108 13E0     		b	.L20
 493              	.L24:
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Program BOOT Bit1 config option byte */
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if ((pOBInit->OptionType & OPTIONBYTE_BOOT_BIT1) == OPTIONBYTE_BOOT_BIT1)
 494              		.loc 1 393 15
 495 010a 7B68     		ldr	r3, [r7, #4]
 496 010c 1B68     		ldr	r3, [r3]
 497              		.loc 1 393 28
 498 010e 1022     		movs	r2, #16
 499 0110 1340     		ands	r3, r2
 500              		.loc 1 393 6
 501 0112 08D0     		beq	.L25
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_BOOTBit1Config(pOBInit->BOOTBit1Config);
 502              		.loc 1 395 14
 503 0114 7B68     		ldr	r3, [r7, #4]
 504 0116 DB7B     		ldrb	r3, [r3, #15]
 505 0118 0F22     		movs	r2, #15
 506 011a BC18     		adds	r4, r7, r2
 507 011c 1800     		movs	r0, r3
 508 011e FFF7FEFF 		bl	FLASH_OB_BOOTBit1Config
 509 0122 0300     		movs	r3, r0
 510 0124 2370     		strb	r3, [r4]
 511              	.L25:
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Unlocked */
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 17


 512              		.loc 1 398 3
 513 0126 054B     		ldr	r3, .L26
 514 0128 0022     		movs	r2, #0
 515 012a 1A74     		strb	r2, [r3, #16]
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 516              		.loc 1 400 10
 517 012c 0F23     		movs	r3, #15
 518 012e FB18     		adds	r3, r7, r3
 519 0130 1B78     		ldrb	r3, [r3]
 520              	.L20:
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 521              		.loc 1 401 1
 522 0132 1800     		movs	r0, r3
 523 0134 BD46     		mov	sp, r7
 524 0136 04B0     		add	sp, sp, #16
 525              		@ sp needed
 526 0138 B0BD     		pop	{r4, r5, r7, pc}
 527              	.L27:
 528 013a C046     		.align	2
 529              	.L26:
 530 013c 00000000 		.word	pFlash
 531              		.cfi_endproc
 532              	.LFE49:
 534              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 535              		.align	1
 536              		.global	HAL_FLASHEx_OBGetConfig
 537              		.syntax unified
 538              		.code	16
 539              		.thumb_func
 541              	HAL_FLASHEx_OBGetConfig:
 542              	.LFB50:
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief   Get the Option byte configuration
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval None
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 543              		.loc 1 411 1
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              	.LCFI9:
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 82B0     		sub	sp, sp, #8
 553              	.LCFI10:
 554              		.cfi_def_cfa_offset 16
 555 0004 00AF     		add	r7, sp, #0
 556              	.LCFI11:
 557              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 18


 558 0006 7860     		str	r0, [r7, #4]
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 559              		.loc 1 412 23
 560 0008 7B68     		ldr	r3, [r7, #4]
 561 000a 0F22     		movs	r2, #15
 562 000c 1A60     		str	r2, [r3]
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get WRP sector */
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->WRPSector = FLASH_OB_GetWRP();
 563              		.loc 1 415 24
 564 000e FFF7FEFF 		bl	FLASH_OB_GetWRP
 565 0012 0200     		movs	r2, r0
 566              		.loc 1 415 22
 567 0014 7B68     		ldr	r3, [r7, #4]
 568 0016 9A60     		str	r2, [r3, #8]
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->WRPSector2 = FLASH_OB_GetWRP2();
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /*Get RDP Level*/
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->RDPLevel   = FLASH_OB_GetRDP();
 569              		.loc 1 422 25
 570 0018 FFF7FEFF 		bl	FLASH_OB_GetRDP
 571 001c 0300     		movs	r3, r0
 572 001e 1A00     		movs	r2, r3
 573              		.loc 1 422 23
 574 0020 7B68     		ldr	r3, [r7, #4]
 575 0022 1A73     		strb	r2, [r3, #12]
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /*Get USER*/
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
 576              		.loc 1 425 25
 577 0024 FFF7FEFF 		bl	FLASH_OB_GetUser
 578 0028 0300     		movs	r3, r0
 579 002a 1A00     		movs	r2, r3
 580              		.loc 1 425 23
 581 002c 7B68     		ldr	r3, [r7, #4]
 582 002e 9A73     		strb	r2, [r3, #14]
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /*Get BOR Level*/
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->BORLevel   = FLASH_OB_GetBOR();
 583              		.loc 1 428 25
 584 0030 FFF7FEFF 		bl	FLASH_OB_GetBOR
 585 0034 0300     		movs	r3, r0
 586 0036 1A00     		movs	r2, r3
 587              		.loc 1 428 23
 588 0038 7B68     		ldr	r3, [r7, #4]
 589 003a 5A73     		strb	r2, [r3, #13]
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get BOOT bit 1 config OB */
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pOBInit->BOOTBit1Config = FLASH_OB_GetBOOTBit1();
 590              		.loc 1 431 29
 591 003c FFF7FEFF 		bl	FLASH_OB_GetBOOTBit1
 592 0040 0300     		movs	r3, r0
 593 0042 1A00     		movs	r2, r3
 594              		.loc 1 431 27
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 19


 595 0044 7B68     		ldr	r3, [r7, #4]
 596 0046 DA73     		strb	r2, [r3, #15]
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 597              		.loc 1 432 1
 598 0048 C046     		nop
 599 004a BD46     		mov	sp, r7
 600 004c 02B0     		add	sp, sp, #8
 601              		@ sp needed
 602 004e 80BD     		pop	{r7, pc}
 603              		.cfi_endproc
 604              	.LFE50:
 606              		.section	.text.HAL_FLASHEx_AdvOBProgram,"ax",%progbits
 607              		.align	1
 608              		.global	HAL_FLASHEx_AdvOBProgram
 609              		.syntax unified
 610              		.code	16
 611              		.thumb_func
 613              	HAL_FLASHEx_AdvOBProgram:
 614              	.LFB51:
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_WPRMOD) || defined(FLASH_OPTR_BFB2)
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Program option bytes
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_AdvOBProgram (FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 615              		.loc 1 444 1
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 16
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619 0000 90B5     		push	{r4, r7, lr}
 620              	.LCFI12:
 621              		.cfi_def_cfa_offset 12
 622              		.cfi_offset 4, -12
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 85B0     		sub	sp, sp, #20
 626              	.LCFI13:
 627              		.cfi_def_cfa_offset 32
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI14:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 632              		.loc 1 445 21
 633 0008 0F21     		movs	r1, #15
 634 000a 7B18     		adds	r3, r7, r1
 635 000c 0122     		movs	r2, #1
 636 000e 1A70     		strb	r2, [r3]
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OBEX(pAdvOBInit->OptionType));
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 20


 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_WPRMOD)
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Program PCROP option byte*/
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if ((pAdvOBInit->OptionType & OPTIONBYTE_PCROP) == OPTIONBYTE_PCROP)
 637              		.loc 1 453 18
 638 0010 7B68     		ldr	r3, [r7, #4]
 639 0012 1B68     		ldr	r3, [r3]
 640              		.loc 1 453 31
 641 0014 0122     		movs	r2, #1
 642 0016 1340     		ands	r3, r2
 643              		.loc 1 453 6
 644 0018 0AD0     		beq	.L30
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Check the parameters */
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     assert_param(IS_PCROPSTATE(pAdvOBInit->PCROPState));
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_ProtectedSectorsConfig(pAdvOBInit->PCROPSector, pAdvOBInit->PCROPSector2, pAd
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #else
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_ProtectedSectorsConfig(pAdvOBInit->PCROPSector, pAdvOBInit->PCROPState);
 645              		.loc 1 460 14
 646 001a 7B68     		ldr	r3, [r7, #4]
 647 001c 9A68     		ldr	r2, [r3, #8]
 648 001e 7B68     		ldr	r3, [r7, #4]
 649 0020 5B68     		ldr	r3, [r3, #4]
 650 0022 7C18     		adds	r4, r7, r1
 651 0024 1900     		movs	r1, r3
 652 0026 1000     		movs	r0, r2
 653 0028 FFF7FEFF 		bl	FLASH_OB_ProtectedSectorsConfig
 654 002c 0300     		movs	r3, r0
 655 002e 2370     		strb	r3, [r4]
 656              	.L30:
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_WPRMOD */
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_BFB2)
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Program BOOT config option byte */
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if ((pAdvOBInit->OptionType & OPTIONBYTE_BOOTCONFIG) == OPTIONBYTE_BOOTCONFIG)
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_OB_BootConfig(pAdvOBInit->BootConfig);
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_BFB2 */
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 657              		.loc 1 476 10
 658 0030 0F23     		movs	r3, #15
 659 0032 FB18     		adds	r3, r7, r3
 660 0034 1B78     		ldrb	r3, [r3]
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 661              		.loc 1 477 1
 662 0036 1800     		movs	r0, r3
 663 0038 BD46     		mov	sp, r7
 664 003a 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 21


 665              		@ sp needed
 666 003c 90BD     		pop	{r4, r7, pc}
 667              		.cfi_endproc
 668              	.LFE51:
 670              		.section	.text.HAL_FLASHEx_AdvOBGetConfig,"ax",%progbits
 671              		.align	1
 672              		.global	HAL_FLASHEx_AdvOBGetConfig
 673              		.syntax unified
 674              		.code	16
 675              		.thumb_func
 677              	HAL_FLASHEx_AdvOBGetConfig:
 678              	.LFB52:
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Get the OBEX byte configuration
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval None
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** void HAL_FLASHEx_AdvOBGetConfig(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 679              		.loc 1 487 1
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              	.LCFI15:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              	.LCFI16:
 690              		.cfi_def_cfa_offset 16
 691 0004 00AF     		add	r7, sp, #0
 692              	.LCFI17:
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->OptionType = 0;
 695              		.loc 1 488 26
 696 0008 7B68     		ldr	r3, [r7, #4]
 697 000a 0022     		movs	r2, #0
 698 000c 1A60     		str	r2, [r3]
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_WPRMOD)
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->OptionType |= OPTIONBYTE_PCROP;
 699              		.loc 1 492 26
 700 000e 7B68     		ldr	r3, [r7, #4]
 701 0010 1B68     		ldr	r3, [r3]
 702 0012 0122     		movs	r2, #1
 703 0014 1A43     		orrs	r2, r3
 704 0016 7B68     		ldr	r3, [r7, #4]
 705 0018 1A60     		str	r2, [r3]
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get PCROP state */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 22


 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->PCROPState = (FLASH->OPTR & FLASH_OPTR_WPRMOD) >> FLASH_OPTR_WPRMOD_Pos;
 706              		.loc 1 496 34
 707 001a 074B     		ldr	r3, .L33
 708 001c DB69     		ldr	r3, [r3, #28]
 709              		.loc 1 496 62
 710 001e 1B0A     		lsrs	r3, r3, #8
 711 0020 0122     		movs	r2, #1
 712 0022 1A40     		ands	r2, r3
 713              		.loc 1 496 26
 714 0024 7B68     		ldr	r3, [r7, #4]
 715 0026 5A60     		str	r2, [r3, #4]
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get PCROP protected sector */
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->PCROPSector = FLASH->WRPR;
 716              		.loc 1 498 34
 717 0028 034B     		ldr	r3, .L33
 718 002a 1A6A     		ldr	r2, [r3, #32]
 719              		.loc 1 498 27
 720 002c 7B68     		ldr	r3, [r7, #4]
 721 002e 9A60     		str	r2, [r3, #8]
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get PCROP protected sector */
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->PCROPSector2 = FLASH->WRPR2;
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_WPRMOD */
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_BFB2)
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->OptionType |= OPTIONBYTE_BOOTCONFIG;
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get Boot config OB */
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pAdvOBInit->BootConfig = (FLASH->OPTR & FLASH_OPTR_BFB2) >> 16U;
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_BFB2 */
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 722              		.loc 1 514 1
 723 0030 C046     		nop
 724 0032 BD46     		mov	sp, r7
 725 0034 02B0     		add	sp, sp, #8
 726              		@ sp needed
 727 0036 80BD     		pop	{r7, pc}
 728              	.L34:
 729              		.align	2
 730              	.L33:
 731 0038 00200240 		.word	1073881088
 732              		.cfi_endproc
 733              	.LFE52:
 735              		.section	.text.HAL_FLASHEx_OB_SelectPCROP,"ax",%progbits
 736              		.align	1
 737              		.global	HAL_FLASHEx_OB_SelectPCROP
 738              		.syntax unified
 739              		.code	16
 740              		.thumb_func
 742              	HAL_FLASHEx_OB_SelectPCROP:
 743              	.LFB53:
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_WPRMOD || FLASH_OPTR_BFB2 */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 23


 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_WPRMOD)
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Select the Protection Mode (WPRMOD).
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   Once WPRMOD bit is active, unprotection of a protected sector is not possible 
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_SelectPCROP(void)
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 744              		.loc 1 527 1
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 16
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 749              	.LCFI18:
 750              		.cfi_def_cfa_offset 20
 751              		.cfi_offset 4, -20
 752              		.cfi_offset 5, -16
 753              		.cfi_offset 6, -12
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 85B0     		sub	sp, sp, #20
 757              	.LCFI19:
 758              		.cfi_def_cfa_offset 40
 759 0004 00AF     		add	r7, sp, #0
 760              	.LCFI20:
 761              		.cfi_def_cfa_register 7
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 762              		.loc 1 528 21
 763 0006 0F25     		movs	r5, #15
 764 0008 7B19     		adds	r3, r7, r5
 765 000a 0022     		movs	r2, #0
 766 000c 1A70     		strb	r2, [r3]
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint16_t tmp1 = 0;
 767              		.loc 1 529 12
 768 000e 0C26     		movs	r6, #12
 769 0010 BB19     		adds	r3, r7, r6
 770 0012 0022     		movs	r2, #0
 771 0014 1A80     		strh	r2, [r3]
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp2 = 0;
 772              		.loc 1 530 12
 773 0016 0023     		movs	r3, #0
 774 0018 BB60     		str	r3, [r7, #8]
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint8_t optiontmp = 0;
 775              		.loc 1 531 11
 776 001a FB1D     		adds	r3, r7, #7
 777 001c 0022     		movs	r2, #0
 778 001e 1A70     		strb	r2, [r3]
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint16_t optiontmp2 = 0;
 779              		.loc 1 532 12
 780 0020 3B1D     		adds	r3, r7, #4
 781 0022 0022     		movs	r2, #0
 782 0024 1A80     		strh	r2, [r3]
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 24


 783              		.loc 1 534 12
 784 0026 7C19     		adds	r4, r7, r5
 785 0028 1B4B     		ldr	r3, .L38
 786 002a 1800     		movs	r0, r3
 787 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 788 0030 0300     		movs	r3, r0
 789 0032 2370     		strb	r3, [r4]
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Mask RDP Byte */
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   optiontmp =  (uint8_t)(*(__IO uint8_t *)(OB_BASE)); 
 790              		.loc 1 537 16
 791 0034 194A     		ldr	r2, .L38+4
 792              		.loc 1 537 13
 793 0036 FB1D     		adds	r3, r7, #7
 794 0038 1278     		ldrb	r2, [r2]
 795 003a 1A70     		strb	r2, [r3]
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Update Option Byte */
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   optiontmp2 = (uint16_t)(OB_PCROP_SELECTED | optiontmp); 
 796              		.loc 1 540 45
 797 003c FB1D     		adds	r3, r7, #7
 798 003e 1B78     		ldrb	r3, [r3]
 799 0040 1BB2     		sxth	r3, r3
 800 0042 8022     		movs	r2, #128
 801 0044 5200     		lsls	r2, r2, #1
 802 0046 1343     		orrs	r3, r2
 803 0048 1AB2     		sxth	r2, r3
 804              		.loc 1 540 14
 805 004a 3B1D     		adds	r3, r7, #4
 806 004c 1A80     		strh	r2, [r3]
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* calculate the option byte to write */
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = (uint16_t)(~(optiontmp2 ));
 807              		.loc 1 543 8
 808 004e BB19     		adds	r3, r7, r6
 809 0050 3A1D     		adds	r2, r7, #4
 810 0052 1288     		ldrh	r2, [r2]
 811 0054 D243     		mvns	r2, r2
 812 0056 1A80     		strh	r2, [r3]
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp2 = (uint32_t)(((uint32_t)((uint32_t)(tmp1) << 16U)) | ((uint32_t)optiontmp2));
 813              		.loc 1 544 33
 814 0058 BB19     		adds	r3, r7, r6
 815 005a 1B88     		ldrh	r3, [r3]
 816              		.loc 1 544 22
 817 005c 1A04     		lsls	r2, r3, #16
 818              		.loc 1 544 62
 819 005e 3B1D     		adds	r3, r7, #4
 820 0060 1B88     		ldrh	r3, [r3]
 821              		.loc 1 544 8
 822 0062 1343     		orrs	r3, r2
 823 0064 BB60     		str	r3, [r7, #8]
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 824              		.loc 1 546 5
 825 0066 7B19     		adds	r3, r7, r5
 826 0068 1B78     		ldrb	r3, [r3]
 827 006a 002B     		cmp	r3, #0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 25


 828 006c 0CD1     		bne	.L36
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {         
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 829              		.loc 1 549 22
 830 006e 0C4B     		ldr	r3, .L38+8
 831 0070 0022     		movs	r2, #0
 832 0072 5A61     		str	r2, [r3, #20]
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* program PCRop */
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB->RDP = tmp2;
 833              		.loc 1 552 7
 834 0074 094B     		ldr	r3, .L38+4
 835              		.loc 1 552 13
 836 0076 BA68     		ldr	r2, [r7, #8]
 837 0078 1A60     		str	r2, [r3]
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 838              		.loc 1 555 14
 839 007a 7C19     		adds	r4, r7, r5
 840 007c 064B     		ldr	r3, .L38
 841 007e 1800     		movs	r0, r3
 842 0080 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 843 0084 0300     		movs	r3, r0
 844 0086 2370     		strb	r3, [r4]
 845              	.L36:
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the Read protection operation Status */
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;            
 846              		.loc 1 559 10
 847 0088 0F23     		movs	r3, #15
 848 008a FB18     		adds	r3, r7, r3
 849 008c 1B78     		ldrb	r3, [r3]
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 850              		.loc 1 560 1
 851 008e 1800     		movs	r0, r3
 852 0090 BD46     		mov	sp, r7
 853 0092 05B0     		add	sp, sp, #20
 854              		@ sp needed
 855 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 856              	.L39:
 857 0096 C046     		.align	2
 858              	.L38:
 859 0098 50C30000 		.word	50000
 860 009c 0000F81F 		.word	536346624
 861 00a0 00000000 		.word	pFlash
 862              		.cfi_endproc
 863              	.LFE53:
 865              		.section	.text.HAL_FLASHEx_OB_DeSelectPCROP,"ax",%progbits
 866              		.align	1
 867              		.global	HAL_FLASHEx_OB_DeSelectPCROP
 868              		.syntax unified
 869              		.code	16
 870              		.thumb_func
 872              	HAL_FLASHEx_OB_DeSelectPCROP:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 26


 873              	.LFB54:
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Deselect the Protection Mode (WPRMOD).
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   Once WPRMOD bit is active, unprotection of a protected sector is not possible 
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_DeSelectPCROP(void)
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 874              		.loc 1 569 1
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 16
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 879              	.LCFI21:
 880              		.cfi_def_cfa_offset 20
 881              		.cfi_offset 4, -20
 882              		.cfi_offset 5, -16
 883              		.cfi_offset 6, -12
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 85B0     		sub	sp, sp, #20
 887              	.LCFI22:
 888              		.cfi_def_cfa_offset 40
 889 0004 00AF     		add	r7, sp, #0
 890              	.LCFI23:
 891              		.cfi_def_cfa_register 7
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 892              		.loc 1 570 21
 893 0006 0F25     		movs	r5, #15
 894 0008 7B19     		adds	r3, r7, r5
 895 000a 0022     		movs	r2, #0
 896 000c 1A70     		strb	r2, [r3]
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint16_t tmp1 = 0;
 897              		.loc 1 571 12
 898 000e 0C26     		movs	r6, #12
 899 0010 BB19     		adds	r3, r7, r6
 900 0012 0022     		movs	r2, #0
 901 0014 1A80     		strh	r2, [r3]
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp2 = 0;
 902              		.loc 1 572 12
 903 0016 0023     		movs	r3, #0
 904 0018 BB60     		str	r3, [r7, #8]
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint8_t optiontmp = 0;
 905              		.loc 1 573 11
 906 001a FB1D     		adds	r3, r7, #7
 907 001c 0022     		movs	r2, #0
 908 001e 1A70     		strb	r2, [r3]
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint16_t optiontmp2 = 0;
 909              		.loc 1 574 12
 910 0020 3B1D     		adds	r3, r7, #4
 911 0022 0022     		movs	r2, #0
 912 0024 1A80     		strh	r2, [r3]
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 913              		.loc 1 576 12
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 27


 914 0026 7C19     		adds	r4, r7, r5
 915 0028 184B     		ldr	r3, .L43
 916 002a 1800     		movs	r0, r3
 917 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 918 0030 0300     		movs	r3, r0
 919 0032 2370     		strb	r3, [r4]
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Mask RDP Byte */
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   optiontmp =  (uint8_t)(*(__IO uint8_t *)(OB_BASE)); 
 920              		.loc 1 579 16
 921 0034 164A     		ldr	r2, .L43+4
 922              		.loc 1 579 13
 923 0036 FB1D     		adds	r3, r7, #7
 924 0038 1278     		ldrb	r2, [r2]
 925 003a 1A70     		strb	r2, [r3]
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Update Option Byte */
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   optiontmp2 = (uint16_t)(OB_PCROP_DESELECTED | optiontmp); 
 926              		.loc 1 582 14
 927 003c 3B1D     		adds	r3, r7, #4
 928 003e FA1D     		adds	r2, r7, #7
 929 0040 1278     		ldrb	r2, [r2]
 930 0042 1A80     		strh	r2, [r3]
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* calculate the option byte to write */
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = (uint16_t)(~(optiontmp2 ));
 931              		.loc 1 585 8
 932 0044 BB19     		adds	r3, r7, r6
 933 0046 3A1D     		adds	r2, r7, #4
 934 0048 1288     		ldrh	r2, [r2]
 935 004a D243     		mvns	r2, r2
 936 004c 1A80     		strh	r2, [r3]
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp2 = (uint32_t)(((uint32_t)((uint32_t)(tmp1) << 16U)) | ((uint32_t)optiontmp2));
 937              		.loc 1 586 33
 938 004e BB19     		adds	r3, r7, r6
 939 0050 1B88     		ldrh	r3, [r3]
 940              		.loc 1 586 22
 941 0052 1A04     		lsls	r2, r3, #16
 942              		.loc 1 586 62
 943 0054 3B1D     		adds	r3, r7, #4
 944 0056 1B88     		ldrh	r3, [r3]
 945              		.loc 1 586 8
 946 0058 1343     		orrs	r3, r2
 947 005a BB60     		str	r3, [r7, #8]
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 948              		.loc 1 588 5
 949 005c 7B19     		adds	r3, r7, r5
 950 005e 1B78     		ldrb	r3, [r3]
 951 0060 002B     		cmp	r3, #0
 952 0062 0CD1     		bne	.L41
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {         
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 953              		.loc 1 591 22
 954 0064 0B4B     		ldr	r3, .L43+8
 955 0066 0022     		movs	r2, #0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 28


 956 0068 5A61     		str	r2, [r3, #20]
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* program PCRop */
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB->RDP = tmp2;
 957              		.loc 1 594 7
 958 006a 094B     		ldr	r3, .L43+4
 959              		.loc 1 594 13
 960 006c BA68     		ldr	r2, [r7, #8]
 961 006e 1A60     		str	r2, [r3]
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 962              		.loc 1 597 14
 963 0070 7C19     		adds	r4, r7, r5
 964 0072 064B     		ldr	r3, .L43
 965 0074 1800     		movs	r0, r3
 966 0076 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 967 007a 0300     		movs	r3, r0
 968 007c 2370     		strb	r3, [r4]
 969              	.L41:
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the Read protection operation Status */
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;            
 970              		.loc 1 601 10
 971 007e 0F23     		movs	r3, #15
 972 0080 FB18     		adds	r3, r7, r3
 973 0082 1B78     		ldrb	r3, [r3]
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 974              		.loc 1 602 1
 975 0084 1800     		movs	r0, r3
 976 0086 BD46     		mov	sp, r7
 977 0088 05B0     		add	sp, sp, #20
 978              		@ sp needed
 979 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 980              	.L44:
 981              		.align	2
 982              	.L43:
 983 008c 50C30000 		.word	50000
 984 0090 0000F81F 		.word	536346624
 985 0094 00000000 		.word	pFlash
 986              		.cfi_endproc
 987              	.LFE54:
 989              		.section	.text.HAL_FLASHEx_DATAEEPROM_Unlock,"ax",%progbits
 990              		.align	1
 991              		.global	HAL_FLASHEx_DATAEEPROM_Unlock
 992              		.syntax unified
 993              		.code	16
 994              		.thumb_func
 996              	HAL_FLASHEx_DATAEEPROM_Unlock:
 997              	.LFB55:
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_WPRMOD */
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 29


 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group3 DATA EEPROM Programming functions
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  *  @brief   DATA EEPROM Programming functions
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  *
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** @verbatim   
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  ===============================================================================
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****                      ##### DATA EEPROM Programming functions ##### 
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  ===============================================================================  
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     [..] Any operation of erase or program should follow these steps:
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the HAL_FLASHEx_DATAEEPROM_Unlock() function to enable the data EEPROM access
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         and Flash program erase control register access.
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the desired function to erase or program data.
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     (#) Call the HAL_FLASHEx_DATAEEPROM_Lock() to disable the data EEPROM access
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         and Flash program erase control register access(recommended
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         to protect the DATA_EEPROM against possible unwanted operation).
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** @endverbatim
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Unlocks the data memory and FLASH_PECR register access.
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_DATAEEPROM_Unlock(void)
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 998              		.loc 1 635 1
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 16
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002 0000 80B5     		push	{r7, lr}
 1003              	.LCFI24:
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 84B0     		sub	sp, sp, #16
 1008              	.LCFI25:
 1009              		.cfi_def_cfa_offset 24
 1010 0004 00AF     		add	r7, sp, #0
 1011              	.LCFI26:
 1012              		.cfi_def_cfa_register 7
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t primask_bit;
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if((FLASH->PECR & FLASH_PECR_PELOCK) != RESET)
 1013              		.loc 1 638 12
 1014 0006 124B     		ldr	r3, .L49
 1015 0008 5B68     		ldr	r3, [r3, #4]
 1016              		.loc 1 638 19
 1017 000a 0122     		movs	r2, #1
 1018 000c 1340     		ands	r3, r2
 1019              		.loc 1 638 5
 1020 000e 19D0     		beq	.L46
 1021              	.LBB8:
 1022              	.LBB9:
 1023              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 30


   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 31


  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 32


 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 33


 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 34


 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 35


 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 36


 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 1024              		.loc 2 386 3
 1025              		.syntax divided
 1026              	@ 386 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1027 0010 EFF31083 		MRS r3, primask
 1028              	@ 0 "" 2
 1029              		.thumb
 1030              		.syntax unified
 1031 0014 7B60     		str	r3, [r7, #4]
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1032              		.loc 2 387 9
 1033 0016 7B68     		ldr	r3, [r7, #4]
 1034              	.LBE9:
 1035              	.LBE8:
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {  
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 37


 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Disable interrupts to avoid any interruption during unlock sequence */
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     primask_bit = __get_PRIMASK();
 1036              		.loc 1 641 19
 1037 0018 FB60     		str	r3, [r7, #12]
 1038              	.LBB10:
 1039              	.LBB11:
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1040              		.loc 2 142 3
 1041              		.syntax divided
 1042              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1043 001a 72B6     		cpsid i
 1044              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1045              		.loc 2 143 1
 1046              		.thumb
 1047              		.syntax unified
 1048 001c C046     		nop
 1049              	.LBE11:
 1050              	.LBE10:
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     __disable_irq();
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Unlocking the Data memory and FLASH_PECR register access*/
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     FLASH->PEKEYR = FLASH_PEKEY1;
 1051              		.loc 1 645 10
 1052 001e 0C4B     		ldr	r3, .L49
 1053              		.loc 1 645 19
 1054 0020 0C4A     		ldr	r2, .L49+4
 1055 0022 DA60     		str	r2, [r3, #12]
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     FLASH->PEKEYR = FLASH_PEKEY2;
 1056              		.loc 1 646 10
 1057 0024 0A4B     		ldr	r3, .L49
 1058              		.loc 1 646 19
 1059 0026 0C4A     		ldr	r2, .L49+8
 1060 0028 DA60     		str	r2, [r3, #12]
 1061 002a FB68     		ldr	r3, [r7, #12]
 1062 002c BB60     		str	r3, [r7, #8]
 1063              	.LBB12:
 1064              	.LBB13:
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 38


 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 1065              		.loc 2 414 3
 1066 002e BB68     		ldr	r3, [r7, #8]
 1067              		.syntax divided
 1068              	@ 414 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1069 0030 83F31088 		MSR primask, r3
 1070              	@ 0 "" 2
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1071              		.loc 2 415 1
 1072              		.thumb
 1073              		.syntax unified
 1074 0034 C046     		nop
 1075              	.LBE13:
 1076              	.LBE12:
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Re-enable the interrupts: restore previous priority mask */
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     __set_PRIMASK(primask_bit);
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if((FLASH->PECR & FLASH_PECR_PELOCK) != RESET)
 1077              		.loc 1 651 14
 1078 0036 064B     		ldr	r3, .L49
 1079 0038 5B68     		ldr	r3, [r3, #4]
 1080              		.loc 1 651 21
 1081 003a 0122     		movs	r2, #1
 1082 003c 1340     		ands	r3, r2
 1083              		.loc 1 651 7
 1084 003e 01D0     		beq	.L46
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       return HAL_ERROR;
 1085              		.loc 1 653 14
 1086 0040 0123     		movs	r3, #1
 1087 0042 00E0     		b	.L48
 1088              	.L46:
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return HAL_OK;  
 1089              		.loc 1 657 10
 1090 0044 0023     		movs	r3, #0
 1091              	.L48:
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1092              		.loc 1 658 1
 1093 0046 1800     		movs	r0, r3
 1094 0048 BD46     		mov	sp, r7
 1095 004a 04B0     		add	sp, sp, #16
 1096              		@ sp needed
 1097 004c 80BD     		pop	{r7, pc}
 1098              	.L50:
 1099 004e C046     		.align	2
 1100              	.L49:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 39


 1101 0050 00200240 		.word	1073881088
 1102 0054 EFCDAB89 		.word	-1985229329
 1103 0058 05040302 		.word	33752069
 1104              		.cfi_endproc
 1105              	.LFE55:
 1107              		.section	.text.HAL_FLASHEx_DATAEEPROM_Lock,"ax",%progbits
 1108              		.align	1
 1109              		.global	HAL_FLASHEx_DATAEEPROM_Lock
 1110              		.syntax unified
 1111              		.code	16
 1112              		.thumb_func
 1114              	HAL_FLASHEx_DATAEEPROM_Lock:
 1115              	.LFB56:
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Locks the Data memory and FLASH_PECR register access.
 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_DATAEEPROM_Lock(void)
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1116              		.loc 1 665 1
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 80B5     		push	{r7, lr}
 1121              	.LCFI27:
 1122              		.cfi_def_cfa_offset 8
 1123              		.cfi_offset 7, -8
 1124              		.cfi_offset 14, -4
 1125 0002 00AF     		add	r7, sp, #0
 1126              	.LCFI28:
 1127              		.cfi_def_cfa_register 7
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Set the PELOCK Bit to lock the data memory and FLASH_PECR register access */
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_PELOCK);
 1128              		.loc 1 667 3
 1129 0004 044B     		ldr	r3, .L53
 1130 0006 5A68     		ldr	r2, [r3, #4]
 1131 0008 034B     		ldr	r3, .L53
 1132 000a 0121     		movs	r1, #1
 1133 000c 0A43     		orrs	r2, r1
 1134 000e 5A60     		str	r2, [r3, #4]
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return HAL_OK;
 1135              		.loc 1 669 10
 1136 0010 0023     		movs	r3, #0
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1137              		.loc 1 670 1
 1138 0012 1800     		movs	r0, r3
 1139 0014 BD46     		mov	sp, r7
 1140              		@ sp needed
 1141 0016 80BD     		pop	{r7, pc}
 1142              	.L54:
 1143              		.align	2
 1144              	.L53:
 1145 0018 00200240 		.word	1073881088
 1146              		.cfi_endproc
 1147              	.LFE56:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 40


 1149              		.section	.text.HAL_FLASHEx_DATAEEPROM_Erase,"ax",%progbits
 1150              		.align	1
 1151              		.global	HAL_FLASHEx_DATAEEPROM_Erase
 1152              		.syntax unified
 1153              		.code	16
 1154              		.thumb_func
 1156              	HAL_FLASHEx_DATAEEPROM_Erase:
 1157              	.LFB57:
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Erase a word in data memory.
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  Address specifies the address to be erased.
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASHEx_DATAEEPROM_Unlock() function
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         must be called before.
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASHEx_DATAEEPROM_Lock() to the data EEPROM access
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         and Flash program erase control register access(recommended to protect 
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         the DATA_EEPROM against possible unwanted operation).
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_DATAEEPROM_Erase(uint32_t Address)
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1158              		.loc 1 683 1
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 16
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162 0000 B0B5     		push	{r4, r5, r7, lr}
 1163              	.LCFI29:
 1164              		.cfi_def_cfa_offset 16
 1165              		.cfi_offset 4, -16
 1166              		.cfi_offset 5, -12
 1167              		.cfi_offset 7, -8
 1168              		.cfi_offset 14, -4
 1169 0002 84B0     		sub	sp, sp, #16
 1170              	.LCFI30:
 1171              		.cfi_def_cfa_offset 32
 1172 0004 00AF     		add	r7, sp, #0
 1173              	.LCFI31:
 1174              		.cfi_def_cfa_register 7
 1175 0006 7860     		str	r0, [r7, #4]
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1176              		.loc 1 684 21
 1177 0008 0F25     		movs	r5, #15
 1178 000a 7B19     		adds	r3, r7, r5
 1179 000c 0022     		movs	r2, #0
 1180 000e 1A70     		strb	r2, [r3]
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1181              		.loc 1 690 12
 1182 0010 7C19     		adds	r4, r7, r5
 1183 0012 0F4B     		ldr	r3, .L58
 1184 0014 1800     		movs	r0, r3
 1185 0016 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1186 001a 0300     		movs	r3, r0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 41


 1187 001c 2370     		strb	r3, [r4]
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1188              		.loc 1 692 5
 1189 001e 2900     		movs	r1, r5
 1190 0020 7B18     		adds	r3, r7, r1
 1191 0022 1B78     		ldrb	r3, [r3]
 1192 0024 002B     		cmp	r3, #0
 1193 0026 0CD1     		bne	.L56
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1194              		.loc 1 695 22
 1195 0028 0A4B     		ldr	r3, .L58+4
 1196 002a 0022     		movs	r2, #0
 1197 002c 5A61     		str	r2, [r3, #20]
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Write 00000000h to valid address in the data memory */
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       *(__IO uint32_t *) Address = 0x00000000U;
 1198              		.loc 1 698 8
 1199 002e 7B68     		ldr	r3, [r7, #4]
 1200              		.loc 1 698 34
 1201 0030 0022     		movs	r2, #0
 1202 0032 1A60     		str	r2, [r3]
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1203              		.loc 1 700 14
 1204 0034 7C18     		adds	r4, r7, r1
 1205 0036 064B     		ldr	r3, .L58
 1206 0038 1800     		movs	r0, r3
 1207 003a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1208 003e 0300     		movs	r3, r0
 1209 0040 2370     		strb	r3, [r4]
 1210              	.L56:
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****    
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the erase status */
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 1211              		.loc 1 704 10
 1212 0042 0F23     		movs	r3, #15
 1213 0044 FB18     		adds	r3, r7, r3
 1214 0046 1B78     		ldrb	r3, [r3]
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }  
 1215              		.loc 1 705 1
 1216 0048 1800     		movs	r0, r3
 1217 004a BD46     		mov	sp, r7
 1218 004c 04B0     		add	sp, sp, #16
 1219              		@ sp needed
 1220 004e B0BD     		pop	{r4, r5, r7, pc}
 1221              	.L59:
 1222              		.align	2
 1223              	.L58:
 1224 0050 50C30000 		.word	50000
 1225 0054 00000000 		.word	pFlash
 1226              		.cfi_endproc
 1227              	.LFE57:
 1229              		.section	.text.HAL_FLASHEx_DATAEEPROM_Program,"ax",%progbits
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 42


 1230              		.align	1
 1231              		.global	HAL_FLASHEx_DATAEEPROM_Program
 1232              		.syntax unified
 1233              		.code	16
 1234              		.thumb_func
 1236              	HAL_FLASHEx_DATAEEPROM_Program:
 1237              	.LFB58:
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Program word at a specified address
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASHEx_DATAEEPROM_Unlock() function
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         must be called before.
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASHEx_DATAEEPROM_Unlock() to he data EEPROM access
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         and Flash program erase control register access(recommended to protect 
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         the DATA_EEPROM against possible unwanted operation).
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram() can be called before 
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         this function to configure the Fixed Time Programming.
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         This parameter can be a value of @ref FLASHEx_Type_Program_Data
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  Address  specifie the address to be programmed.
 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  Data     specifie the data to be programmed
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** HAL_StatusTypeDef   HAL_FLASHEx_DATAEEPROM_Program(uint32_t TypeProgram, uint32_t Address, uint32_t
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1238              		.loc 1 725 1
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 24
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242 0000 B0B5     		push	{r4, r5, r7, lr}
 1243              	.LCFI32:
 1244              		.cfi_def_cfa_offset 16
 1245              		.cfi_offset 4, -16
 1246              		.cfi_offset 5, -12
 1247              		.cfi_offset 7, -8
 1248              		.cfi_offset 14, -4
 1249 0002 86B0     		sub	sp, sp, #24
 1250              	.LCFI33:
 1251              		.cfi_def_cfa_offset 40
 1252 0004 00AF     		add	r7, sp, #0
 1253              	.LCFI34:
 1254              		.cfi_def_cfa_register 7
 1255 0006 F860     		str	r0, [r7, #12]
 1256 0008 B960     		str	r1, [r7, #8]
 1257 000a 7A60     		str	r2, [r7, #4]
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1258              		.loc 1 726 21
 1259 000c 1723     		movs	r3, #23
 1260 000e FB18     		adds	r3, r7, r3
 1261 0010 0122     		movs	r2, #1
 1262 0012 1A70     		strb	r2, [r3]
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Locked */
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 1263              		.loc 1 729 3
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 43


 1264 0014 244B     		ldr	r3, .L68
 1265 0016 1B7C     		ldrb	r3, [r3, #16]
 1266 0018 012B     		cmp	r3, #1
 1267 001a 01D1     		bne	.L61
 1268              		.loc 1 729 3 is_stmt 0 discriminator 1
 1269 001c 0223     		movs	r3, #2
 1270 001e 3EE0     		b	.L62
 1271              	.L61:
 1272              		.loc 1 729 3 discriminator 2
 1273 0020 214B     		ldr	r3, .L68
 1274 0022 0122     		movs	r2, #1
 1275 0024 1A74     		strb	r2, [r3, #16]
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_TYPEPROGRAMDATA(TypeProgram));
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1276              		.loc 1 736 12 is_stmt 1 discriminator 2
 1277 0026 1725     		movs	r5, #23
 1278 0028 7C19     		adds	r4, r7, r5
 1279 002a 204B     		ldr	r3, .L68+4
 1280 002c 1800     		movs	r0, r3
 1281 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1282 0032 0300     		movs	r3, r0
 1283 0034 2370     		strb	r3, [r4]
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1284              		.loc 1 738 5 discriminator 2
 1285 0036 7B19     		adds	r3, r7, r5
 1286 0038 1B78     		ldrb	r3, [r3]
 1287 003a 002B     		cmp	r3, #0
 1288 003c 29D1     		bne	.L63
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1289              		.loc 1 741 22
 1290 003e 1A4B     		ldr	r3, .L68
 1291 0040 0022     		movs	r2, #0
 1292 0042 5A61     		str	r2, [r3, #20]
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if(TypeProgram == FLASH_TYPEPROGRAMDATA_WORD)
 1293              		.loc 1 743 7
 1294 0044 FB68     		ldr	r3, [r7, #12]
 1295 0046 022B     		cmp	r3, #2
 1296 0048 03D1     		bne	.L64
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Program word (32-bit) at a specified address.*/
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       *(__IO uint32_t *)Address = Data;
 1297              		.loc 1 746 8
 1298 004a BB68     		ldr	r3, [r7, #8]
 1299              		.loc 1 746 33
 1300 004c 7A68     		ldr	r2, [r7, #4]
 1301 004e 1A60     		str	r2, [r3]
 1302 0050 13E0     		b	.L65
 1303              	.L64:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 44


 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_HALFWORD)
 1304              		.loc 1 748 12
 1305 0052 FB68     		ldr	r3, [r7, #12]
 1306 0054 012B     		cmp	r3, #1
 1307 0056 04D1     		bne	.L66
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Program halfword (16-bit) at a specified address.*/
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       *(__IO uint16_t *)Address = (uint16_t) Data;
 1308              		.loc 1 751 8
 1309 0058 BB68     		ldr	r3, [r7, #8]
 1310              		.loc 1 751 35
 1311 005a 7A68     		ldr	r2, [r7, #4]
 1312 005c 92B2     		uxth	r2, r2
 1313              		.loc 1 751 33
 1314 005e 1A80     		strh	r2, [r3]
 1315 0060 0BE0     		b	.L65
 1316              	.L66:
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_BYTE)
 1317              		.loc 1 753 12
 1318 0062 FB68     		ldr	r3, [r7, #12]
 1319 0064 002B     		cmp	r3, #0
 1320 0066 04D1     		bne	.L67
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Program byte (8-bit) at a specified address.*/
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       *(__IO uint8_t *)Address = (uint8_t) Data;
 1321              		.loc 1 756 8
 1322 0068 BB68     		ldr	r3, [r7, #8]
 1323              		.loc 1 756 34
 1324 006a 7A68     		ldr	r2, [r7, #4]
 1325 006c D2B2     		uxtb	r2, r2
 1326              		.loc 1 756 32
 1327 006e 1A70     		strb	r2, [r3]
 1328 0070 03E0     		b	.L65
 1329              	.L67:
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     else
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       status = HAL_ERROR;
 1330              		.loc 1 760 14
 1331 0072 1723     		movs	r3, #23
 1332 0074 FB18     		adds	r3, r7, r3
 1333 0076 0122     		movs	r2, #1
 1334 0078 1A70     		strb	r2, [r3]
 1335              	.L65:
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (status != HAL_OK)
 1336              		.loc 1 763 8
 1337 007a 1722     		movs	r2, #23
 1338 007c BB18     		adds	r3, r7, r2
 1339 007e 1B78     		ldrb	r3, [r3]
 1340 0080 002B     		cmp	r3, #0
 1341 0082 06D0     		beq	.L63
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 45


 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1342              		.loc 1 766 16
 1343 0084 BC18     		adds	r4, r7, r2
 1344 0086 094B     		ldr	r3, .L68+4
 1345 0088 1800     		movs	r0, r3
 1346 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1347 008e 0300     		movs	r3, r0
 1348 0090 2370     		strb	r3, [r4]
 1349              	.L63:
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Process Unlocked */
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 1350              		.loc 1 771 3
 1351 0092 054B     		ldr	r3, .L68
 1352 0094 0022     		movs	r2, #0
 1353 0096 1A74     		strb	r2, [r3, #16]
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 1354              		.loc 1 773 10
 1355 0098 1723     		movs	r3, #23
 1356 009a FB18     		adds	r3, r7, r3
 1357 009c 1B78     		ldrb	r3, [r3]
 1358              	.L62:
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1359              		.loc 1 774 1
 1360 009e 1800     		movs	r0, r3
 1361 00a0 BD46     		mov	sp, r7
 1362 00a2 06B0     		add	sp, sp, #24
 1363              		@ sp needed
 1364 00a4 B0BD     		pop	{r4, r5, r7, pc}
 1365              	.L69:
 1366 00a6 C046     		.align	2
 1367              	.L68:
 1368 00a8 00000000 		.word	pFlash
 1369 00ac 50C30000 		.word	50000
 1370              		.cfi_endproc
 1371              	.LFE58:
 1373              		.section	.text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram,"ax",%progbits
 1374              		.align	1
 1375              		.global	HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram
 1376              		.syntax unified
 1377              		.code	16
 1378              		.thumb_func
 1380              	HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:
 1381              	.LFB59:
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Enable DATA EEPROM fixed Time programming (2*Tprog).
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval None
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** void HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram(void)
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1382              		.loc 1 781 1
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 46


 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386 0000 80B5     		push	{r7, lr}
 1387              	.LCFI35:
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 00AF     		add	r7, sp, #0
 1392              	.LCFI36:
 1393              		.cfi_def_cfa_register 7
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_FIX);
 1394              		.loc 1 782 3
 1395 0004 044B     		ldr	r3, .L71
 1396 0006 5A68     		ldr	r2, [r3, #4]
 1397 0008 034B     		ldr	r3, .L71
 1398 000a 8021     		movs	r1, #128
 1399 000c 4900     		lsls	r1, r1, #1
 1400 000e 0A43     		orrs	r2, r1
 1401 0010 5A60     		str	r2, [r3, #4]
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1402              		.loc 1 783 1
 1403 0012 C046     		nop
 1404 0014 BD46     		mov	sp, r7
 1405              		@ sp needed
 1406 0016 80BD     		pop	{r7, pc}
 1407              	.L72:
 1408              		.align	2
 1409              	.L71:
 1410 0018 00200240 		.word	1073881088
 1411              		.cfi_endproc
 1412              	.LFE59:
 1414              		.section	.text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram,"ax",%progbits
 1415              		.align	1
 1416              		.global	HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram
 1417              		.syntax unified
 1418              		.code	16
 1419              		.thumb_func
 1421              	HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:
 1422              	.LFB60:
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Disables DATA EEPROM fixed Time programming (2*Tprog).
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval None
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** void HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram(void)
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1423              		.loc 1 790 1
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 0
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              	.LCFI37:
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 00AF     		add	r7, sp, #0
 1433              	.LCFI38:
 1434              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 47


 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->PECR, FLASH_PECR_FIX);
 1435              		.loc 1 791 3
 1436 0004 044B     		ldr	r3, .L74
 1437 0006 5A68     		ldr	r2, [r3, #4]
 1438 0008 034B     		ldr	r3, .L74
 1439 000a 0449     		ldr	r1, .L74+4
 1440 000c 0A40     		ands	r2, r1
 1441 000e 5A60     		str	r2, [r3, #4]
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1442              		.loc 1 792 1
 1443 0010 C046     		nop
 1444 0012 BD46     		mov	sp, r7
 1445              		@ sp needed
 1446 0014 80BD     		pop	{r7, pc}
 1447              	.L75:
 1448 0016 C046     		.align	2
 1449              	.L74:
 1450 0018 00200240 		.word	1073881088
 1451 001c FFFEFFFF 		.word	-257
 1452              		.cfi_endproc
 1453              	.LFE60:
 1455              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 1456              		.align	1
 1457              		.syntax unified
 1458              		.code	16
 1459              		.thumb_func
 1461              	FLASH_OB_RDPConfig:
 1462              	.LFB61:
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  * @{
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  */
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /*
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** ==============================================================================
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****               OPTIONS BYTES
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** ==============================================================================
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** */
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Enables or disables the read out protection.
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_OB_Unlock() function
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         must be called before.
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_RDP specifies the read protection level. 
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be:
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_RDP_LEVEL_0 No protection
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_RDP_LEVEL_2 Chip protection
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * 
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *  !!!Warning!!! When enabling OB_RDP_LEVEL_2 it's no more possible to go back to level 1 or 0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 48


 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDPConfig(uint8_t OB_RDP)
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1463              		.loc 1 826 1
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 24
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467 0000 B0B5     		push	{r4, r5, r7, lr}
 1468              	.LCFI39:
 1469              		.cfi_def_cfa_offset 16
 1470              		.cfi_offset 4, -16
 1471              		.cfi_offset 5, -12
 1472              		.cfi_offset 7, -8
 1473              		.cfi_offset 14, -4
 1474 0002 86B0     		sub	sp, sp, #24
 1475              	.LCFI40:
 1476              		.cfi_def_cfa_offset 40
 1477 0004 00AF     		add	r7, sp, #0
 1478              	.LCFI41:
 1479              		.cfi_def_cfa_register 7
 1480 0006 0200     		movs	r2, r0
 1481 0008 FB1D     		adds	r3, r7, #7
 1482 000a 1A70     		strb	r2, [r3]
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1483              		.loc 1 827 21
 1484 000c 1720     		movs	r0, #23
 1485 000e 3B18     		adds	r3, r7, r0
 1486 0010 0022     		movs	r2, #0
 1487 0012 1A70     		strb	r2, [r3]
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 1488              		.loc 1 828 12
 1489 0014 0023     		movs	r3, #0
 1490 0016 3B61     		str	r3, [r7, #16]
 1491              		.loc 1 828 23
 1492 0018 0023     		movs	r3, #0
 1493 001a FB60     		str	r3, [r7, #12]
 1494              		.loc 1 828 34
 1495 001c 0023     		movs	r3, #0
 1496 001e BB60     		str	r3, [r7, #8]
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP(OB_RDP));
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = (uint32_t)(OB->RDP & FLASH_OPTR_RDPROT);
 1497              		.loc 1 833 23
 1498 0020 1C4B     		ldr	r3, .L79
 1499 0022 1B68     		ldr	r3, [r3]
 1500              		.loc 1 833 8
 1501 0024 FF22     		movs	r2, #255
 1502 0026 1340     		ands	r3, r2
 1503 0028 3B61     		str	r3, [r7, #16]
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_WPRMOD)
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Mask WPRMOD bit */
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     tmp3 = (uint32_t)(OB->RDP & FLASH_OPTR_WPRMOD);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 49


 1504              		.loc 1 837 25
 1505 002a 1A4B     		ldr	r3, .L79
 1506 002c 1A68     		ldr	r2, [r3]
 1507              		.loc 1 837 10
 1508 002e 8023     		movs	r3, #128
 1509 0030 5B00     		lsls	r3, r3, #1
 1510 0032 1340     		ands	r3, r2
 1511 0034 BB60     		str	r3, [r7, #8]
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* calculate the option byte to write */
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     tmp1 = (~((uint32_t)(OB_RDP | tmp3)));
 1512              		.loc 1 841 15
 1513 0036 FB1D     		adds	r3, r7, #7
 1514 0038 1A78     		ldrb	r2, [r3]
 1515 003a BB68     		ldr	r3, [r7, #8]
 1516 003c 1343     		orrs	r3, r2
 1517              		.loc 1 841 10
 1518 003e DB43     		mvns	r3, r3
 1519 0040 3B61     		str	r3, [r7, #16]
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     tmp2 = (uint32_t)(((uint32_t)((uint32_t)(tmp1) << 16U)) | ((uint32_t)(OB_RDP | tmp3)));
 1520              		.loc 1 842 24
 1521 0042 3B69     		ldr	r3, [r7, #16]
 1522 0044 1A04     		lsls	r2, r3, #16
 1523              		.loc 1 842 64
 1524 0046 FB1D     		adds	r3, r7, #7
 1525 0048 1978     		ldrb	r1, [r3]
 1526 004a BB68     		ldr	r3, [r7, #8]
 1527 004c 0B43     		orrs	r3, r1
 1528              		.loc 1 842 10
 1529 004e 1343     		orrs	r3, r2
 1530 0050 FB60     		str	r3, [r7, #12]
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1531              		.loc 1 845 14
 1532 0052 0500     		movs	r5, r0
 1533 0054 3C18     		adds	r4, r7, r0
 1534 0056 104B     		ldr	r3, .L79+4
 1535 0058 1800     		movs	r0, r3
 1536 005a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1537 005e 0300     		movs	r3, r0
 1538 0060 2370     		strb	r3, [r4]
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if(status == HAL_OK)
 1539              		.loc 1 847 7
 1540 0062 2800     		movs	r0, r5
 1541 0064 3B18     		adds	r3, r7, r0
 1542 0066 1B78     		ldrb	r3, [r3]
 1543 0068 002B     		cmp	r3, #0
 1544 006a 0CD1     		bne	.L77
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Clean the error context */
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1545              		.loc 1 850 24
 1546 006c 0B4B     		ldr	r3, .L79+8
 1547 006e 0022     		movs	r2, #0
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 50


 1548 0070 5A61     		str	r2, [r3, #20]
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* program read protection level */
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       OB->RDP = tmp2;
 1549              		.loc 1 853 9
 1550 0072 084B     		ldr	r3, .L79
 1551              		.loc 1 853 15
 1552 0074 FA68     		ldr	r2, [r7, #12]
 1553 0076 1A60     		str	r2, [r3]
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1554              		.loc 1 856 16
 1555 0078 3C18     		adds	r4, r7, r0
 1556 007a 074B     		ldr	r3, .L79+4
 1557 007c 1800     		movs	r0, r3
 1558 007e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1559 0082 0300     		movs	r3, r0
 1560 0084 2370     		strb	r3, [r4]
 1561              	.L77:
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the Read protection operation Status */
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 1562              		.loc 1 860 10
 1563 0086 1723     		movs	r3, #23
 1564 0088 FB18     		adds	r3, r7, r3
 1565 008a 1B78     		ldrb	r3, [r3]
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1566              		.loc 1 861 1
 1567 008c 1800     		movs	r0, r3
 1568 008e BD46     		mov	sp, r7
 1569 0090 06B0     		add	sp, sp, #24
 1570              		@ sp needed
 1571 0092 B0BD     		pop	{r4, r5, r7, pc}
 1572              	.L80:
 1573              		.align	2
 1574              	.L79:
 1575 0094 0000F81F 		.word	536346624
 1576 0098 50C30000 		.word	50000
 1577 009c 00000000 		.word	pFlash
 1578              		.cfi_endproc
 1579              	.LFE61:
 1581              		.section	.text.FLASH_OB_BORConfig,"ax",%progbits
 1582              		.align	1
 1583              		.syntax unified
 1584              		.code	16
 1585              		.thumb_func
 1587              	FLASH_OB_BORConfig:
 1588              	.LFB62:
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Programs the FLASH brownout reset threshold level Option Byte.
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_BOR Selects the brownout reset threshold level.
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_OFF BOR is disabled at power down, the reset is asserted when the VDD 
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *                      power supply reaches the PDR(Power Down Reset) threshold (1.5V)
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 51


 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL1 BOR Reset threshold levels for 1.7V - 1.8V VDD power supply
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL2 BOR Reset threshold levels for 1.9V - 2.0V VDD power supply
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL3 BOR Reset threshold levels for 2.3V - 2.4V VDD power supply
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL4 BOR Reset threshold levels for 2.55V - 2.65V VDD power supply
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL5 BOR Reset threshold levels for 2.8V - 2.9V VDD power supply
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BORConfig(uint8_t OB_BOR)
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1589              		.loc 1 877 1
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 24
 1592              		@ frame_needed = 1, uses_anonymous_args = 0
 1593 0000 B0B5     		push	{r4, r5, r7, lr}
 1594              	.LCFI42:
 1595              		.cfi_def_cfa_offset 16
 1596              		.cfi_offset 4, -16
 1597              		.cfi_offset 5, -12
 1598              		.cfi_offset 7, -8
 1599              		.cfi_offset 14, -4
 1600 0002 86B0     		sub	sp, sp, #24
 1601              	.LCFI43:
 1602              		.cfi_def_cfa_offset 40
 1603 0004 00AF     		add	r7, sp, #0
 1604              	.LCFI44:
 1605              		.cfi_def_cfa_register 7
 1606 0006 0200     		movs	r2, r0
 1607 0008 FB1D     		adds	r3, r7, #7
 1608 000a 1A70     		strb	r2, [r3]
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1609              		.loc 1 878 21
 1610 000c 1721     		movs	r1, #23
 1611 000e 7B18     		adds	r3, r7, r1
 1612 0010 0022     		movs	r2, #0
 1613 0012 1A70     		strb	r2, [r3]
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp = 0, tmp1 = 0;
 1614              		.loc 1 879 12
 1615 0014 0023     		movs	r3, #0
 1616 0016 3B61     		str	r3, [r7, #16]
 1617              		.loc 1 879 21
 1618 0018 0023     		movs	r3, #0
 1619 001a FB60     		str	r3, [r7, #12]
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(OB_BOR));
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get the User Option byte register */
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~FLASH_OPTR_BOR_LEV) >> 16U);
 1620              		.loc 1 885 12
 1621 001c 194B     		ldr	r3, .L84
 1622 001e 5B68     		ldr	r3, [r3, #4]
 1623              		.loc 1 885 8
 1624 0020 194A     		ldr	r2, .L84+4
 1625 0022 1340     		ands	r3, r2
 1626 0024 FB60     		str	r3, [r7, #12]
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Calculate the option byte to write - [0xFF | nUSER | 0x00 | USER]*/
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 52


 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp = (uint32_t)~((OB_BOR | tmp1)) << 16U;
 1627              		.loc 1 888 29
 1628 0026 FB1D     		adds	r3, r7, #7
 1629 0028 1A78     		ldrb	r2, [r3]
 1630 002a FB68     		ldr	r3, [r7, #12]
 1631 002c 1343     		orrs	r3, r2
 1632              		.loc 1 888 9
 1633 002e DB43     		mvns	r3, r3
 1634              		.loc 1 888 7
 1635 0030 1B04     		lsls	r3, r3, #16
 1636 0032 3B61     		str	r3, [r7, #16]
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp |= (OB_BOR | tmp1);
 1637              		.loc 1 889 18
 1638 0034 FB1D     		adds	r3, r7, #7
 1639 0036 1A78     		ldrb	r2, [r3]
 1640 0038 FB68     		ldr	r3, [r7, #12]
 1641 003a 1343     		orrs	r3, r2
 1642              		.loc 1 889 7
 1643 003c 3A69     		ldr	r2, [r7, #16]
 1644 003e 1343     		orrs	r3, r2
 1645 0040 3B61     		str	r3, [r7, #16]
 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1646              		.loc 1 892 12
 1647 0042 0D00     		movs	r5, r1
 1648 0044 7C18     		adds	r4, r7, r1
 1649 0046 114B     		ldr	r3, .L84+8
 1650 0048 1800     		movs	r0, r3
 1651 004a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1652 004e 0300     		movs	r3, r0
 1653 0050 2370     		strb	r3, [r4]
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1654              		.loc 1 894 5
 1655 0052 2900     		movs	r1, r5
 1656 0054 7B18     		adds	r3, r7, r1
 1657 0056 1B78     		ldrb	r3, [r3]
 1658 0058 002B     		cmp	r3, #0
 1659 005a 0CD1     		bne	.L82
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {  
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1660              		.loc 1 897 22
 1661 005c 0C4B     		ldr	r3, .L84+12
 1662 005e 0022     		movs	r2, #0
 1663 0060 5A61     		str	r2, [r3, #20]
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Write the BOR Option Byte */            
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB->USER = tmp;
 1664              		.loc 1 900 7
 1665 0062 084B     		ldr	r3, .L84
 1666              		.loc 1 900 14
 1667 0064 3A69     		ldr	r2, [r7, #16]
 1668 0066 5A60     		str	r2, [r3, #4]
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 53


 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1669              		.loc 1 903 14
 1670 0068 7C18     		adds	r4, r7, r1
 1671 006a 084B     		ldr	r3, .L84+8
 1672 006c 1800     		movs	r0, r3
 1673 006e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1674 0072 0300     		movs	r3, r0
 1675 0074 2370     		strb	r3, [r4]
 1676              	.L82:
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the Option Byte BOR programming Status */
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 1677              		.loc 1 907 10
 1678 0076 1723     		movs	r3, #23
 1679 0078 FB18     		adds	r3, r7, r3
 1680 007a 1B78     		ldrb	r3, [r3]
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1681              		.loc 1 908 1
 1682 007c 1800     		movs	r0, r3
 1683 007e BD46     		mov	sp, r7
 1684 0080 06B0     		add	sp, sp, #24
 1685              		@ sp needed
 1686 0082 B0BD     		pop	{r4, r5, r7, pc}
 1687              	.L85:
 1688              		.align	2
 1689              	.L84:
 1690 0084 0000F81F 		.word	536346624
 1691 0088 F0FF0000 		.word	65520
 1692 008c 50C30000 		.word	50000
 1693 0090 00000000 		.word	pFlash
 1694              		.cfi_endproc
 1695              	.LFE62:
 1697              		.section	.text.FLASH_OB_BOOTBit1Config,"ax",%progbits
 1698              		.align	1
 1699              		.syntax unified
 1700              		.code	16
 1701              		.thumb_func
 1703              	FLASH_OB_BOOTBit1Config:
 1704              	.LFB63:
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Sets or resets the BOOT bit1 option bit.
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_BootBit1 Set or Reset the BOOT bit1 option bit.
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *             @arg @ref OB_BOOT_BIT1_RESET BOOT1 option bit reset
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *             @arg @ref OB_BOOT_BIT1_SET BOOT1 option bit set
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BOOTBit1Config(uint8_t OB_BootBit1)
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1705              		.loc 1 919 1
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 24
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709 0000 B0B5     		push	{r4, r5, r7, lr}
 1710              	.LCFI45:
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 54


 1711              		.cfi_def_cfa_offset 16
 1712              		.cfi_offset 4, -16
 1713              		.cfi_offset 5, -12
 1714              		.cfi_offset 7, -8
 1715              		.cfi_offset 14, -4
 1716 0002 86B0     		sub	sp, sp, #24
 1717              	.LCFI46:
 1718              		.cfi_def_cfa_offset 40
 1719 0004 00AF     		add	r7, sp, #0
 1720              	.LCFI47:
 1721              		.cfi_def_cfa_register 7
 1722 0006 0200     		movs	r2, r0
 1723 0008 FB1D     		adds	r3, r7, #7
 1724 000a 1A70     		strb	r2, [r3]
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK; 
 1725              		.loc 1 920 21
 1726 000c 1721     		movs	r1, #23
 1727 000e 7B18     		adds	r3, r7, r1
 1728 0010 0022     		movs	r2, #0
 1729 0012 1A70     		strb	r2, [r3]
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp = 0, tmp1 = 0, OB_Bits = ((uint32_t) OB_BootBit1) << 15;
 1730              		.loc 1 921 12
 1731 0014 0023     		movs	r3, #0
 1732 0016 3B61     		str	r3, [r7, #16]
 1733              		.loc 1 921 21
 1734 0018 0023     		movs	r3, #0
 1735 001a FB60     		str	r3, [r7, #12]
 1736              		.loc 1 921 42
 1737 001c FB1D     		adds	r3, r7, #7
 1738 001e 1B78     		ldrb	r3, [r3]
 1739              		.loc 1 921 31
 1740 0020 DB03     		lsls	r3, r3, #15
 1741 0022 BB60     		str	r3, [r7, #8]
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT1(OB_BootBit1));
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get the User Option byte register */
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~FLASH_OPTR_BOOT1) >> 16U);
 1742              		.loc 1 927 12
 1743 0024 184B     		ldr	r3, .L89
 1744 0026 5B68     		ldr	r3, [r3, #4]
 1745              		.loc 1 927 8
 1746 0028 5B04     		lsls	r3, r3, #17
 1747 002a 5B0C     		lsrs	r3, r3, #17
 1748 002c FB60     		str	r3, [r7, #12]
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Calculate the user option byte to write */ 
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp = (~(OB_Bits | tmp1)) << 16U;
 1749              		.loc 1 930 20
 1750 002e BA68     		ldr	r2, [r7, #8]
 1751 0030 FB68     		ldr	r3, [r7, #12]
 1752 0032 1343     		orrs	r3, r2
 1753              		.loc 1 930 10
 1754 0034 DB43     		mvns	r3, r3
 1755              		.loc 1 930 7
 1756 0036 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 55


 1757 0038 3B61     		str	r3, [r7, #16]
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp |= OB_Bits | tmp1;
 1758              		.loc 1 931 18
 1759 003a BA68     		ldr	r2, [r7, #8]
 1760 003c FB68     		ldr	r3, [r7, #12]
 1761 003e 1343     		orrs	r3, r2
 1762              		.loc 1 931 7
 1763 0040 3A69     		ldr	r2, [r7, #16]
 1764 0042 1343     		orrs	r3, r2
 1765 0044 3B61     		str	r3, [r7, #16]
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1766              		.loc 1 934 12
 1767 0046 0D00     		movs	r5, r1
 1768 0048 7C18     		adds	r4, r7, r1
 1769 004a 104B     		ldr	r3, .L89+4
 1770 004c 1800     		movs	r0, r3
 1771 004e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1772 0052 0300     		movs	r3, r0
 1773 0054 2370     		strb	r3, [r4]
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1774              		.loc 1 936 5
 1775 0056 2900     		movs	r1, r5
 1776 0058 7B18     		adds	r3, r7, r1
 1777 005a 1B78     		ldrb	r3, [r3]
 1778 005c 002B     		cmp	r3, #0
 1779 005e 0CD1     		bne	.L87
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {  
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1780              		.loc 1 939 22
 1781 0060 0B4B     		ldr	r3, .L89+8
 1782 0062 0022     		movs	r2, #0
 1783 0064 5A61     		str	r2, [r3, #20]
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Program OB */
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB->USER = tmp; 
 1784              		.loc 1 941 7
 1785 0066 084B     		ldr	r3, .L89
 1786              		.loc 1 941 14
 1787 0068 3A69     		ldr	r2, [r7, #16]
 1788 006a 5A60     		str	r2, [r3, #4]
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1789              		.loc 1 943 14
 1790 006c 7C18     		adds	r4, r7, r1
 1791 006e 074B     		ldr	r3, .L89+4
 1792 0070 1800     		movs	r0, r3
 1793 0072 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1794 0076 0300     		movs	r3, r0
 1795 0078 2370     		strb	r3, [r4]
 1796              	.L87:
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 1797              		.loc 1 946 10
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 56


 1798 007a 1723     		movs	r3, #23
 1799 007c FB18     		adds	r3, r7, r3
 1800 007e 1B78     		ldrb	r3, [r3]
 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1801              		.loc 1 947 1
 1802 0080 1800     		movs	r0, r3
 1803 0082 BD46     		mov	sp, r7
 1804 0084 06B0     		add	sp, sp, #24
 1805              		@ sp needed
 1806 0086 B0BD     		pop	{r4, r5, r7, pc}
 1807              	.L90:
 1808              		.align	2
 1809              	.L89:
 1810 0088 0000F81F 		.word	536346624
 1811 008c 50C30000 		.word	50000
 1812 0090 00000000 		.word	pFlash
 1813              		.cfi_endproc
 1814              	.LFE63:
 1816              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 1817              		.align	1
 1818              		.syntax unified
 1819              		.code	16
 1820              		.thumb_func
 1822              	FLASH_OB_GetUser:
 1823              	.LFB64:
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH User Option Bytes values.
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval The FLASH User Option Bytes.
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1824              		.loc 1 954 1
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 0
 1827              		@ frame_needed = 1, uses_anonymous_args = 0
 1828 0000 80B5     		push	{r7, lr}
 1829              	.LCFI48:
 1830              		.cfi_def_cfa_offset 8
 1831              		.cfi_offset 7, -8
 1832              		.cfi_offset 14, -4
 1833 0002 00AF     		add	r7, sp, #0
 1834              	.LCFI49:
 1835              		.cfi_def_cfa_register 7
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the User Option Byte */
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return (uint8_t)((FLASH->OPTR & FLASH_OPTR_USER) >> 16U);
 1836              		.loc 1 956 26
 1837 0004 044B     		ldr	r3, .L93
 1838 0006 DB69     		ldr	r3, [r3, #28]
 1839              		.loc 1 956 52
 1840 0008 1B0C     		lsrs	r3, r3, #16
 1841              		.loc 1 956 10
 1842 000a DBB2     		uxtb	r3, r3
 1843 000c 7022     		movs	r2, #112
 1844 000e 1340     		ands	r3, r2
 1845 0010 DBB2     		uxtb	r3, r3
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 57


 1846              		.loc 1 957 1
 1847 0012 1800     		movs	r0, r3
 1848 0014 BD46     		mov	sp, r7
 1849              		@ sp needed
 1850 0016 80BD     		pop	{r7, pc}
 1851              	.L94:
 1852              		.align	2
 1853              	.L93:
 1854 0018 00200240 		.word	1073881088
 1855              		.cfi_endproc
 1856              	.LFE64:
 1858              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 1859              		.align	1
 1860              		.syntax unified
 1861              		.code	16
 1862              		.thumb_func
 1864              	FLASH_OB_GetRDP:
 1865              	.LFB65:
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval FLASH RDP level
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_2 Full chip protection
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetRDP(void)
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1866              		.loc 1 968 1
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 8
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870 0000 80B5     		push	{r7, lr}
 1871              	.LCFI50:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 82B0     		sub	sp, sp, #8
 1876              	.LCFI51:
 1877              		.cfi_def_cfa_offset 16
 1878 0004 00AF     		add	r7, sp, #0
 1879              	.LCFI52:
 1880              		.cfi_def_cfa_register 7
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint8_t rdp_level = READ_BIT(FLASH->OPTR, FLASH_OPTR_RDPROT);
 1881              		.loc 1 969 23
 1882 0006 0A4B     		ldr	r3, .L98
 1883 0008 DA69     		ldr	r2, [r3, #28]
 1884              		.loc 1 969 11
 1885 000a FB1D     		adds	r3, r7, #7
 1886 000c 1A70     		strb	r2, [r3]
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if ((rdp_level != OB_RDP_LEVEL_0) && (rdp_level != OB_RDP_LEVEL_2))
 1887              		.loc 1 971 6
 1888 000e FB1D     		adds	r3, r7, #7
 1889 0010 1B78     		ldrb	r3, [r3]
 1890 0012 AA2B     		cmp	r3, #170
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 58


 1891 0014 05D0     		beq	.L96
 1892              		.loc 1 971 37 discriminator 1
 1893 0016 FB1D     		adds	r3, r7, #7
 1894 0018 1B78     		ldrb	r3, [r3]
 1895 001a CC2B     		cmp	r3, #204
 1896 001c 01D0     		beq	.L96
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     return (OB_RDP_LEVEL_1);
 1897              		.loc 1 973 12
 1898 001e BB23     		movs	r3, #187
 1899 0020 01E0     		b	.L97
 1900              	.L96:
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   else
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     return rdp_level;
 1901              		.loc 1 977 12
 1902 0022 FB1D     		adds	r3, r7, #7
 1903 0024 1B78     		ldrb	r3, [r3]
 1904              	.L97:
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1905              		.loc 1 979 1
 1906 0026 1800     		movs	r0, r3
 1907 0028 BD46     		mov	sp, r7
 1908 002a 02B0     		add	sp, sp, #8
 1909              		@ sp needed
 1910 002c 80BD     		pop	{r7, pc}
 1911              	.L99:
 1912 002e C046     		.align	2
 1913              	.L98:
 1914 0030 00200240 		.word	1073881088
 1915              		.cfi_endproc
 1916              	.LFE65:
 1918              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 1919              		.align	1
 1920              		.syntax unified
 1921              		.code	16
 1922              		.thumb_func
 1924              	FLASH_OB_GetBOR:
 1925              	.LFB66:
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOR level.
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval The BOR level Option Bytes.
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOR(void)
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1926              		.loc 1 986 1
 1927              		.cfi_startproc
 1928              		@ args = 0, pretend = 0, frame = 0
 1929              		@ frame_needed = 1, uses_anonymous_args = 0
 1930 0000 80B5     		push	{r7, lr}
 1931              	.LCFI53:
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 59


 1935 0002 00AF     		add	r7, sp, #0
 1936              	.LCFI54:
 1937              		.cfi_def_cfa_register 7
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the BOR level */
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return (uint8_t)((FLASH->OPTR & (uint32_t)FLASH_OPTR_BOR_LEV) >> 16U);
 1938              		.loc 1 988 26
 1939 0004 044B     		ldr	r3, .L102
 1940 0006 DB69     		ldr	r3, [r3, #28]
 1941              		.loc 1 988 65
 1942 0008 1B0C     		lsrs	r3, r3, #16
 1943              		.loc 1 988 10
 1944 000a DBB2     		uxtb	r3, r3
 1945 000c 0F22     		movs	r2, #15
 1946 000e 1340     		ands	r3, r2
 1947 0010 DBB2     		uxtb	r3, r3
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1948              		.loc 1 989 1
 1949 0012 1800     		movs	r0, r3
 1950 0014 BD46     		mov	sp, r7
 1951              		@ sp needed
 1952 0016 80BD     		pop	{r7, pc}
 1953              	.L103:
 1954              		.align	2
 1955              	.L102:
 1956 0018 00200240 		.word	1073881088
 1957              		.cfi_endproc
 1958              	.LFE66:
 1960              		.section	.text.FLASH_OB_GetBOOTBit1,"ax",%progbits
 1961              		.align	1
 1962              		.syntax unified
 1963              		.code	16
 1964              		.thumb_func
 1966              	FLASH_OB_GetBOOTBit1:
 1967              	.LFB67:
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOOT bit1 value.
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval The BOOT bit 1 value Option Bytes.
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOOTBit1(void)
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 1968              		.loc 1 996 1
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 0
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 80B5     		push	{r7, lr}
 1973              	.LCFI55:
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 1977 0002 00AF     		add	r7, sp, #0
 1978              	.LCFI56:
 1979              		.cfi_def_cfa_register 7
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the BOR level */
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return (FLASH->OPTR & FLASH_OPTR_BOOT1) >> FLASH_OPTR_BOOT1_Pos;
 1980              		.loc 1 998 16
 1981 0004 044B     		ldr	r3, .L106
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 60


 1982 0006 DB69     		ldr	r3, [r3, #28]
 1983              		.loc 1 998 43
 1984 0008 DB0F     		lsrs	r3, r3, #31
 1985 000a DBB2     		uxtb	r3, r3
 1986 000c 0122     		movs	r2, #1
 1987 000e 1340     		ands	r3, r2
 1988 0010 DBB2     		uxtb	r3, r3
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 1989              		.loc 1 1000 1
 1990 0012 1800     		movs	r0, r3
 1991 0014 BD46     		mov	sp, r7
 1992              		@ sp needed
 1993 0016 80BD     		pop	{r7, pc}
 1994              	.L107:
 1995              		.align	2
 1996              	.L106:
 1997 0018 00200240 		.word	1073881088
 1998              		.cfi_endproc
 1999              	.LFE67:
 2001              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 2002              		.align	1
 2003              		.syntax unified
 2004              		.code	16
 2005              		.thumb_func
 2007              	FLASH_OB_GetWRP:
 2008              	.LFB68:
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection Option Bytes value.
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetWRP(void)
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 2009              		.loc 1 1007 1
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 0
 2012              		@ frame_needed = 1, uses_anonymous_args = 0
 2013 0000 80B5     		push	{r7, lr}
 2014              	.LCFI57:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 7, -8
 2017              		.cfi_offset 14, -4
 2018 0002 00AF     		add	r7, sp, #0
 2019              	.LCFI58:
 2020              		.cfi_def_cfa_register 7
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return (uint32_t)(FLASH->WRPR);
 2021              		.loc 1 1009 26
 2022 0004 024B     		ldr	r3, .L110
 2023              		.loc 1 1009 10
 2024 0006 1B6A     		ldr	r3, [r3, #32]
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 2025              		.loc 1 1010 1
 2026 0008 1800     		movs	r0, r3
 2027 000a BD46     		mov	sp, r7
 2028              		@ sp needed
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 61


 2029 000c 80BD     		pop	{r7, pc}
 2030              	.L111:
 2031 000e C046     		.align	2
 2032              	.L110:
 2033 0010 00200240 		.word	1073881088
 2034              		.cfi_endproc
 2035              	.LFE68:
 2037              		.section	.text.FLASH_OB_ProtectedSectorsConfig,"ax",%progbits
 2038              		.align	1
 2039              		.syntax unified
 2040              		.code	16
 2041              		.thumb_func
 2043              	FLASH_OB_ProtectedSectorsConfig:
 2044              	.LFB69:
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection Option Bytes value.
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetWRP2(void)
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return (uint32_t)(FLASH->WRPR2);
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* STM32L071xx || STM32L072xx || STM32L073xx || STM32L081xx || STM32L082xx || STM32L083xx */
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Write Option Byte of the desired pages of the Flash.
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  Sector specifies the sectors to be write protected.
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  Sector2 specifies the sectors to be write protected (only stm32l07xxx and stm32l08xxx d
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Write protection.
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be: 
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *        @arg @ref OB_WRPSTATE_ENABLE
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *        @arg @ref OB_WRPSTATE_DISABLE
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProtectedSectorsConfig(uint32_t Sector, uint32_t Sector2, uint32_
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #else
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Write Option Byte of the desired pages of the Flash.
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  Sector specifies the sectors to be write protected.
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Write protection.
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be: 
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *        @arg @ref OB_WRPSTATE_ENABLE
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *        @arg @ref OB_WRPSTATE_DISABLE
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProtectedSectorsConfig(uint32_t Sector, uint32_t NewState)
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 2045              		.loc 1 1048 1
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 24
 2048              		@ frame_needed = 1, uses_anonymous_args = 0
 2049 0000 B0B5     		push	{r4, r5, r7, lr}
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 62


 2050              	.LCFI59:
 2051              		.cfi_def_cfa_offset 16
 2052              		.cfi_offset 4, -16
 2053              		.cfi_offset 5, -12
 2054              		.cfi_offset 7, -8
 2055              		.cfi_offset 14, -4
 2056 0002 86B0     		sub	sp, sp, #24
 2057              	.LCFI60:
 2058              		.cfi_def_cfa_offset 40
 2059 0004 00AF     		add	r7, sp, #0
 2060              	.LCFI61:
 2061              		.cfi_def_cfa_register 7
 2062 0006 7860     		str	r0, [r7, #4]
 2063 0008 3960     		str	r1, [r7]
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2064              		.loc 1 1049 21
 2065 000a 1725     		movs	r5, #23
 2066 000c 7B19     		adds	r3, r7, r5
 2067 000e 0022     		movs	r2, #0
 2068 0010 1A70     		strb	r2, [r3]
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t WRP_Data = 0;
 2069              		.loc 1 1050 12
 2070 0012 0023     		movs	r3, #0
 2071 0014 3B61     		str	r3, [r7, #16]
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t OB_WRP = Sector;
 2072              		.loc 1 1051 12
 2073 0016 7B68     		ldr	r3, [r7, #4]
 2074 0018 FB60     		str	r3, [r7, #12]
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2075              		.loc 1 1054 12
 2076 001a 7C19     		adds	r4, r7, r5
 2077 001c 224B     		ldr	r3, .L116
 2078 001e 1800     		movs	r0, r3
 2079 0020 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2080 0024 0300     		movs	r3, r0
 2081 0026 2370     		strb	r3, [r4]
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2082              		.loc 1 1056 5
 2083 0028 7B19     		adds	r3, r7, r5
 2084 002a 1B78     		ldrb	r3, [r3]
 2085 002c 002B     		cmp	r3, #0
 2086 002e 2DD1     		bne	.L113
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 2087              		.loc 1 1059 22
 2088 0030 1E4B     		ldr	r3, .L116+4
 2089 0032 0022     		movs	r2, #0
 2090 0034 5A61     		str	r2, [r3, #20]
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Update WRP only if at least 1 selected sector */
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (OB_WRP != 0x00000000U)
 2091              		.loc 1 1062 8
 2092 0036 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 63


 2093 0038 002B     		cmp	r3, #0
 2094 003a 27D0     		beq	.L113
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       if ((OB_WRP & WRP_MASK_LOW) != 0x00000000U)
 2095              		.loc 1 1064 19
 2096 003c FB68     		ldr	r3, [r7, #12]
 2097 003e 1B04     		lsls	r3, r3, #16
 2098 0040 1B0C     		lsrs	r3, r3, #16
 2099              		.loc 1 1064 10
 2100 0042 23D0     		beq	.L113
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       {
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         if (NewState != OB_WRPSTATE_DISABLE)
 2101              		.loc 1 1066 12
 2102 0044 3B68     		ldr	r3, [r7]
 2103 0046 002B     		cmp	r3, #0
 2104 0048 0FD0     		beq	.L114
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         {
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           WRP_Data = (uint16_t)(((OB_WRP & WRP_MASK_LOW) | OB->WRP01));
 2105              		.loc 1 1068 22
 2106 004a FB68     		ldr	r3, [r7, #12]
 2107 004c 9AB2     		uxth	r2, r3
 2108              		.loc 1 1068 62
 2109 004e 184B     		ldr	r3, .L116+8
 2110 0050 9B68     		ldr	r3, [r3, #8]
 2111              		.loc 1 1068 22
 2112 0052 9BB2     		uxth	r3, r3
 2113 0054 1343     		orrs	r3, r2
 2114 0056 9BB2     		uxth	r3, r3
 2115              		.loc 1 1068 20
 2116 0058 3B61     		str	r3, [r7, #16]
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           OB->WRP01 = (uint32_t)(~(WRP_Data) << 16U) | (WRP_Data);
 2117              		.loc 1 1069 34
 2118 005a 3B69     		ldr	r3, [r7, #16]
 2119 005c DB43     		mvns	r3, r3
 2120              		.loc 1 1069 46
 2121 005e 1904     		lsls	r1, r3, #16
 2122              		.loc 1 1069 13
 2123 0060 134B     		ldr	r3, .L116+8
 2124              		.loc 1 1069 54
 2125 0062 3A69     		ldr	r2, [r7, #16]
 2126 0064 0A43     		orrs	r2, r1
 2127              		.loc 1 1069 21
 2128 0066 9A60     		str	r2, [r3, #8]
 2129 0068 10E0     		b	.L113
 2130              	.L114:
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         }             
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         else
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         {
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           WRP_Data = (uint16_t)(~OB_WRP & (WRP_MASK_LOW & OB->WRP01));
 2131              		.loc 1 1073 22
 2132 006a FB68     		ldr	r3, [r7, #12]
 2133 006c 9BB2     		uxth	r3, r3
 2134 006e DB43     		mvns	r3, r3
 2135 0070 9AB2     		uxth	r2, r3
 2136              		.loc 1 1073 61
 2137 0072 0F4B     		ldr	r3, .L116+8
 2138 0074 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 64


 2139              		.loc 1 1073 22
 2140 0076 9BB2     		uxth	r3, r3
 2141 0078 1340     		ands	r3, r2
 2142 007a 9BB2     		uxth	r3, r3
 2143              		.loc 1 1073 20
 2144 007c 3B61     		str	r3, [r7, #16]
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           OB->WRP01 =  (uint32_t)((~WRP_Data) << 16U) | (WRP_Data);
 2145              		.loc 1 1074 36
 2146 007e 3B69     		ldr	r3, [r7, #16]
 2147 0080 DB43     		mvns	r3, r3
 2148              		.loc 1 1074 47
 2149 0082 1904     		lsls	r1, r3, #16
 2150              		.loc 1 1074 13
 2151 0084 0A4B     		ldr	r3, .L116+8
 2152              		.loc 1 1074 55
 2153 0086 3A69     		ldr	r2, [r7, #16]
 2154 0088 0A43     		orrs	r2, r1
 2155              		.loc 1 1074 21
 2156 008a 9A60     		str	r2, [r3, #8]
 2157              	.L113:
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         }
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       }
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(STM32L071xx) || defined(STM32L072xx) || defined(STM32L073xx) || defined(STM32L081xx) ||
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Update WRP only if at least 1 selected sector */
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (OB_WRP != 0x00000000U)
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       if ((OB_WRP & WRP_MASK_HIGH) != 0x00000000U)
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       {
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         if (NewState != OB_WRPSTATE_DISABLE)
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         {
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           WRP_Data = (uint16_t)((((OB_WRP & WRP_MASK_HIGH) >> 16U | OB->WRP23))); 
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           OB->WRP23 = (uint32_t)(~(WRP_Data) << 16U) | (WRP_Data);
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         }             
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         else
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         {
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           WRP_Data = (uint16_t)((((~OB_WRP & WRP_MASK_HIGH) >> 16U & OB->WRP23))); 
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           OB->WRP23 = (uint32_t)((~WRP_Data) << 16U) | (WRP_Data);
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         } 
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       }
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB_WRP = Sector2;
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Update WRP only if at least 1 selected sector */
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     if (OB_WRP != 0x00000000U)
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     {
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       if ((OB_WRP & WRP_MASK_LOW) != 0x00000000U)
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       {
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         if (NewState != OB_WRPSTATE_DISABLE)
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         {
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           WRP_Data = (uint16_t)(((OB_WRP & WRP_MASK_LOW) | OB->WRP45));
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           OB->WRP45 =(uint32_t)(~(WRP_Data) << 16U) | (WRP_Data);
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         }             
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         else
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         {
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           WRP_Data = (uint16_t)(~OB_WRP & (WRP_MASK_LOW & OB->WRP45));
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****           OB->WRP45 = (uint32_t)((~WRP_Data) << 16U) | (WRP_Data);
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 65


1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****         }
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****       }
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     }
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* STM32L071xx || STM32L072xx || STM32L073xx || STM32L081xx || STM32L082xx || STM32L083xx */
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2158              		.loc 1 1118 12
 2159 008c 1725     		movs	r5, #23
 2160 008e 7C19     		adds	r4, r7, r5
 2161 0090 054B     		ldr	r3, .L116
 2162 0092 1800     		movs	r0, r3
 2163 0094 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2164 0098 0300     		movs	r3, r0
 2165 009a 2370     		strb	r3, [r4]
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the write protection operation Status */
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;      
 2166              		.loc 1 1121 10
 2167 009c 7B19     		adds	r3, r7, r5
 2168 009e 1B78     		ldrb	r3, [r3]
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 2169              		.loc 1 1122 1
 2170 00a0 1800     		movs	r0, r3
 2171 00a2 BD46     		mov	sp, r7
 2172 00a4 06B0     		add	sp, sp, #24
 2173              		@ sp needed
 2174 00a6 B0BD     		pop	{r4, r5, r7, pc}
 2175              	.L117:
 2176              		.align	2
 2177              	.L116:
 2178 00a8 50C30000 		.word	50000
 2179 00ac 00000000 		.word	pFlash
 2180 00b0 0000F81F 		.word	536346624
 2181              		.cfi_endproc
 2182              	.LFE69:
 2184              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 2185              		.align	1
 2186              		.syntax unified
 2187              		.code	16
 2188              		.thumb_func
 2190              	FLASH_OB_UserConfig:
 2191              	.LFB70:
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_IWDG Selects the WDG mode.
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_IWDG_SW Software WDG selected
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_IWDG_HW Hardware WDG selected
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_STOP Reset event when entering STOP mode.
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_STOP_NORST No reset generated when entering in STOP
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_STOP_RST Reset generated when entering in STOP
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_STDBY Reset event when entering Standby mode.
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_STDBY_NORST No reset generated when entering in STANDBY
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 66


1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *     @arg @ref OB_STDBY_RST Reset generated when entering in STANDBY
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 2192              		.loc 1 1141 1
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 24
 2195              		@ frame_needed = 1, uses_anonymous_args = 0
 2196 0000 B0B5     		push	{r4, r5, r7, lr}
 2197              	.LCFI62:
 2198              		.cfi_def_cfa_offset 16
 2199              		.cfi_offset 4, -16
 2200              		.cfi_offset 5, -12
 2201              		.cfi_offset 7, -8
 2202              		.cfi_offset 14, -4
 2203 0002 86B0     		sub	sp, sp, #24
 2204              	.LCFI63:
 2205              		.cfi_def_cfa_offset 40
 2206 0004 00AF     		add	r7, sp, #0
 2207              	.LCFI64:
 2208              		.cfi_def_cfa_register 7
 2209 0006 0400     		movs	r4, r0
 2210 0008 0800     		movs	r0, r1
 2211 000a 1100     		movs	r1, r2
 2212 000c FB1D     		adds	r3, r7, #7
 2213 000e 221C     		adds	r2, r4, #0
 2214 0010 1A70     		strb	r2, [r3]
 2215 0012 BB1D     		adds	r3, r7, #6
 2216 0014 021C     		adds	r2, r0, #0
 2217 0016 1A70     		strb	r2, [r3]
 2218 0018 7B1D     		adds	r3, r7, #5
 2219 001a 0A1C     		adds	r2, r1, #0
 2220 001c 1A70     		strb	r2, [r3]
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK; 
 2221              		.loc 1 1142 21
 2222 001e 1721     		movs	r1, #23
 2223 0020 7B18     		adds	r3, r7, r1
 2224 0022 0022     		movs	r2, #0
 2225 0024 1A70     		strb	r2, [r3]
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp = 0, tmp1 = 0;
 2226              		.loc 1 1143 12
 2227 0026 0023     		movs	r3, #0
 2228 0028 3B61     		str	r3, [r7, #16]
 2229              		.loc 1 1143 21
 2230 002a 0023     		movs	r3, #0
 2231 002c FB60     		str	r3, [r7, #12]
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get the User Option byte register */
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~FLASH_OPTR_USER) >> 16U);
 2232              		.loc 1 1151 12
 2233 002e 234B     		ldr	r3, .L121
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 67


 2234 0030 5B68     		ldr	r3, [r3, #4]
 2235              		.loc 1 1151 8
 2236 0032 234A     		ldr	r2, .L121+4
 2237 0034 1340     		ands	r3, r2
 2238 0036 FB60     		str	r3, [r7, #12]
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Calculate the user option byte to write */ 
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp = (uint32_t)(((uint32_t)~((uint32_t)((uint32_t)(OB_IWDG) | (uint32_t)(OB_STOP) | (uint32_t)(O
 2239              		.loc 1 1154 86
 2240 0038 FA1D     		adds	r2, r7, #7
 2241 003a BB1D     		adds	r3, r7, #6
 2242 003c 1278     		ldrb	r2, [r2]
 2243 003e 1B78     		ldrb	r3, [r3]
 2244 0040 1343     		orrs	r3, r2
 2245 0042 DAB2     		uxtb	r2, r3
 2246 0044 7B1D     		adds	r3, r7, #5
 2247 0046 1B78     		ldrb	r3, [r3]
 2248 0048 1343     		orrs	r3, r2
 2249 004a DBB2     		uxtb	r3, r3
 2250 004c 1A00     		movs	r2, r3
 2251              		.loc 1 1154 33
 2252 004e FB68     		ldr	r3, [r7, #12]
 2253 0050 1343     		orrs	r3, r2
 2254              		.loc 1 1154 21
 2255 0052 DB43     		mvns	r3, r3
 2256              		.loc 1 1154 7
 2257 0054 1B04     		lsls	r3, r3, #16
 2258 0056 3B61     		str	r3, [r7, #16]
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp |= ((uint32_t)(OB_IWDG) | ((uint32_t)OB_STOP) | (uint32_t)(OB_STDBY) | tmp1);
 2259              		.loc 1 1155 53
 2260 0058 FA1D     		adds	r2, r7, #7
 2261 005a BB1D     		adds	r3, r7, #6
 2262 005c 1278     		ldrb	r2, [r2]
 2263 005e 1B78     		ldrb	r3, [r3]
 2264 0060 1343     		orrs	r3, r2
 2265 0062 DAB2     		uxtb	r2, r3
 2266 0064 7B1D     		adds	r3, r7, #5
 2267 0066 1B78     		ldrb	r3, [r3]
 2268 0068 1343     		orrs	r3, r2
 2269 006a DBB2     		uxtb	r3, r3
 2270 006c 1A00     		movs	r2, r3
 2271              		.loc 1 1155 76
 2272 006e FB68     		ldr	r3, [r7, #12]
 2273 0070 1343     		orrs	r3, r2
 2274              		.loc 1 1155 7
 2275 0072 3A69     		ldr	r2, [r7, #16]
 2276 0074 1343     		orrs	r3, r2
 2277 0076 3B61     		str	r3, [r7, #16]
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2278              		.loc 1 1158 12
 2279 0078 0D00     		movs	r5, r1
 2280 007a 7C18     		adds	r4, r7, r1
 2281 007c 114B     		ldr	r3, .L121+8
 2282 007e 1800     		movs	r0, r3
 2283 0080 FFF7FEFF 		bl	FLASH_WaitForLastOperation
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 68


 2284 0084 0300     		movs	r3, r0
 2285 0086 2370     		strb	r3, [r4]
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2286              		.loc 1 1160 5
 2287 0088 2900     		movs	r1, r5
 2288 008a 7B18     		adds	r3, r7, r1
 2289 008c 1B78     		ldrb	r3, [r3]
 2290 008e 002B     		cmp	r3, #0
 2291 0090 0CD1     		bne	.L119
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {  
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 2292              		.loc 1 1163 22
 2293 0092 0D4B     		ldr	r3, .L121+12
 2294 0094 0022     		movs	r2, #0
 2295 0096 5A61     		str	r2, [r3, #20]
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Write the User Option Byte */
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB->USER = tmp;
 2296              		.loc 1 1166 7
 2297 0098 084B     		ldr	r3, .L121
 2298              		.loc 1 1166 14
 2299 009a 3A69     		ldr	r2, [r7, #16]
 2300 009c 5A60     		str	r2, [r3, #4]
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2301              		.loc 1 1169 14
 2302 009e 7C18     		adds	r4, r7, r1
 2303 00a0 084B     		ldr	r3, .L121+8
 2304 00a2 1800     		movs	r0, r3
 2305 00a4 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2306 00a8 0300     		movs	r3, r0
 2307 00aa 2370     		strb	r3, [r4]
 2308              	.L119:
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the Option Byte program Status */
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
 2309              		.loc 1 1173 10
 2310 00ac 1723     		movs	r3, #23
 2311 00ae FB18     		adds	r3, r7, r3
 2312 00b0 1B78     		ldrb	r3, [r3]
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 2313              		.loc 1 1174 1
 2314 00b2 1800     		movs	r0, r3
 2315 00b4 BD46     		mov	sp, r7
 2316 00b6 06B0     		add	sp, sp, #24
 2317              		@ sp needed
 2318 00b8 B0BD     		pop	{r4, r5, r7, pc}
 2319              	.L122:
 2320 00ba C046     		.align	2
 2321              	.L121:
 2322 00bc 0000F81F 		.word	536346624
 2323 00c0 8FFF0000 		.word	65423
 2324 00c4 50C30000 		.word	50000
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 69


 2325 00c8 00000000 		.word	pFlash
 2326              		.cfi_endproc
 2327              	.LFE70:
 2329              		.section	.text.FLASH_PageErase,"ax",%progbits
 2330              		.align	1
 2331              		.global	FLASH_PageErase
 2332              		.syntax unified
 2333              		.code	16
 2334              		.thumb_func
 2336              	FLASH_PageErase:
 2337              	.LFB71:
1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #if defined(FLASH_OPTR_BFB2)
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Configures to boot from Bank1 or Bank2.
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  OB_BOOT select the FLASH Bank to boot from.
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *             @arg @ref OB_BOOT_BANK1 BFB2 option bit reset
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *             @arg @ref OB_BOOT_BANK2 BFB2 option bit set
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval HAL status
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BootConfig(uint8_t OB_BOOT)
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK; 
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmp1 = 0U;
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Check the parameters */
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT_BANK(OB_BOOT));
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Get the User Option byte register  and BOR Level*/
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~FLASH_OPTR_BFB2) >> 16U);
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Calculate the option byte to write */
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp = (uint32_t)~(OB_BOOT | tmp1) << 16U;
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   tmp |= (OB_BOOT | tmp1);
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   if(status == HAL_OK)
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   {  
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Clean the error context */
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Write the BOOT Option Byte */
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     OB->USER = tmp;
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   }
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Return the Option Byte program Status */
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   return status;
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** #endif /* FLASH_OPTR_BFB2 */
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 70


1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @}
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @addtogroup FLASH
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @{
1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Functions
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  * @{
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****  */
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** /**
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @brief  Erases a specified page in program memory.
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @param  PageAddress The page address in program memory to be erased.
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @note   A Page is erased in the Program memory only if the address to load 
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *         is the start address of a page (multiple of @ref FLASH_PAGE_SIZE bytes).
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   * @retval None
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   */
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** void FLASH_PageErase(uint32_t PageAddress)
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** {
 2338              		.loc 1 1247 1
 2339              		.cfi_startproc
 2340              		@ args = 0, pretend = 0, frame = 8
 2341              		@ frame_needed = 1, uses_anonymous_args = 0
 2342 0000 80B5     		push	{r7, lr}
 2343              	.LCFI65:
 2344              		.cfi_def_cfa_offset 8
 2345              		.cfi_offset 7, -8
 2346              		.cfi_offset 14, -4
 2347 0002 82B0     		sub	sp, sp, #8
 2348              	.LCFI66:
 2349              		.cfi_def_cfa_offset 16
 2350 0004 00AF     		add	r7, sp, #0
 2351              	.LCFI67:
 2352              		.cfi_def_cfa_register 7
 2353 0006 7860     		str	r0, [r7, #4]
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Clean the error context */
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 2354              		.loc 1 1249 20
 2355 0008 0C4B     		ldr	r3, .L124
 2356 000a 0022     		movs	r2, #0
 2357 000c 5A61     		str	r2, [r3, #20]
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Set the ERASE bit */
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_ERASE);
 2358              		.loc 1 1252 3
 2359 000e 0C4B     		ldr	r3, .L124+4
 2360 0010 5A68     		ldr	r2, [r3, #4]
 2361 0012 0B4B     		ldr	r3, .L124+4
 2362 0014 8021     		movs	r1, #128
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 71


 2363 0016 8900     		lsls	r1, r1, #2
 2364 0018 0A43     		orrs	r2, r1
 2365 001a 5A60     		str	r2, [r3, #4]
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Set PROG bit */
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_PROG);
 2366              		.loc 1 1255 3
 2367 001c 084B     		ldr	r3, .L124+4
 2368 001e 5A68     		ldr	r2, [r3, #4]
 2369 0020 074B     		ldr	r3, .L124+4
 2370 0022 0821     		movs	r1, #8
 2371 0024 0A43     		orrs	r2, r1
 2372 0026 5A60     		str	r2, [r3, #4]
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** 
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   /* Write 00000000h to the first word of the program page to erase */
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c ****   *(__IO uint32_t *)(uint32_t)(PageAddress & ~(FLASH_PAGE_SIZE - 1)) = 0x00000000;
 2373              		.loc 1 1258 21
 2374 0028 7B68     		ldr	r3, [r7, #4]
 2375 002a 7F22     		movs	r2, #127
 2376 002c 9343     		bics	r3, r2
 2377              		.loc 1 1258 70
 2378 002e 0022     		movs	r2, #0
 2379 0030 1A60     		str	r2, [r3]
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_flash_ex.c **** }
 2380              		.loc 1 1259 1
 2381 0032 C046     		nop
 2382 0034 BD46     		mov	sp, r7
 2383 0036 02B0     		add	sp, sp, #8
 2384              		@ sp needed
 2385 0038 80BD     		pop	{r7, pc}
 2386              	.L125:
 2387 003a C046     		.align	2
 2388              	.L124:
 2389 003c 00000000 		.word	pFlash
 2390 0040 00200240 		.word	1073881088
 2391              		.cfi_endproc
 2392              	.LFE71:
 2394              		.text
 2395              	.Letext0:
 2396              		.file 3 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 2397              		.file 4 "d:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 2398              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 2399              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 2400              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2401              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_flash.h"
 2402              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_flash_ex.h"
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 72


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal_flash_ex.c
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:18     .text.HAL_FLASHEx_Erase:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:24     .text.HAL_FLASHEx_Erase:00000000 HAL_FLASHEx_Erase
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2336   .text.FLASH_PageErase:00000000 FLASH_PageErase
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:168    .text.HAL_FLASHEx_Erase:000000bc $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:176    .text.HAL_FLASHEx_Erase_IT:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:182    .text.HAL_FLASHEx_Erase_IT:00000000 HAL_FLASHEx_Erase_IT
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:294    .text.HAL_FLASHEx_Erase_IT:0000008c $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:301    .text.HAL_FLASHEx_OBProgram:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:307    .text.HAL_FLASHEx_OBProgram:00000000 HAL_FLASHEx_OBProgram
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2043   .text.FLASH_OB_ProtectedSectorsConfig:00000000 FLASH_OB_ProtectedSectorsConfig
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1461   .text.FLASH_OB_RDPConfig:00000000 FLASH_OB_RDPConfig
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2190   .text.FLASH_OB_UserConfig:00000000 FLASH_OB_UserConfig
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1587   .text.FLASH_OB_BORConfig:00000000 FLASH_OB_BORConfig
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1703   .text.FLASH_OB_BOOTBit1Config:00000000 FLASH_OB_BOOTBit1Config
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:530    .text.HAL_FLASHEx_OBProgram:0000013c $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:535    .text.HAL_FLASHEx_OBGetConfig:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:541    .text.HAL_FLASHEx_OBGetConfig:00000000 HAL_FLASHEx_OBGetConfig
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2007   .text.FLASH_OB_GetWRP:00000000 FLASH_OB_GetWRP
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1864   .text.FLASH_OB_GetRDP:00000000 FLASH_OB_GetRDP
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1822   .text.FLASH_OB_GetUser:00000000 FLASH_OB_GetUser
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1924   .text.FLASH_OB_GetBOR:00000000 FLASH_OB_GetBOR
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1966   .text.FLASH_OB_GetBOOTBit1:00000000 FLASH_OB_GetBOOTBit1
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:607    .text.HAL_FLASHEx_AdvOBProgram:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:613    .text.HAL_FLASHEx_AdvOBProgram:00000000 HAL_FLASHEx_AdvOBProgram
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:671    .text.HAL_FLASHEx_AdvOBGetConfig:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:677    .text.HAL_FLASHEx_AdvOBGetConfig:00000000 HAL_FLASHEx_AdvOBGetConfig
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:731    .text.HAL_FLASHEx_AdvOBGetConfig:00000038 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:736    .text.HAL_FLASHEx_OB_SelectPCROP:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:742    .text.HAL_FLASHEx_OB_SelectPCROP:00000000 HAL_FLASHEx_OB_SelectPCROP
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:859    .text.HAL_FLASHEx_OB_SelectPCROP:00000098 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:866    .text.HAL_FLASHEx_OB_DeSelectPCROP:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:872    .text.HAL_FLASHEx_OB_DeSelectPCROP:00000000 HAL_FLASHEx_OB_DeSelectPCROP
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:983    .text.HAL_FLASHEx_OB_DeSelectPCROP:0000008c $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:990    .text.HAL_FLASHEx_DATAEEPROM_Unlock:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:996    .text.HAL_FLASHEx_DATAEEPROM_Unlock:00000000 HAL_FLASHEx_DATAEEPROM_Unlock
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1101   .text.HAL_FLASHEx_DATAEEPROM_Unlock:00000050 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1108   .text.HAL_FLASHEx_DATAEEPROM_Lock:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1114   .text.HAL_FLASHEx_DATAEEPROM_Lock:00000000 HAL_FLASHEx_DATAEEPROM_Lock
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1145   .text.HAL_FLASHEx_DATAEEPROM_Lock:00000018 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1150   .text.HAL_FLASHEx_DATAEEPROM_Erase:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1156   .text.HAL_FLASHEx_DATAEEPROM_Erase:00000000 HAL_FLASHEx_DATAEEPROM_Erase
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1224   .text.HAL_FLASHEx_DATAEEPROM_Erase:00000050 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1230   .text.HAL_FLASHEx_DATAEEPROM_Program:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1236   .text.HAL_FLASHEx_DATAEEPROM_Program:00000000 HAL_FLASHEx_DATAEEPROM_Program
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1368   .text.HAL_FLASHEx_DATAEEPROM_Program:000000a8 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1374   .text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1380   .text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:00000000 HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1410   .text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:00000018 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1415   .text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1421   .text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:00000000 HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1450   .text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:00000018 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1456   .text.FLASH_OB_RDPConfig:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1575   .text.FLASH_OB_RDPConfig:00000094 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1582   .text.FLASH_OB_BORConfig:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1690   .text.FLASH_OB_BORConfig:00000084 $d
ARM GAS  C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s 			page 73


C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1698   .text.FLASH_OB_BOOTBit1Config:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1810   .text.FLASH_OB_BOOTBit1Config:00000088 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1817   .text.FLASH_OB_GetUser:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1854   .text.FLASH_OB_GetUser:00000018 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1859   .text.FLASH_OB_GetRDP:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1914   .text.FLASH_OB_GetRDP:00000030 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1919   .text.FLASH_OB_GetBOR:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1956   .text.FLASH_OB_GetBOR:00000018 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1961   .text.FLASH_OB_GetBOOTBit1:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:1997   .text.FLASH_OB_GetBOOTBit1:00000018 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2002   .text.FLASH_OB_GetWRP:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2033   .text.FLASH_OB_GetWRP:00000010 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2038   .text.FLASH_OB_ProtectedSectorsConfig:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2178   .text.FLASH_OB_ProtectedSectorsConfig:000000a8 $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2185   .text.FLASH_OB_UserConfig:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2322   .text.FLASH_OB_UserConfig:000000bc $d
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2330   .text.FLASH_PageErase:00000000 $t
C:\Users\lidka\AppData\Local\Temp\ccN3I7kh.s:2389   .text.FLASH_PageErase:0000003c $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
